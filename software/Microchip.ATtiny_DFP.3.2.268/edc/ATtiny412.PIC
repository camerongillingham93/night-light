<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<edc:PIC xmlns:atdf="http://crownking/atdf" xmlns:edc="http://crownking/edc" xmlns:ltx="http://crownking/ltx" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://crownking/edc edc/PIC.xsd" edc:name="ATtiny412" edc:arch="avr8" edc:procid="0x0000" atdf:architecture="AVR8X" atdf:family="AVR TINY" edc:hasFreeze="false">
  <edc:Properties>
    <edc:Property edc:propkey="file.registers.are.odd.address.accessible" edc:propvalue="true"/>
  </edc:Properties>
  <edc:Power>
    <edc:VDD edc:minvoltage="1.8" edc:maxvoltage="5.5" edc:nominalvoltage="5.000"/>
  </edc:Power>
  <edc:Programming edc:haslvp2="true" edc:haschecksum="false">
    <edc:ProgrammingRowSize edc:progop="cfg" edc:nzsize="1"/>
    <edc:ProgrammingRowSize edc:progop="eedata" edc:nzsize="32"/>
    <edc:ProgrammingRowSize edc:progop="pgm" edc:nzsize="64"/>
  </edc:Programming>
  <edc:ArchDef edc:name="avr8" edc:desc="avr8">
    <edc:MemTraits>
      <edc:ProgramMemTraits edc:addrinc="0x1" edc:locsize="0x2" edc:wordimpl="0xFFFF" edc:wordinit="0xFFFF" edc:wordsafe="0xFFFF" edc:wordsize="0xFFFF"/>
      <edc:DataMemTraits edc:addrinc="0x1" edc:locsize="0x1" edc:wordimpl="0xFF" edc:wordinit="0xFF" edc:wordsafe="0xFF" edc:wordsize="0x1"/>
      <edc:EEDataMemTraits edc:magicoffset="0x810000"/>
    </edc:MemTraits>
  </edc:ArchDef>
  <edc:InstructionSet edc:instructionsetid="avr8">
    <edc:InstructionSet edc:instructionsetid="avr8base"/>
    <edc:InstructionSet edc:instructionsetid="avr8brk"/>
    <edc:InstructionSet edc:instructionsetid="avr8elpm"/>
    <edc:InstructionSet edc:instructionsetid="avr8movw"/>
    <edc:InstructionSet edc:instructionsetid="avr8des"/>
    <edc:InstructionSet edc:instructionsetid="avr8lpm"/>
    <edc:InstructionSet edc:instructionsetid="avr8lpmx"/>
    <edc:InstructionSet edc:instructionsetid="avr8mega"/>
    <edc:InstructionSet edc:instructionsetid="avr8sram"/>
    <edc:InstructionSet edc:instructionsetid="avr8spmx"/>
    <edc:InstructionSet edc:instructionsetid="avr8mul"/>
    <edc:InstructionSet edc:instructionsetid="avr8spm"/>
    <edc:InstructionSet edc:instructionsetid="avr8eind"/>
    <edc:InstructionSet edc:instructionsetid="avr8elpmx"/>
    <edc:InstructionSet edc:instructionsetid="avr8rmw"/>
  </edc:InstructionSet>
  <edc:InterruptList>
    <edc:Interrupt edc:irq="1" edc:cname="NMI" edc:desc="" ltx:memberofperipheral="CRCSCAN"/>
    <edc:Interrupt edc:irq="2" edc:cname="VLM" edc:desc="" ltx:memberofperipheral="BOD"/>
    <edc:Interrupt edc:irq="3" edc:cname="PORT" edc:desc="" ltx:memberofperipheral="PORTA"/>
    <edc:Interrupt edc:irq="6" edc:cname="CNT" edc:desc="" ltx:memberofperipheral="RTC"/>
    <edc:Interrupt edc:irq="7" edc:cname="PIT" edc:desc="" ltx:memberofperipheral="RTC"/>
    <edc:Interrupt edc:irq="8" edc:cname="LUNF" edc:desc="" ltx:memberofperipheral="TCA0"/>
    <edc:Interrupt edc:irq="8" edc:cname="OVF" edc:desc="" ltx:memberofperipheral="TCA0"/>
    <edc:Interrupt edc:irq="9" edc:cname="HUNF" edc:desc="" ltx:memberofperipheral="TCA0"/>
    <edc:Interrupt edc:irq="10" edc:cname="CMP0" edc:desc="" ltx:memberofperipheral="TCA0"/>
    <edc:Interrupt edc:irq="10" edc:cname="LCMP0" edc:desc="" ltx:memberofperipheral="TCA0"/>
    <edc:Interrupt edc:irq="11" edc:cname="CMP1" edc:desc="" ltx:memberofperipheral="TCA0"/>
    <edc:Interrupt edc:irq="11" edc:cname="LCMP1" edc:desc="" ltx:memberofperipheral="TCA0"/>
    <edc:Interrupt edc:irq="12" edc:cname="CMP2" edc:desc="" ltx:memberofperipheral="TCA0"/>
    <edc:Interrupt edc:irq="12" edc:cname="LCMP2" edc:desc="" ltx:memberofperipheral="TCA0"/>
    <edc:Interrupt edc:irq="13" edc:cname="INT" edc:desc="" ltx:memberofperipheral="TCB0"/>
    <edc:Interrupt edc:irq="14" edc:cname="OVF" edc:desc="" ltx:memberofperipheral="TCD0"/>
    <edc:Interrupt edc:irq="15" edc:cname="TRIG" edc:desc="" ltx:memberofperipheral="TCD0"/>
    <edc:Interrupt edc:irq="16" edc:cname="AC" edc:desc="" ltx:memberofperipheral="AC0"/>
    <edc:Interrupt edc:irq="17" edc:cname="RESRDY" edc:desc="" ltx:memberofperipheral="ADC0"/>
    <edc:Interrupt edc:irq="18" edc:cname="WCOMP" edc:desc="" ltx:memberofperipheral="ADC0"/>
    <edc:Interrupt edc:irq="19" edc:cname="TWIS" edc:desc="" ltx:memberofperipheral="TWI0"/>
    <edc:Interrupt edc:irq="20" edc:cname="TWIM" edc:desc="" ltx:memberofperipheral="TWI0"/>
    <edc:Interrupt edc:irq="21" edc:cname="INT" edc:desc="" ltx:memberofperipheral="SPI0"/>
    <edc:Interrupt edc:irq="22" edc:cname="RXC" edc:desc="" ltx:memberofperipheral="USART0"/>
    <edc:Interrupt edc:irq="23" edc:cname="DRE" edc:desc="" ltx:memberofperipheral="USART0"/>
    <edc:Interrupt edc:irq="24" edc:cname="TXC" edc:desc="" ltx:memberofperipheral="USART0"/>
    <edc:Interrupt edc:irq="25" edc:cname="EE" edc:desc="" ltx:memberofperipheral="NVMCTRL"/>
  </edc:InterruptList>
  <edc:PeripheralList>
    <edc:Peripheral edc:cname="AC0" edc:desc=""/>
    <edc:Peripheral edc:cname="ADC0" edc:desc=""/>
    <edc:Peripheral edc:cname="BOD" edc:desc=""/>
    <edc:Peripheral edc:cname="CCL" edc:desc=""/>
    <edc:Peripheral edc:cname="CLKCTRL" edc:desc=""/>
    <edc:Peripheral edc:cname="CPU" edc:desc=""/>
    <edc:Peripheral edc:cname="CPUINT" edc:desc=""/>
    <edc:Peripheral edc:cname="CRCSCAN" edc:desc=""/>
    <edc:Peripheral edc:cname="DAC0" edc:desc=""/>
    <edc:Peripheral edc:cname="EVSYS" edc:desc=""/>
    <edc:Peripheral edc:cname="FUSE" edc:desc=""/>
    <edc:Peripheral edc:cname="GPIO" edc:desc=""/>
    <edc:Peripheral edc:cname="LOCKBIT" edc:desc=""/>
    <edc:Peripheral edc:cname="NVMCTRL" edc:desc=""/>
    <edc:Peripheral edc:cname="PORTA" edc:desc=""/>
    <edc:Peripheral edc:cname="PORTMUX" edc:desc=""/>
    <edc:Peripheral edc:cname="RSTCTRL" edc:desc=""/>
    <edc:Peripheral edc:cname="RTC" edc:desc=""/>
    <edc:Peripheral edc:cname="SIGROW" edc:desc=""/>
    <edc:Peripheral edc:cname="SLPCTRL" edc:desc=""/>
    <edc:Peripheral edc:cname="SPI0" edc:desc=""/>
    <edc:Peripheral edc:cname="SYSCFG" edc:desc=""/>
    <edc:Peripheral edc:cname="TCA0" edc:desc=""/>
    <edc:Peripheral edc:cname="TCB0" edc:desc=""/>
    <edc:Peripheral edc:cname="TCD0" edc:desc=""/>
    <edc:Peripheral edc:cname="TWI0" edc:desc=""/>
    <edc:Peripheral edc:cname="USART0" edc:desc=""/>
    <edc:Peripheral edc:cname="USERROW" edc:desc=""/>
    <edc:Peripheral edc:cname="VPORTA" edc:desc=""/>
    <edc:Peripheral edc:cname="VPORTB" edc:desc=""/>
    <edc:Peripheral edc:cname="VPORTC" edc:desc=""/>
    <edc:Peripheral edc:cname="VREF" edc:desc=""/>
    <edc:Peripheral edc:cname="WDT" edc:desc=""/>
  </edc:PeripheralList>
  <edc:ProgramSpace>
    <edc:CodeSector edc:regionid="PROGMEM" edc:beginaddr="0x0" edc:endaddr="0x800" atdf:pagesize="0x40" edc:rw="rw"/>
  </edc:ProgramSpace>
  <edc:DataSpace edc:magicoffset="0x800000">
    <edc:RegardlessOfMode>
      <edc:NMMRPlace edc:regionid="corenmmrs">
        <edc:SFRDef edc:nzwidth="0x10" edc:cname="PC" edc:impl="0xFFFF" edc:access="nnnnnnnnnnnnnnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:desc="Program Counter" edc:nmmrid="60"/>
        <edc:SFRDef edc:nzwidth="0x8" edc:cname="R0" edc:impl="0xFF" edc:access="nnnnnnnn" edc:por="xxxxxxxx" edc:mclr="xxxxxxxx" edc:desc="General-Purpose Register" edc:nmmrid="0"/>
        <edc:SFRDef edc:nzwidth="0x8" edc:cname="R1" edc:impl="0xFF" edc:access="nnnnnnnn" edc:por="xxxxxxxx" edc:mclr="xxxxxxxx" edc:desc="General-Purpose Register" edc:nmmrid="1"/>
        <edc:SFRDef edc:nzwidth="0x8" edc:cname="R2" edc:impl="0xFF" edc:access="nnnnnnnn" edc:por="xxxxxxxx" edc:mclr="xxxxxxxx" edc:desc="General-Purpose Register" edc:nmmrid="2"/>
        <edc:SFRDef edc:nzwidth="0x8" edc:cname="R3" edc:impl="0xFF" edc:access="nnnnnnnn" edc:por="xxxxxxxx" edc:mclr="xxxxxxxx" edc:desc="General-Purpose Register" edc:nmmrid="3"/>
        <edc:SFRDef edc:nzwidth="0x8" edc:cname="R4" edc:impl="0xFF" edc:access="nnnnnnnn" edc:por="xxxxxxxx" edc:mclr="xxxxxxxx" edc:desc="General-Purpose Register" edc:nmmrid="4"/>
        <edc:SFRDef edc:nzwidth="0x8" edc:cname="R5" edc:impl="0xFF" edc:access="nnnnnnnn" edc:por="xxxxxxxx" edc:mclr="xxxxxxxx" edc:desc="General-Purpose Register" edc:nmmrid="5"/>
        <edc:SFRDef edc:nzwidth="0x8" edc:cname="R6" edc:impl="0xFF" edc:access="nnnnnnnn" edc:por="xxxxxxxx" edc:mclr="xxxxxxxx" edc:desc="General-Purpose Register" edc:nmmrid="6"/>
        <edc:SFRDef edc:nzwidth="0x8" edc:cname="R7" edc:impl="0xFF" edc:access="nnnnnnnn" edc:por="xxxxxxxx" edc:mclr="xxxxxxxx" edc:desc="General-Purpose Register" edc:nmmrid="7"/>
        <edc:SFRDef edc:nzwidth="0x8" edc:cname="R8" edc:impl="0xFF" edc:access="nnnnnnnn" edc:por="xxxxxxxx" edc:mclr="xxxxxxxx" edc:desc="General-Purpose Register" edc:nmmrid="8"/>
        <edc:SFRDef edc:nzwidth="0x8" edc:cname="R9" edc:impl="0xFF" edc:access="nnnnnnnn" edc:por="xxxxxxxx" edc:mclr="xxxxxxxx" edc:desc="General-Purpose Register" edc:nmmrid="9"/>
        <edc:SFRDef edc:nzwidth="0x8" edc:cname="R10" edc:impl="0xFF" edc:access="nnnnnnnn" edc:por="xxxxxxxx" edc:mclr="xxxxxxxx" edc:desc="General-Purpose Register" edc:nmmrid="10"/>
        <edc:SFRDef edc:nzwidth="0x8" edc:cname="R11" edc:impl="0xFF" edc:access="nnnnnnnn" edc:por="xxxxxxxx" edc:mclr="xxxxxxxx" edc:desc="General-Purpose Register" edc:nmmrid="11"/>
        <edc:SFRDef edc:nzwidth="0x8" edc:cname="R12" edc:impl="0xFF" edc:access="nnnnnnnn" edc:por="xxxxxxxx" edc:mclr="xxxxxxxx" edc:desc="General-Purpose Register" edc:nmmrid="12"/>
        <edc:SFRDef edc:nzwidth="0x8" edc:cname="R13" edc:impl="0xFF" edc:access="nnnnnnnn" edc:por="xxxxxxxx" edc:mclr="xxxxxxxx" edc:desc="General-Purpose Register" edc:nmmrid="13"/>
        <edc:SFRDef edc:nzwidth="0x8" edc:cname="R14" edc:impl="0xFF" edc:access="nnnnnnnn" edc:por="xxxxxxxx" edc:mclr="xxxxxxxx" edc:desc="General-Purpose Register" edc:nmmrid="14"/>
        <edc:SFRDef edc:nzwidth="0x8" edc:cname="R15" edc:impl="0xFF" edc:access="nnnnnnnn" edc:por="xxxxxxxx" edc:mclr="xxxxxxxx" edc:desc="General-Purpose Register" edc:nmmrid="15"/>
        <edc:SFRDef edc:nzwidth="0x8" edc:cname="R16" edc:impl="0xFF" edc:access="nnnnnnnn" edc:por="xxxxxxxx" edc:mclr="xxxxxxxx" edc:desc="General-Purpose Register" edc:nmmrid="16"/>
        <edc:SFRDef edc:nzwidth="0x8" edc:cname="R17" edc:impl="0xFF" edc:access="nnnnnnnn" edc:por="xxxxxxxx" edc:mclr="xxxxxxxx" edc:desc="General-Purpose Register" edc:nmmrid="17"/>
        <edc:SFRDef edc:nzwidth="0x8" edc:cname="R18" edc:impl="0xFF" edc:access="nnnnnnnn" edc:por="xxxxxxxx" edc:mclr="xxxxxxxx" edc:desc="General-Purpose Register" edc:nmmrid="18"/>
        <edc:SFRDef edc:nzwidth="0x8" edc:cname="R19" edc:impl="0xFF" edc:access="nnnnnnnn" edc:por="xxxxxxxx" edc:mclr="xxxxxxxx" edc:desc="General-Purpose Register" edc:nmmrid="19"/>
        <edc:SFRDef edc:nzwidth="0x8" edc:cname="R20" edc:impl="0xFF" edc:access="nnnnnnnn" edc:por="xxxxxxxx" edc:mclr="xxxxxxxx" edc:desc="General-Purpose Register" edc:nmmrid="20"/>
        <edc:SFRDef edc:nzwidth="0x8" edc:cname="R21" edc:impl="0xFF" edc:access="nnnnnnnn" edc:por="xxxxxxxx" edc:mclr="xxxxxxxx" edc:desc="General-Purpose Register" edc:nmmrid="21"/>
        <edc:SFRDef edc:nzwidth="0x8" edc:cname="R22" edc:impl="0xFF" edc:access="nnnnnnnn" edc:por="xxxxxxxx" edc:mclr="xxxxxxxx" edc:desc="General-Purpose Register" edc:nmmrid="22"/>
        <edc:SFRDef edc:nzwidth="0x8" edc:cname="R23" edc:impl="0xFF" edc:access="nnnnnnnn" edc:por="xxxxxxxx" edc:mclr="xxxxxxxx" edc:desc="General-Purpose Register" edc:nmmrid="23"/>
        <edc:SFRDef edc:nzwidth="0x8" edc:cname="R24" edc:impl="0xFF" edc:access="nnnnnnnn" edc:por="xxxxxxxx" edc:mclr="xxxxxxxx" edc:desc="General-Purpose Register" edc:nmmrid="24"/>
        <edc:SFRDef edc:nzwidth="0x8" edc:cname="R25" edc:impl="0xFF" edc:access="nnnnnnnn" edc:por="xxxxxxxx" edc:mclr="xxxxxxxx" edc:desc="General-Purpose Register" edc:nmmrid="25"/>
        <edc:SFRDef edc:nzwidth="0x8" edc:cname="R26" edc:impl="0xFF" edc:access="nnnnnnnn" edc:por="xxxxxxxx" edc:mclr="xxxxxxxx" edc:desc="General-Purpose Register" edc:nmmrid="26"/>
        <edc:SFRDef edc:nzwidth="0x8" edc:cname="R27" edc:impl="0xFF" edc:access="nnnnnnnn" edc:por="xxxxxxxx" edc:mclr="xxxxxxxx" edc:desc="General-Purpose Register" edc:nmmrid="27"/>
        <edc:SFRDef edc:nzwidth="0x8" edc:cname="R28" edc:impl="0xFF" edc:access="nnnnnnnn" edc:por="xxxxxxxx" edc:mclr="xxxxxxxx" edc:desc="General-Purpose Register" edc:nmmrid="28"/>
        <edc:SFRDef edc:nzwidth="0x8" edc:cname="R29" edc:impl="0xFF" edc:access="nnnnnnnn" edc:por="xxxxxxxx" edc:mclr="xxxxxxxx" edc:desc="General-Purpose Register" edc:nmmrid="29"/>
        <edc:SFRDef edc:nzwidth="0x8" edc:cname="R30" edc:impl="0xFF" edc:access="nnnnnnnn" edc:por="xxxxxxxx" edc:mclr="xxxxxxxx" edc:desc="General-Purpose Register" edc:nmmrid="30"/>
        <edc:SFRDef edc:nzwidth="0x8" edc:cname="R31" edc:impl="0xFF" edc:access="nnnnnnnn" edc:por="xxxxxxxx" edc:mclr="xxxxxxxx" edc:desc="General-Purpose Register" edc:nmmrid="31"/>
      </edc:NMMRPlace>
      <edc:SFRDataSector edc:regionid="IO" edc:beginaddr="0x0" edc:endaddr="0x100A" edc:rw="rw">
        <edc:SFRDef ltx:memberofperipheral="VPORTA" edc:cname="DIR" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x0"/>
        <edc:SFRDef ltx:memberofperipheral="VPORTA" edc:cname="OUT" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1"/>
        <edc:SFRDef ltx:memberofperipheral="VPORTA" edc:cname="IN" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x2"/>
        <edc:SFRDef ltx:memberofperipheral="VPORTA" edc:cname="INTFLAGS" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x3">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="VPORTA">
              <edc:SFRFieldDef edc:cname="INT" edc:nzwidth="0x8" edc:desc="Pin Interrupt"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="VPORTB" edc:cname="DIR" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x4"/>
        <edc:SFRDef ltx:memberofperipheral="VPORTB" edc:cname="OUT" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x5"/>
        <edc:SFRDef ltx:memberofperipheral="VPORTB" edc:cname="IN" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x6"/>
        <edc:SFRDef ltx:memberofperipheral="VPORTB" edc:cname="INTFLAGS" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x7">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="VPORTB">
              <edc:SFRFieldDef edc:cname="INT" edc:nzwidth="0x8" edc:desc="Pin Interrupt"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="VPORTC" edc:cname="DIR" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x8"/>
        <edc:SFRDef ltx:memberofperipheral="VPORTC" edc:cname="OUT" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x9"/>
        <edc:SFRDef ltx:memberofperipheral="VPORTC" edc:cname="IN" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0xA"/>
        <edc:SFRDef ltx:memberofperipheral="VPORTC" edc:cname="INTFLAGS" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0xB">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="VPORTC">
              <edc:SFRFieldDef edc:cname="INT" edc:nzwidth="0x8" edc:desc="Pin Interrupt"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:AdjustPoint edc:offset="0x10" edc:_addr="0xC"/>
        <edc:SFRDef ltx:memberofperipheral="GPIO" edc:cname="GPIOR0" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1C"/>
        <edc:SFRDef ltx:memberofperipheral="GPIO" edc:cname="GPIOR1" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1D"/>
        <edc:SFRDef ltx:memberofperipheral="GPIO" edc:cname="GPIOR2" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1E"/>
        <edc:SFRDef ltx:memberofperipheral="GPIO" edc:cname="GPIOR3" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1F"/>
        <edc:AdjustPoint edc:offset="0x14" edc:_addr="0x20"/>
        <edc:SFRDef ltx:memberofperipheral="CPU" edc:cname="CCP" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x34">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="CPU">
              <edc:SFRFieldDef edc:cname="CCP" edc:nzwidth="0x8" edc:desc="CCP signature">
                <edc:SFRFieldSemantic edc:cname="SPM" edc:desc="SPM Instruction Protection" edc:when="(field &amp; 0xFF) == 0x9D"/>
                <edc:SFRFieldSemantic edc:cname="IOREG" edc:desc="IO Register Protection" edc:when="(field &amp; 0xFF) == 0xD8"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:AdjustPoint edc:offset="0x8" edc:_addr="0x35"/>
        <edc:SFRDef ltx:memberofperipheral="CPU" edc:cname="SPL" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x3D"/>
        <edc:SFRDef ltx:memberofperipheral="CPU" edc:cname="SPH" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x3E"/>
        <edc:SFRDef ltx:memberofperipheral="CPU" edc:cname="SREG" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x3F">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="CPU">
              <edc:SFRFieldDef edc:cname="C" edc:nzwidth="0x1" edc:desc="Carry Flag"/>
              <edc:SFRFieldDef edc:cname="Z" edc:nzwidth="0x1" edc:desc="Zero Flag"/>
              <edc:SFRFieldDef edc:cname="N" edc:nzwidth="0x1" edc:desc="Negative Flag"/>
              <edc:SFRFieldDef edc:cname="V" edc:nzwidth="0x1" edc:desc="Two's Complement Overflow Flag"/>
              <edc:SFRFieldDef edc:cname="S" edc:nzwidth="0x1" edc:desc="N Exclusive Or V Flag"/>
              <edc:SFRFieldDef edc:cname="H" edc:nzwidth="0x1" edc:desc="Half Carry Flag"/>
              <edc:SFRFieldDef edc:cname="T" edc:nzwidth="0x1" edc:desc="Transfer Bit"/>
              <edc:SFRFieldDef edc:cname="I" edc:nzwidth="0x1" edc:desc="Global Interrupt Enable Flag"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="RSTCTRL" edc:cname="RSTFR" edc:nzwidth="0x8" edc:access="--nnnnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3F" edc:_addr="0x40">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="RSTCTRL">
              <edc:SFRFieldDef edc:cname="PORF" edc:nzwidth="0x1" edc:desc="Power on Reset flag"/>
              <edc:SFRFieldDef edc:cname="BORF" edc:nzwidth="0x1" edc:desc="Brown out detector Reset flag"/>
              <edc:SFRFieldDef edc:cname="EXTRF" edc:nzwidth="0x1" edc:desc="External Reset flag"/>
              <edc:SFRFieldDef edc:cname="WDRF" edc:nzwidth="0x1" edc:desc="Watch dog Reset flag"/>
              <edc:SFRFieldDef edc:cname="SWRF" edc:nzwidth="0x1" edc:desc="Software Reset flag"/>
              <edc:SFRFieldDef edc:cname="UPDIRF" edc:nzwidth="0x1" edc:desc="UPDI Reset flag"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="RSTCTRL" edc:cname="SWRR" edc:nzwidth="0x8" edc:access="-------n" edc:por="00000000" edc:mclr="00000000" edc:impl="0x1" edc:_addr="0x41">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="RSTCTRL">
              <edc:SFRFieldDef edc:cname="SWRE" edc:nzwidth="0x1" edc:desc="Software reset enable"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:AdjustPoint edc:offset="0xE" edc:_addr="0x42"/>
        <edc:SFRDef ltx:memberofperipheral="SLPCTRL" edc:cname="CTRLA" edc:nzwidth="0x8" edc:access="-----nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x7" edc:_addr="0x50">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SLPCTRL">
              <edc:SFRFieldDef edc:cname="SEN" edc:nzwidth="0x1" edc:desc="Sleep enable"/>
              <edc:SFRFieldDef edc:cname="SMODE" edc:nzwidth="0x2" edc:desc="Sleep mode">
                <edc:SFRFieldSemantic edc:cname="IDLE" edc:desc="Idle mode" edc:when="(field &amp; 0x3) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="STDBY" edc:desc="Standby Mode" edc:when="(field &amp; 0x3) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="PDOWN" edc:desc="Power-down Mode" edc:when="(field &amp; 0x3) == 0x02"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:AdjustPoint edc:offset="0xF" edc:_addr="0x51"/>
        <edc:SFRDef ltx:memberofperipheral="CLKCTRL" edc:cname="MCLKCTRLA" edc:nzwidth="0x8" edc:access="n-----nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x83" edc:_addr="0x60">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="CLKCTRL">
              <edc:SFRFieldDef edc:cname="CLKSEL" edc:nzwidth="0x2" edc:desc="Clock select">
                <edc:SFRFieldSemantic edc:cname="OSC20M" edc:desc="20MHz internal oscillator" edc:when="(field &amp; 0x3) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="OSCULP32K" edc:desc="32KHz internal Ultra Low Power oscillator" edc:when="(field &amp; 0x3) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="XOSC32K" edc:desc="32.768kHz external crystal oscillator" edc:when="(field &amp; 0x3) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="EXTCLK" edc:desc="External clock" edc:when="(field &amp; 0x3) == 0x03"/>
              </edc:SFRFieldDef>
              <edc:AdjustPoint edc:offset="0x5"/>
              <edc:SFRFieldDef edc:cname="CLKOUT" edc:nzwidth="0x1" edc:desc="System clock out"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="CLKCTRL" edc:cname="MCLKCTRLB" edc:nzwidth="0x8" edc:access="---nnnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x1F" edc:_addr="0x61">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="CLKCTRL">
              <edc:SFRFieldDef edc:cname="PEN" edc:nzwidth="0x1" edc:desc="Prescaler enable"/>
              <edc:SFRFieldDef edc:cname="PDIV" edc:nzwidth="0x4" edc:desc="Prescaler division">
                <edc:SFRFieldSemantic edc:cname="2X" edc:desc="2X" edc:when="(field &amp; 0xF) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="4X" edc:desc="4X" edc:when="(field &amp; 0xF) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="8X" edc:desc="8X" edc:when="(field &amp; 0xF) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="16X" edc:desc="16X" edc:when="(field &amp; 0xF) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="32X" edc:desc="32X" edc:when="(field &amp; 0xF) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="64X" edc:desc="64X" edc:when="(field &amp; 0xF) == 0x05"/>
                <edc:SFRFieldSemantic edc:cname="6X" edc:desc="6X" edc:when="(field &amp; 0xF) == 0x08"/>
                <edc:SFRFieldSemantic edc:cname="10X" edc:desc="10X" edc:when="(field &amp; 0xF) == 0x09"/>
                <edc:SFRFieldSemantic edc:cname="12X" edc:desc="12X" edc:when="(field &amp; 0xF) == 0x0A"/>
                <edc:SFRFieldSemantic edc:cname="24X" edc:desc="24X" edc:when="(field &amp; 0xF) == 0x0B"/>
                <edc:SFRFieldSemantic edc:cname="48X" edc:desc="48X" edc:when="(field &amp; 0xF) == 0x0C"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="CLKCTRL" edc:cname="MCLKLOCK" edc:nzwidth="0x8" edc:access="-------n" edc:impl="0x1" edc:_addr="0x62">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="CLKCTRL">
              <edc:SFRFieldDef edc:cname="LOCKEN" edc:nzwidth="0x1" edc:desc="lock ebable"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="CLKCTRL" edc:cname="MCLKSTATUS" edc:nzwidth="0x8" edc:access="rrrr---r" edc:por="00000000" edc:mclr="00000000" edc:impl="0xF1" edc:_addr="0x63">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="CLKCTRL">
              <edc:SFRFieldDef edc:cname="SOSC" edc:nzwidth="0x1" edc:desc="System Oscillator changing"/>
              <edc:AdjustPoint edc:offset="0x3"/>
              <edc:SFRFieldDef edc:cname="OSC20MS" edc:nzwidth="0x1" edc:desc="20MHz oscillator status"/>
              <edc:SFRFieldDef edc:cname="OSC32KS" edc:nzwidth="0x1" edc:desc="32KHz oscillator status"/>
              <edc:SFRFieldDef edc:cname="XOSC32KS" edc:nzwidth="0x1" edc:desc="32.768 kHz Crystal Oscillator status"/>
              <edc:SFRFieldDef edc:cname="EXTS" edc:nzwidth="0x1" edc:desc="External Clock status"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:AdjustPoint edc:offset="0xC" edc:_addr="0x64"/>
        <edc:SFRDef ltx:memberofperipheral="CLKCTRL" edc:cname="OSC20MCTRLA" edc:nzwidth="0x8" edc:access="------n-" edc:impl="0x2" edc:_addr="0x70">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="CLKCTRL">
              <edc:AdjustPoint edc:offset="0x1"/>
              <edc:SFRFieldDef edc:cname="RUNSTDBY" edc:nzwidth="0x1" edc:desc="Run standby"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="CLKCTRL" edc:cname="OSC20MCALIBA" edc:nzwidth="0x8" edc:access="--nnnnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3F" edc:_addr="0x71">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="CLKCTRL">
              <edc:SFRFieldDef edc:cname="CAL20M" edc:nzwidth="0x6" edc:desc="Calibration"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="CLKCTRL" edc:cname="OSC20MCALIBB" edc:nzwidth="0x8" edc:access="n---nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x8F" edc:_addr="0x72">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="CLKCTRL">
              <edc:SFRFieldDef edc:cname="TEMPCAL20M" edc:nzwidth="0x4" edc:desc="Oscillator temperature coefficient"/>
              <edc:AdjustPoint edc:offset="0x3"/>
              <edc:SFRFieldDef edc:cname="LOCK" edc:nzwidth="0x1" edc:desc="Lock"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:AdjustPoint edc:offset="0x5" edc:_addr="0x73"/>
        <edc:SFRDef ltx:memberofperipheral="CLKCTRL" edc:cname="OSC32KCTRLA" edc:nzwidth="0x8" edc:access="------n-" edc:por="00000000" edc:mclr="00000000" edc:impl="0x2" edc:_addr="0x78">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="CLKCTRL">
              <edc:AdjustPoint edc:offset="0x1"/>
              <edc:SFRFieldDef edc:cname="RUNSTDBY" edc:nzwidth="0x1" edc:desc="Run standby"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:AdjustPoint edc:offset="0x3" edc:_addr="0x79"/>
        <edc:SFRDef ltx:memberofperipheral="CLKCTRL" edc:cname="XOSC32KCTRLA" edc:nzwidth="0x8" edc:access="--nn-nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x37" edc:_addr="0x7C">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="CLKCTRL">
              <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="Enable"/>
              <edc:SFRFieldDef edc:cname="RUNSTDBY" edc:nzwidth="0x1" edc:desc="Run standby"/>
              <edc:SFRFieldDef edc:cname="SEL" edc:nzwidth="0x1" edc:desc="Select"/>
              <edc:AdjustPoint edc:offset="0x1"/>
              <edc:SFRFieldDef edc:cname="CSUT" edc:nzwidth="0x2" edc:desc="Crystal startup time">
                <edc:SFRFieldSemantic edc:cname="1K" edc:desc="1K cycles" edc:when="(field &amp; 0x3) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="16K" edc:desc="16K cycles" edc:when="(field &amp; 0x3) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="32K" edc:desc="32K cycles" edc:when="(field &amp; 0x3) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="64K" edc:desc="64K cycles" edc:when="(field &amp; 0x3) == 0x03"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:AdjustPoint edc:offset="0x3" edc:_addr="0x7D"/>
        <edc:SFRDef ltx:memberofperipheral="BOD" edc:cname="CTRLA" edc:nzwidth="0x8" edc:access="---rrrnn" edc:por="00000101" edc:mclr="00000101" edc:impl="0x1F" edc:_addr="0x80">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="BOD">
              <edc:SFRFieldDef edc:cname="SLEEP" edc:nzwidth="0x2" edc:desc="Operation in sleep mode">
                <edc:SFRFieldSemantic edc:cname="DIS" edc:desc="Disabled" edc:when="(field &amp; 0x3) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Enabled" edc:when="(field &amp; 0x3) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="SAMPLED" edc:desc="Sampled" edc:when="(field &amp; 0x3) == 0x02"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="ACTIVE" edc:nzwidth="0x2" edc:desc="Operation in active mode">
                <edc:SFRFieldSemantic edc:cname="DIS" edc:desc="Disabled" edc:when="(field &amp; 0x3) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Enabled" edc:when="(field &amp; 0x3) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="SAMPLED" edc:desc="Sampled" edc:when="(field &amp; 0x3) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="ENWAKE" edc:desc="Enabled with wakeup halt" edc:when="(field &amp; 0x3) == 0x03"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="SAMPFREQ" edc:nzwidth="0x1" edc:desc="Sample frequency">
                <edc:SFRFieldSemantic edc:cname="1KHZ" edc:desc="1kHz sampling" edc:when="(field &amp; 0x1) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="125Hz" edc:desc="125Hz sampling" edc:when="(field &amp; 0x1) == 0x01"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="BOD" edc:cname="CTRLB" edc:nzwidth="0x8" edc:access="-----rrr" edc:por="00000000" edc:mclr="00000000" edc:impl="0x7" edc:_addr="0x81">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="BOD">
              <edc:SFRFieldDef edc:cname="LVL" edc:nzwidth="0x3" edc:desc="Bod level">
                <edc:SFRFieldSemantic edc:cname="BODLEVEL0" edc:desc="1.8 V" edc:when="(field &amp; 0x7) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="BODLEVEL2" edc:desc="2.6 V" edc:when="(field &amp; 0x7) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="BODLEVEL7" edc:desc="4.2 V" edc:when="(field &amp; 0x7) == 0x07"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:AdjustPoint edc:offset="0x6" edc:_addr="0x82"/>
        <edc:SFRDef ltx:memberofperipheral="BOD" edc:cname="VLMCTRLA" edc:nzwidth="0x8" edc:access="------nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3" edc:_addr="0x88">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="BOD">
              <edc:SFRFieldDef edc:cname="VLMLVL" edc:nzwidth="0x2" edc:desc="voltage level monitor level">
                <edc:SFRFieldSemantic edc:cname="5ABOVE" edc:desc="VLM threshold 5% above BOD level" edc:when="(field &amp; 0x3) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="15ABOVE" edc:desc="VLM threshold 15% above BOD level" edc:when="(field &amp; 0x3) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="25ABOVE" edc:desc="VLM threshold 25% above BOD level" edc:when="(field &amp; 0x3) == 0x02"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="BOD" edc:cname="INTCTRL" edc:nzwidth="0x8" edc:access="-----nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x7" edc:_addr="0x89">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="BOD">
              <edc:SFRFieldDef edc:cname="VLMIE" edc:nzwidth="0x1" edc:desc="voltage level monitor interrrupt enable"/>
              <edc:SFRFieldDef edc:cname="VLMCFG" edc:nzwidth="0x2" edc:desc="Configuration">
                <edc:SFRFieldSemantic edc:cname="BELOW" edc:desc="Interrupt when supply goes below VLM level" edc:when="(field &amp; 0x3) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="ABOVE" edc:desc="Interrupt when supply goes above VLM level" edc:when="(field &amp; 0x3) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="CROSS" edc:desc="Interrupt when supply crosses VLM level" edc:when="(field &amp; 0x3) == 0x02"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="BOD" edc:cname="INTFLAGS" edc:nzwidth="0x8" edc:access="-------n" edc:por="00000000" edc:mclr="00000000" edc:impl="0x1" edc:_addr="0x8A">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="BOD">
              <edc:SFRFieldDef edc:cname="VLMIF" edc:nzwidth="0x1" edc:desc="Voltage level monitor interrupt flag"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="BOD" edc:cname="STATUS" edc:nzwidth="0x8" edc:access="-------r" edc:por="00000000" edc:mclr="00000000" edc:impl="0x1" edc:_addr="0x8B">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="BOD">
              <edc:SFRFieldDef edc:cname="VLMS" edc:nzwidth="0x1" edc:desc="Voltage level monitor status"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:AdjustPoint edc:offset="0x14" edc:_addr="0x8C"/>
        <edc:SFRDef ltx:memberofperipheral="VREF" edc:cname="CTRLA" edc:nzwidth="0x8" edc:access="-nnn-nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x77" edc:_addr="0xA0">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="VREF">
              <edc:SFRFieldDef edc:cname="DAC0REFSEL" edc:nzwidth="0x3" edc:desc="DAC0/AC0 reference select">
                <edc:SFRFieldSemantic edc:cname="0V55" edc:desc="Voltage reference at 0.55V" edc:when="(field &amp; 0x7) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="1V1" edc:desc="Voltage reference at 1.1V" edc:when="(field &amp; 0x7) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="2V5" edc:desc="Voltage reference at 2.5V" edc:when="(field &amp; 0x7) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="4V34" edc:desc="Voltage reference at 4.34V" edc:when="(field &amp; 0x7) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="1V5" edc:desc="Voltage reference at 1.5V" edc:when="(field &amp; 0x7) == 0x04"/>
              </edc:SFRFieldDef>
              <edc:AdjustPoint edc:offset="0x1"/>
              <edc:SFRFieldDef edc:cname="ADC0REFSEL" edc:nzwidth="0x3" edc:desc="ADC0 reference select">
                <edc:SFRFieldSemantic edc:cname="0V55" edc:desc="Voltage reference at 0.55V" edc:when="(field &amp; 0x7) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="1V1" edc:desc="Voltage reference at 1.1V" edc:when="(field &amp; 0x7) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="2V5" edc:desc="Voltage reference at 2.5V" edc:when="(field &amp; 0x7) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="4V34" edc:desc="Voltage reference at 4.34V" edc:when="(field &amp; 0x7) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="1V5" edc:desc="Voltage reference at 1.5V" edc:when="(field &amp; 0x7) == 0x04"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="VREF" edc:cname="CTRLB" edc:nzwidth="0x8" edc:access="------nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3" edc:_addr="0xA1">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="VREF">
              <edc:SFRFieldDef edc:cname="DAC0REFEN" edc:nzwidth="0x1" edc:desc="DAC0/AC0 reference enable"/>
              <edc:SFRFieldDef edc:cname="ADC0REFEN" edc:nzwidth="0x1" edc:desc="ADC0 reference enable"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:AdjustPoint edc:offset="0x5E" edc:_addr="0xA2"/>
        <edc:SFRDef ltx:memberofperipheral="WDT" edc:cname="CTRLA" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x100">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="WDT">
              <edc:SFRFieldDef edc:cname="PERIOD" edc:nzwidth="0x4" edc:desc="Period">
                <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="Watch-Dog timer Off" edc:when="(field &amp; 0xF) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="8CLK" edc:desc="8 cycles (8ms)" edc:when="(field &amp; 0xF) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="16CLK" edc:desc="16 cycles (16ms)" edc:when="(field &amp; 0xF) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="32CLK" edc:desc="32 cycles (32ms)" edc:when="(field &amp; 0xF) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="64CLK" edc:desc="64 cycles (64ms)" edc:when="(field &amp; 0xF) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="128CLK" edc:desc="128 cycles (0.128s)" edc:when="(field &amp; 0xF) == 0x05"/>
                <edc:SFRFieldSemantic edc:cname="256CLK" edc:desc="256 cycles (0.256s)" edc:when="(field &amp; 0xF) == 0x06"/>
                <edc:SFRFieldSemantic edc:cname="512CLK" edc:desc="512 cycles (0.512s)" edc:when="(field &amp; 0xF) == 0x07"/>
                <edc:SFRFieldSemantic edc:cname="1KCLK" edc:desc="1K cycles (1.0s)" edc:when="(field &amp; 0xF) == 0x08"/>
                <edc:SFRFieldSemantic edc:cname="2KCLK" edc:desc="2K cycles (2.0s)" edc:when="(field &amp; 0xF) == 0x09"/>
                <edc:SFRFieldSemantic edc:cname="4KCLK" edc:desc="4K cycles (4.1s)" edc:when="(field &amp; 0xF) == 0x0A"/>
                <edc:SFRFieldSemantic edc:cname="8KCLK" edc:desc="8K cycles (8.2s)" edc:when="(field &amp; 0xF) == 0x0B"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="WINDOW" edc:nzwidth="0x4" edc:desc="Window">
                <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="Window mode off" edc:when="(field &amp; 0xF) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="8CLK" edc:desc="8 cycles (8ms)" edc:when="(field &amp; 0xF) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="16CLK" edc:desc="16 cycles (16ms)" edc:when="(field &amp; 0xF) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="32CLK" edc:desc="32 cycles (32ms)" edc:when="(field &amp; 0xF) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="64CLK" edc:desc="64 cycles (64ms)" edc:when="(field &amp; 0xF) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="128CLK" edc:desc="128 cycles (0.128s)" edc:when="(field &amp; 0xF) == 0x05"/>
                <edc:SFRFieldSemantic edc:cname="256CLK" edc:desc="256 cycles (0.256s)" edc:when="(field &amp; 0xF) == 0x06"/>
                <edc:SFRFieldSemantic edc:cname="512CLK" edc:desc="512 cycles (0.512s)" edc:when="(field &amp; 0xF) == 0x07"/>
                <edc:SFRFieldSemantic edc:cname="1KCLK" edc:desc="1K cycles (1.0s)" edc:when="(field &amp; 0xF) == 0x08"/>
                <edc:SFRFieldSemantic edc:cname="2KCLK" edc:desc="2K cycles (2.0s)" edc:when="(field &amp; 0xF) == 0x09"/>
                <edc:SFRFieldSemantic edc:cname="4KCLK" edc:desc="4K cycles (4.1s)" edc:when="(field &amp; 0xF) == 0x0A"/>
                <edc:SFRFieldSemantic edc:cname="8KCLK" edc:desc="8K cycles (8.2s)" edc:when="(field &amp; 0xF) == 0x0B"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="WDT" edc:cname="STATUS" edc:nzwidth="0x8" edc:access="n------r" edc:por="00000000" edc:mclr="00000000" edc:impl="0x81" edc:_addr="0x101">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="WDT">
              <edc:SFRFieldDef edc:cname="SYNCBUSY" edc:nzwidth="0x1" edc:desc="Syncronization busy"/>
              <edc:AdjustPoint edc:offset="0x6"/>
              <edc:SFRFieldDef edc:cname="LOCK" edc:nzwidth="0x1" edc:desc="Lock enable"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:AdjustPoint edc:offset="0xE" edc:_addr="0x102"/>
        <edc:SFRDef ltx:memberofperipheral="CPUINT" edc:cname="CTRLA" edc:nzwidth="0x8" edc:access="-nn----n" edc:por="00000000" edc:mclr="00000000" edc:impl="0x61" edc:_addr="0x110">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="CPUINT">
              <edc:SFRFieldDef edc:cname="LVL0RR" edc:nzwidth="0x1" edc:desc="Round-robin Scheduling Enable"/>
              <edc:AdjustPoint edc:offset="0x4"/>
              <edc:SFRFieldDef edc:cname="CVT" edc:nzwidth="0x1" edc:desc="Compact Vector Table"/>
              <edc:SFRFieldDef edc:cname="IVSEL" edc:nzwidth="0x1" edc:desc="Interrupt Vector Select"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="CPUINT" edc:cname="STATUS" edc:nzwidth="0x8" edc:access="r-----rr" edc:por="00000000" edc:mclr="00000000" edc:impl="0x83" edc:_addr="0x111">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="CPUINT">
              <edc:SFRFieldDef edc:cname="LVL0EX" edc:nzwidth="0x1" edc:desc="Level 0 Interrupt Executing"/>
              <edc:SFRFieldDef edc:cname="LVL1EX" edc:nzwidth="0x1" edc:desc="Level 1 Interrupt Executing"/>
              <edc:AdjustPoint edc:offset="0x5"/>
              <edc:SFRFieldDef edc:cname="NMIEX" edc:nzwidth="0x1" edc:desc="Non-maskable Interrupt Executing"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="CPUINT" edc:cname="LVL0PRI" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x112">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="CPUINT">
              <edc:SFRFieldDef edc:cname="LVL0PRI" edc:nzwidth="0x8" edc:desc="Interrupt Level Priority"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="CPUINT" edc:cname="LVL1VEC" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x113">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="CPUINT">
              <edc:SFRFieldDef edc:cname="LVL1VEC" edc:nzwidth="0x8" edc:desc="Interrupt Vector with High Priority"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:AdjustPoint edc:offset="0xC" edc:_addr="0x114"/>
        <edc:SFRDef ltx:memberofperipheral="CRCSCAN" edc:cname="CTRLA" edc:nzwidth="0x8" edc:access="n-----nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x83" edc:_addr="0x120">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="CRCSCAN">
              <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="Enable CRC scan"/>
              <edc:SFRFieldDef edc:cname="NMIEN" edc:nzwidth="0x1" edc:desc="Enable NMI Trigger"/>
              <edc:AdjustPoint edc:offset="0x5"/>
              <edc:SFRFieldDef edc:cname="RESET" edc:nzwidth="0x1" edc:desc="Reset CRC scan"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="CRCSCAN" edc:cname="CTRLB" edc:nzwidth="0x8" edc:access="--nn--nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x33" edc:_addr="0x121">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="CRCSCAN">
              <edc:SFRFieldDef edc:cname="SRC" edc:nzwidth="0x2" edc:desc="CRC Source">
                <edc:SFRFieldSemantic edc:cname="FLASH" edc:desc="CRC on entire flash" edc:when="(field &amp; 0x3) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="APPLICATION" edc:desc="CRC on boot and appl section of flash" edc:when="(field &amp; 0x3) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="BOOT" edc:desc="CRC on boot section of flash" edc:when="(field &amp; 0x3) == 0x02"/>
              </edc:SFRFieldDef>
              <edc:AdjustPoint edc:offset="0x2"/>
              <edc:SFRFieldDef edc:cname="MODE" edc:nzwidth="0x2" edc:desc="CRC Flash Access Mode">
                <edc:SFRFieldSemantic edc:cname="PRIORITY" edc:desc="Priority to flash" edc:when="(field &amp; 0x3) == 0x00"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="CRCSCAN" edc:cname="STATUS" edc:nzwidth="0x8" edc:access="------rr" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3" edc:_addr="0x122">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="CRCSCAN">
              <edc:SFRFieldDef edc:cname="BUSY" edc:nzwidth="0x1" edc:desc="CRC Busy"/>
              <edc:SFRFieldDef edc:cname="OK" edc:nzwidth="0x1" edc:desc="CRC Ok"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:AdjustPoint edc:offset="0x1D" edc:_addr="0x123"/>
        <edc:SFRDef ltx:memberofperipheral="RTC" edc:cname="CTRLA" edc:nzwidth="0x8" edc:access="nnnnn--n" edc:por="00000000" edc:mclr="00000000" edc:impl="0xF9" edc:_addr="0x140">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="RTC">
              <edc:SFRFieldDef edc:cname="RTCEN" edc:nzwidth="0x1" edc:desc="Enable"/>
              <edc:AdjustPoint edc:offset="0x2"/>
              <edc:SFRFieldDef edc:cname="PRESCALER" edc:nzwidth="0x4" edc:desc="Prescaling Factor">
                <edc:SFRFieldSemantic edc:cname="DIV1" edc:desc="RTC Clock / 1" edc:when="(field &amp; 0xF) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="DIV2" edc:desc="RTC Clock / 2" edc:when="(field &amp; 0xF) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="DIV4" edc:desc="RTC Clock / 4" edc:when="(field &amp; 0xF) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="DIV8" edc:desc="RTC Clock / 8" edc:when="(field &amp; 0xF) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="DIV16" edc:desc="RTC Clock / 16" edc:when="(field &amp; 0xF) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="DIV32" edc:desc="RTC Clock / 32" edc:when="(field &amp; 0xF) == 0x05"/>
                <edc:SFRFieldSemantic edc:cname="DIV64" edc:desc="RTC Clock / 64" edc:when="(field &amp; 0xF) == 0x06"/>
                <edc:SFRFieldSemantic edc:cname="DIV128" edc:desc="RTC Clock / 128" edc:when="(field &amp; 0xF) == 0x07"/>
                <edc:SFRFieldSemantic edc:cname="DIV256" edc:desc="RTC Clock / 256" edc:when="(field &amp; 0xF) == 0x08"/>
                <edc:SFRFieldSemantic edc:cname="DIV512" edc:desc="RTC Clock / 512" edc:when="(field &amp; 0xF) == 0x09"/>
                <edc:SFRFieldSemantic edc:cname="DIV1024" edc:desc="RTC Clock / 1024" edc:when="(field &amp; 0xF) == 0x0A"/>
                <edc:SFRFieldSemantic edc:cname="DIV2048" edc:desc="RTC Clock / 2048" edc:when="(field &amp; 0xF) == 0x0B"/>
                <edc:SFRFieldSemantic edc:cname="DIV4096" edc:desc="RTC Clock / 4096" edc:when="(field &amp; 0xF) == 0x0C"/>
                <edc:SFRFieldSemantic edc:cname="DIV8192" edc:desc="RTC Clock / 8192" edc:when="(field &amp; 0xF) == 0x0D"/>
                <edc:SFRFieldSemantic edc:cname="DIV16384" edc:desc="RTC Clock / 16384" edc:when="(field &amp; 0xF) == 0x0E"/>
                <edc:SFRFieldSemantic edc:cname="DIV32768" edc:desc="RTC Clock / 32768" edc:when="(field &amp; 0xF) == 0x0F"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="RUNSTDBY" edc:nzwidth="0x1" edc:desc="Run In Standby"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="RTC" edc:cname="STATUS" edc:nzwidth="0x8" edc:access="----rrrr" edc:impl="0xF" edc:_addr="0x141">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="RTC">
              <edc:SFRFieldDef edc:cname="CTRLABUSY" edc:nzwidth="0x1" edc:desc="CTRLA Synchronization Busy Flag"/>
              <edc:SFRFieldDef edc:cname="CNTBUSY" edc:nzwidth="0x1" edc:desc="Count Synchronization Busy Flag"/>
              <edc:SFRFieldDef edc:cname="PERBUSY" edc:nzwidth="0x1" edc:desc="Period Synchronization Busy Flag"/>
              <edc:SFRFieldDef edc:cname="CMPBUSY" edc:nzwidth="0x1" edc:desc="Comparator Synchronization Busy Flag"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="RTC" edc:cname="INTCTRL" edc:nzwidth="0x8" edc:access="------nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3" edc:_addr="0x142">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="RTC">
              <edc:SFRFieldDef edc:cname="OVF" edc:nzwidth="0x1" edc:desc="Overflow Interrupt enable"/>
              <edc:SFRFieldDef edc:cname="CMP" edc:nzwidth="0x1" edc:desc="Compare Match Interrupt enable"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="RTC" edc:cname="INTFLAGS" edc:nzwidth="0x8" edc:access="------nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3" edc:_addr="0x143">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="RTC">
              <edc:SFRFieldDef edc:cname="OVF" edc:nzwidth="0x1" edc:desc="Overflow Interrupt Flag"/>
              <edc:SFRFieldDef edc:cname="CMP" edc:nzwidth="0x1" edc:desc="Compare Match Interrupt"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="RTC" edc:cname="TEMP" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x144"/>
        <edc:SFRDef ltx:memberofperipheral="RTC" edc:cname="DBGCTRL" edc:nzwidth="0x8" edc:access="-------n" edc:por="00000000" edc:mclr="00000000" edc:impl="0x1" edc:_addr="0x145">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="RTC">
              <edc:SFRFieldDef edc:cname="DBGRUN" edc:nzwidth="0x1" edc:desc="Run in debug"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:AdjustPoint edc:offset="0x1" edc:_addr="0x146"/>
        <edc:SFRDef ltx:memberofperipheral="RTC" edc:cname="CLKSEL" edc:nzwidth="0x8" edc:access="------nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3" edc:_addr="0x147">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="RTC">
              <edc:SFRFieldDef edc:cname="CLKSEL" edc:nzwidth="0x2" edc:desc="Clock Select">
                <edc:SFRFieldSemantic edc:cname="INT32K" edc:desc="Internal 32kHz OSC" edc:when="(field &amp; 0x3) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="INT1K" edc:desc="Internal 1kHz OSC" edc:when="(field &amp; 0x3) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="TOSC32K" edc:desc="32KHz Crystal OSC" edc:when="(field &amp; 0x3) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="EXTCLK" edc:desc="External Clock" edc:when="(field &amp; 0x3) == 0x03"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="RTC" edc:cname="CNT" edc:nzwidth="0x10" edc:access="nnnnnnnnnnnnnnnn" edc:_addr="0x148"/>
        <edc:SFRDef ltx:memberofperipheral="RTC" edc:cname="PER" edc:nzwidth="0x10" edc:access="nnnnnnnnnnnnnnnn" edc:_addr="0x14A"/>
        <edc:SFRDef ltx:memberofperipheral="RTC" edc:cname="CMP" edc:nzwidth="0x10" edc:access="nnnnnnnnnnnnnnnn" edc:_addr="0x14C"/>
        <edc:AdjustPoint edc:offset="0x2" edc:_addr="0x14E"/>
        <edc:SFRDef ltx:memberofperipheral="RTC" edc:cname="PITCTRLA" edc:nzwidth="0x8" edc:access="-nnnn--n" edc:por="00000000" edc:mclr="00000000" edc:impl="0x79" edc:_addr="0x150">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="RTC">
              <edc:SFRFieldDef edc:cname="PITEN" edc:nzwidth="0x1" edc:desc="Enable"/>
              <edc:AdjustPoint edc:offset="0x2"/>
              <edc:SFRFieldDef edc:cname="PERIOD" edc:nzwidth="0x4" edc:desc="Period">
                <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="Off" edc:when="(field &amp; 0xF) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="CYC4" edc:desc="RTC Clock Cycles 4" edc:when="(field &amp; 0xF) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="CYC8" edc:desc="RTC Clock Cycles 8" edc:when="(field &amp; 0xF) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="CYC16" edc:desc="RTC Clock Cycles 16" edc:when="(field &amp; 0xF) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="CYC32" edc:desc="RTC Clock Cycles 32" edc:when="(field &amp; 0xF) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="CYC64" edc:desc="RTC Clock Cycles 64" edc:when="(field &amp; 0xF) == 0x05"/>
                <edc:SFRFieldSemantic edc:cname="CYC128" edc:desc="RTC Clock Cycles 128" edc:when="(field &amp; 0xF) == 0x06"/>
                <edc:SFRFieldSemantic edc:cname="CYC256" edc:desc="RTC Clock Cycles 256" edc:when="(field &amp; 0xF) == 0x07"/>
                <edc:SFRFieldSemantic edc:cname="CYC512" edc:desc="RTC Clock Cycles 512" edc:when="(field &amp; 0xF) == 0x08"/>
                <edc:SFRFieldSemantic edc:cname="CYC1024" edc:desc="RTC Clock Cycles 1024" edc:when="(field &amp; 0xF) == 0x09"/>
                <edc:SFRFieldSemantic edc:cname="CYC2048" edc:desc="RTC Clock Cycles 2048" edc:when="(field &amp; 0xF) == 0x0A"/>
                <edc:SFRFieldSemantic edc:cname="CYC4096" edc:desc="RTC Clock Cycles 4096" edc:when="(field &amp; 0xF) == 0x0B"/>
                <edc:SFRFieldSemantic edc:cname="CYC8192" edc:desc="RTC Clock Cycles 8192" edc:when="(field &amp; 0xF) == 0x0C"/>
                <edc:SFRFieldSemantic edc:cname="CYC16384" edc:desc="RTC Clock Cycles 16384" edc:when="(field &amp; 0xF) == 0x0D"/>
                <edc:SFRFieldSemantic edc:cname="CYC32768" edc:desc="RTC Clock Cycles 32768" edc:when="(field &amp; 0xF) == 0x0E"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="RTC" edc:cname="PITSTATUS" edc:nzwidth="0x8" edc:access="-------r" edc:por="00000000" edc:mclr="00000000" edc:impl="0x1" edc:_addr="0x151">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="RTC">
              <edc:SFRFieldDef edc:cname="CTRLBUSY" edc:nzwidth="0x1" edc:desc="CTRLA Synchronization Busy Flag"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="RTC" edc:cname="PITINTCTRL" edc:nzwidth="0x8" edc:access="-------n" edc:por="00000000" edc:mclr="00000000" edc:impl="0x1" edc:_addr="0x152">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="RTC">
              <edc:SFRFieldDef edc:cname="PI" edc:nzwidth="0x1" edc:desc="Periodic Interrupt"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="RTC" edc:cname="PITINTFLAGS" edc:nzwidth="0x8" edc:access="-------n" edc:por="00000000" edc:mclr="00000000" edc:impl="0x1" edc:_addr="0x153">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="RTC">
              <edc:SFRFieldDef edc:cname="PI" edc:nzwidth="0x1" edc:desc="Periodic Interrupt"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:AdjustPoint edc:offset="0x1" edc:_addr="0x154"/>
        <edc:SFRDef ltx:memberofperipheral="RTC" edc:cname="PITDBGCTRL" edc:nzwidth="0x8" edc:access="-------n" edc:por="00000000" edc:mclr="00000000" edc:impl="0x1" edc:_addr="0x155">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="RTC">
              <edc:SFRFieldDef edc:cname="DBGRUN" edc:nzwidth="0x1" edc:desc="Run in debug"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:AdjustPoint edc:offset="0x2A" edc:_addr="0x156"/>
        <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="ASYNCSTROBE" edc:nzwidth="0x8" edc:access="wwwwwwww" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x180"/>
        <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="SYNCSTROBE" edc:nzwidth="0x8" edc:access="wwwwwwww" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x181"/>
        <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="ASYNCCH0" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x182">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
              <edc:SFRFieldDef edc:cname="ASYNCCH0" edc:nzwidth="0x8" edc:desc="Asynchronous Channel 0 Generator Selection">
                <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="Off" edc:when="(field &amp; 0xFF) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="CCL_LUT0" edc:desc="Configurable Custom Logic LUT0" edc:when="(field &amp; 0xFF) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="CCL_LUT1" edc:desc="Configurable Custom Logic LUT1" edc:when="(field &amp; 0xFF) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="AC0_OUT" edc:desc="Analog Comparator 0 out" edc:when="(field &amp; 0xFF) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="TCD0_CMPBCLR" edc:desc="Timer/Counter D0 compare B clear" edc:when="(field &amp; 0xFF) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="TCD0_CMPASET" edc:desc="Timer/Counter D0 compare A set" edc:when="(field &amp; 0xFF) == 0x05"/>
                <edc:SFRFieldSemantic edc:cname="TCD0_CMPBSET" edc:desc="Timer/Counter D0 compare B set" edc:when="(field &amp; 0xFF) == 0x06"/>
                <edc:SFRFieldSemantic edc:cname="TCD0_PROGEV" edc:desc="Timer/Counter D0 program event" edc:when="(field &amp; 0xFF) == 0x07"/>
                <edc:SFRFieldSemantic edc:cname="RTC_OVF" edc:desc="Real Time Counter overflow" edc:when="(field &amp; 0xFF) == 0x08"/>
                <edc:SFRFieldSemantic edc:cname="RTC_CMP" edc:desc="Real Time Counter compare" edc:when="(field &amp; 0xFF) == 0x09"/>
                <edc:SFRFieldSemantic edc:cname="PORTA_PIN0" edc:desc="Asynchronous Event from Pin PA0" edc:when="(field &amp; 0xFF) == 0x0A"/>
                <edc:SFRFieldSemantic edc:cname="PORTA_PIN1" edc:desc="Asynchronous Event from Pin PA1" edc:when="(field &amp; 0xFF) == 0x0B"/>
                <edc:SFRFieldSemantic edc:cname="PORTA_PIN2" edc:desc="Asynchronous Event from Pin PA2" edc:when="(field &amp; 0xFF) == 0x0C"/>
                <edc:SFRFieldSemantic edc:cname="PORTA_PIN3" edc:desc="Asynchronous Event from Pin PA3" edc:when="(field &amp; 0xFF) == 0x0D"/>
                <edc:SFRFieldSemantic edc:cname="PORTA_PIN4" edc:desc="Asynchronous Event from Pin PA4" edc:when="(field &amp; 0xFF) == 0x0E"/>
                <edc:SFRFieldSemantic edc:cname="PORTA_PIN5" edc:desc="Asynchronous Event from Pin PA5" edc:when="(field &amp; 0xFF) == 0x0F"/>
                <edc:SFRFieldSemantic edc:cname="PORTA_PIN6" edc:desc="Asynchronous Event from Pin PA6" edc:when="(field &amp; 0xFF) == 0x10"/>
                <edc:SFRFieldSemantic edc:cname="PORTA_PIN7" edc:desc="Asynchronous Event from Pin PA7" edc:when="(field &amp; 0xFF) == 0x11"/>
                <edc:SFRFieldSemantic edc:cname="UPDI" edc:desc="Unified Program and debug interface" edc:when="(field &amp; 0xFF) == 0x12"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="ASYNCCH1" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x183">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
              <edc:SFRFieldDef edc:cname="ASYNCCH1" edc:nzwidth="0x8" edc:desc="Asynchronous Channel 1 Generator Selection">
                <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="Off" edc:when="(field &amp; 0xFF) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="CCL_LUT0" edc:desc="Configurable custom logic LUT0" edc:when="(field &amp; 0xFF) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="CCL_LUT1" edc:desc="Configurable custom logic LUT1" edc:when="(field &amp; 0xFF) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="AC0_OUT" edc:desc="Analog Comparator 0 out" edc:when="(field &amp; 0xFF) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="TCD0_CMPBCLR" edc:desc="Timer/Counter D0 compare B clear" edc:when="(field &amp; 0xFF) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="TCD0_CMPASET" edc:desc="Timer/Counter D0 compare A set" edc:when="(field &amp; 0xFF) == 0x05"/>
                <edc:SFRFieldSemantic edc:cname="TCD0_CMPBSET" edc:desc="Timer/Counter D0 compare B set" edc:when="(field &amp; 0xFF) == 0x06"/>
                <edc:SFRFieldSemantic edc:cname="TCD0_PROGEV" edc:desc="Timer/Counter D0 program event" edc:when="(field &amp; 0xFF) == 0x07"/>
                <edc:SFRFieldSemantic edc:cname="RTC_OVF" edc:desc="Real Time Counter overflow" edc:when="(field &amp; 0xFF) == 0x08"/>
                <edc:SFRFieldSemantic edc:cname="RTC_CMP" edc:desc="Real Time Counter compare" edc:when="(field &amp; 0xFF) == 0x09"/>
                <edc:SFRFieldSemantic edc:cname="PORTB_PIN0" edc:desc="Asynchronous Event from Pin PB0" edc:when="(field &amp; 0xFF) == 0x0A"/>
                <edc:SFRFieldSemantic edc:cname="PORTB_PIN1" edc:desc="Asynchronous Event from Pin PB1" edc:when="(field &amp; 0xFF) == 0x0B"/>
                <edc:SFRFieldSemantic edc:cname="PORTB_PIN2" edc:desc="Asynchronous Event from Pin PB2" edc:when="(field &amp; 0xFF) == 0x0C"/>
                <edc:SFRFieldSemantic edc:cname="PORTB_PIN3" edc:desc="Asynchronous Event from Pin PB3" edc:when="(field &amp; 0xFF) == 0x0D"/>
                <edc:SFRFieldSemantic edc:cname="PORTB_PIN4" edc:desc="Asynchronous Event from Pin PB4" edc:when="(field &amp; 0xFF) == 0x0E"/>
                <edc:SFRFieldSemantic edc:cname="PORTB_PIN5" edc:desc="Asynchronous Event from Pin PB5" edc:when="(field &amp; 0xFF) == 0x0F"/>
                <edc:SFRFieldSemantic edc:cname="PORTB_PIN6" edc:desc="Asynchronous Event from Pin PB6" edc:when="(field &amp; 0xFF) == 0x10"/>
                <edc:SFRFieldSemantic edc:cname="PORTB_PIN7" edc:desc="Asynchronous Event from Pin PB7" edc:when="(field &amp; 0xFF) == 0x11"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="ASYNCCH2" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x184">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
              <edc:SFRFieldDef edc:cname="ASYNCCH2" edc:nzwidth="0x8" edc:desc="Asynchronous Channel 2 Generator Selection">
                <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="Off" edc:when="(field &amp; 0xFF) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="CCL_LUT0" edc:desc="Configurable Custom Logic LUT0" edc:when="(field &amp; 0xFF) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="CCL_LUT1" edc:desc="Configurable Custom Logic LUT1" edc:when="(field &amp; 0xFF) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="AC0_OUT" edc:desc="Analog Comparator 0 out" edc:when="(field &amp; 0xFF) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="TCD0_CMPBCLR" edc:desc="Timer/Counter D0 compare B clear" edc:when="(field &amp; 0xFF) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="TCD0_CMPASET" edc:desc="Timer/Counter D0 compare A set" edc:when="(field &amp; 0xFF) == 0x05"/>
                <edc:SFRFieldSemantic edc:cname="TCD0_CMPBSET" edc:desc="Timer/Counter D0 compare B set" edc:when="(field &amp; 0xFF) == 0x06"/>
                <edc:SFRFieldSemantic edc:cname="TCD0_PROGEV" edc:desc="Timer/Counter D0 program event" edc:when="(field &amp; 0xFF) == 0x07"/>
                <edc:SFRFieldSemantic edc:cname="RTC_OVF" edc:desc="Real Time Counter overflow" edc:when="(field &amp; 0xFF) == 0x08"/>
                <edc:SFRFieldSemantic edc:cname="RTC_CMP" edc:desc="Real Time Counter compare" edc:when="(field &amp; 0xFF) == 0x09"/>
                <edc:SFRFieldSemantic edc:cname="PORTC_PIN0" edc:desc="Asynchronous Event from Pin PC0" edc:when="(field &amp; 0xFF) == 0x0A"/>
                <edc:SFRFieldSemantic edc:cname="PORTC_PIN1" edc:desc="Asynchronous Event from Pin PC1" edc:when="(field &amp; 0xFF) == 0x0B"/>
                <edc:SFRFieldSemantic edc:cname="PORTC_PIN2" edc:desc="Asynchronous Event from Pin PC2" edc:when="(field &amp; 0xFF) == 0x0C"/>
                <edc:SFRFieldSemantic edc:cname="PORTC_PIN3" edc:desc="Asynchronous Event from Pin PC3" edc:when="(field &amp; 0xFF) == 0x0D"/>
                <edc:SFRFieldSemantic edc:cname="PORTC_PIN4" edc:desc="Asynchronous Event from Pin PC4" edc:when="(field &amp; 0xFF) == 0x0E"/>
                <edc:SFRFieldSemantic edc:cname="PORTC_PIN5" edc:desc="Asynchronous Event from Pin PC5" edc:when="(field &amp; 0xFF) == 0x0F"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="ASYNCCH3" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x185">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
              <edc:SFRFieldDef edc:cname="ASYNCCH3" edc:nzwidth="0x8" edc:desc="Asynchronous Channel 3 Generator Selection">
                <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="Off" edc:when="(field &amp; 0xFF) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="CCL_LUT0" edc:desc="Configurable custom logic LUT0" edc:when="(field &amp; 0xFF) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="CCL_LUT1" edc:desc="Configurable custom logic LUT1" edc:when="(field &amp; 0xFF) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="AC0_OUT" edc:desc="Analog Comparator 0 out" edc:when="(field &amp; 0xFF) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="TCD0_CMPBCLR" edc:desc="Timer/Counter type D compare B clear" edc:when="(field &amp; 0xFF) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="TCD0_CMPASET" edc:desc="Timer/Counter type D compare A set" edc:when="(field &amp; 0xFF) == 0x05"/>
                <edc:SFRFieldSemantic edc:cname="TCD0_CMPBSET" edc:desc="Timer/Counter type D compare B set" edc:when="(field &amp; 0xFF) == 0x06"/>
                <edc:SFRFieldSemantic edc:cname="TCD0_PROGEV" edc:desc="Timer/Counter type D program event" edc:when="(field &amp; 0xFF) == 0x07"/>
                <edc:SFRFieldSemantic edc:cname="RTC_OVF" edc:desc="Real Time Counter overflow" edc:when="(field &amp; 0xFF) == 0x08"/>
                <edc:SFRFieldSemantic edc:cname="RTC_CMP" edc:desc="Real Time Counter compare" edc:when="(field &amp; 0xFF) == 0x09"/>
                <edc:SFRFieldSemantic edc:cname="PIT_DIV8192" edc:desc="Periodic Interrupt CLK_RTC div 8192" edc:when="(field &amp; 0xFF) == 0x0A"/>
                <edc:SFRFieldSemantic edc:cname="PIT_DIV4096" edc:desc="Periodic Interrupt CLK_RTC div 4096" edc:when="(field &amp; 0xFF) == 0x0B"/>
                <edc:SFRFieldSemantic edc:cname="PIT_DIV2048" edc:desc="Periodic Interrupt CLK_RTC div 2048" edc:when="(field &amp; 0xFF) == 0x0C"/>
                <edc:SFRFieldSemantic edc:cname="PIT_DIV1024" edc:desc="Periodic Interrupt CLK_RTC div 1024" edc:when="(field &amp; 0xFF) == 0x0D"/>
                <edc:SFRFieldSemantic edc:cname="PIT_DIV512" edc:desc="Periodic Interrupt CLK_RTC div 512" edc:when="(field &amp; 0xFF) == 0x0E"/>
                <edc:SFRFieldSemantic edc:cname="PIT_DIV256" edc:desc="Periodic Interrupt CLK_RTC div 256" edc:when="(field &amp; 0xFF) == 0x0F"/>
                <edc:SFRFieldSemantic edc:cname="PIT_DIV128" edc:desc="Periodic Interrupt CLK_RTC div 128" edc:when="(field &amp; 0xFF) == 0x10"/>
                <edc:SFRFieldSemantic edc:cname="PIT_DIV64" edc:desc="Periodic Interrupt CLK_RTC div 64" edc:when="(field &amp; 0xFF) == 0x11"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:AdjustPoint edc:offset="0x4" edc:_addr="0x186"/>
        <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="SYNCCH0" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x18A">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
              <edc:SFRFieldDef edc:cname="SYNCCH0" edc:nzwidth="0x8" edc:desc="Synchronous Channel 0 Generator Selection">
                <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="Off" edc:when="(field &amp; 0xFF) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="TCB0" edc:desc="Timer/Counter B0" edc:when="(field &amp; 0xFF) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="TCA0_OVF_LUNF" edc:desc="Timer/Counter A0 overflow" edc:when="(field &amp; 0xFF) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="TCA0_HUNF" edc:desc="Timer/Counter A0 underflow high byte (split mode)" edc:when="(field &amp; 0xFF) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="TCA0_CMP0" edc:desc="Timer/Counter A0 compare 0" edc:when="(field &amp; 0xFF) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="TCA0_CMP1" edc:desc="Timer/Counter A0 compare 1" edc:when="(field &amp; 0xFF) == 0x05"/>
                <edc:SFRFieldSemantic edc:cname="TCA0_CMP2" edc:desc="Timer/Counter A0 compare 2" edc:when="(field &amp; 0xFF) == 0x06"/>
                <edc:SFRFieldSemantic edc:cname="PORTC_PIN0" edc:desc="Synchronous Event from Pin PC0" edc:when="(field &amp; 0xFF) == 0x07"/>
                <edc:SFRFieldSemantic edc:cname="PORTC_PIN1" edc:desc="Synchronous Event from Pin PC1" edc:when="(field &amp; 0xFF) == 0x08"/>
                <edc:SFRFieldSemantic edc:cname="PORTC_PIN2" edc:desc="Synchronous Event from Pin PC2" edc:when="(field &amp; 0xFF) == 0x09"/>
                <edc:SFRFieldSemantic edc:cname="PORTC_PIN3" edc:desc="Synchronous Event from Pin PC3" edc:when="(field &amp; 0xFF) == 0x0A"/>
                <edc:SFRFieldSemantic edc:cname="PORTC_PIN4" edc:desc="Synchronous Event from Pin PC4" edc:when="(field &amp; 0xFF) == 0x0B"/>
                <edc:SFRFieldSemantic edc:cname="PORTC_PIN5" edc:desc="Synchronous Event from Pin PC5" edc:when="(field &amp; 0xFF) == 0x0C"/>
                <edc:SFRFieldSemantic edc:cname="PORTA_PIN0" edc:desc="Synchronous Event from Pin PA0" edc:when="(field &amp; 0xFF) == 0x0D"/>
                <edc:SFRFieldSemantic edc:cname="PORTA_PIN1" edc:desc="Synchronous Event from Pin PA1" edc:when="(field &amp; 0xFF) == 0x0E"/>
                <edc:SFRFieldSemantic edc:cname="PORTA_PIN2" edc:desc="Synchronous Event from Pin PA2" edc:when="(field &amp; 0xFF) == 0x0F"/>
                <edc:SFRFieldSemantic edc:cname="PORTA_PIN3" edc:desc="Synchronous Event from Pin PA3" edc:when="(field &amp; 0xFF) == 0x10"/>
                <edc:SFRFieldSemantic edc:cname="PORTA_PIN4" edc:desc="Synchronous Event from Pin PA4" edc:when="(field &amp; 0xFF) == 0x11"/>
                <edc:SFRFieldSemantic edc:cname="PORTA_PIN5" edc:desc="Synchronous Event from Pin PA5" edc:when="(field &amp; 0xFF) == 0x12"/>
                <edc:SFRFieldSemantic edc:cname="PORTA_PIN6" edc:desc="Synchronous Event from Pin PA6" edc:when="(field &amp; 0xFF) == 0x13"/>
                <edc:SFRFieldSemantic edc:cname="PORTA_PIN7" edc:desc="Synchronous Event from Pin PA7" edc:when="(field &amp; 0xFF) == 0x14"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="SYNCCH1" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x18B">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
              <edc:SFRFieldDef edc:cname="SYNCCH1" edc:nzwidth="0x8" edc:desc="Synchronous Channel 1 Generator Selection">
                <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="Off" edc:when="(field &amp; 0xFF) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="TCB0" edc:desc="Timer/Counter B0" edc:when="(field &amp; 0xFF) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="TCA0_OVF_LUNF" edc:desc="Timer/Counter A0 overflow" edc:when="(field &amp; 0xFF) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="TCA0_HUNF" edc:desc="Timer/Counter A0 underflow high byte (split mode)" edc:when="(field &amp; 0xFF) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="TCA0_CMP0" edc:desc="Timer/Counter A0 compare 0" edc:when="(field &amp; 0xFF) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="TCA0_CMP1" edc:desc="Timer/Counter A0 compare 1" edc:when="(field &amp; 0xFF) == 0x05"/>
                <edc:SFRFieldSemantic edc:cname="TCA0_CMP2" edc:desc="Timer/Counter A0 compare 2" edc:when="(field &amp; 0xFF) == 0x06"/>
                <edc:SFRFieldSemantic edc:cname="PORTB_PIN0" edc:desc="Synchronous Event from Pin PB0" edc:when="(field &amp; 0xFF) == 0x08"/>
                <edc:SFRFieldSemantic edc:cname="PORTB_PIN1" edc:desc="Synchronous Event from Pin PB1" edc:when="(field &amp; 0xFF) == 0x09"/>
                <edc:SFRFieldSemantic edc:cname="PORTB_PIN2" edc:desc="Synchronous Event from Pin PB2" edc:when="(field &amp; 0xFF) == 0x0A"/>
                <edc:SFRFieldSemantic edc:cname="PORTB_PIN3" edc:desc="Synchronous Event from Pin PB3" edc:when="(field &amp; 0xFF) == 0x0B"/>
                <edc:SFRFieldSemantic edc:cname="PORTB_PIN4" edc:desc="Synchronous Event from Pin PB4" edc:when="(field &amp; 0xFF) == 0x0C"/>
                <edc:SFRFieldSemantic edc:cname="PORTB_PIN5" edc:desc="Synchronous Event from Pin PB5" edc:when="(field &amp; 0xFF) == 0x0D"/>
                <edc:SFRFieldSemantic edc:cname="PORTB_PIN6" edc:desc="Synchronous Event from Pin PB6" edc:when="(field &amp; 0xFF) == 0x0E"/>
                <edc:SFRFieldSemantic edc:cname="PORTB_PIN7" edc:desc="Synchronous Event from Pin PB7" edc:when="(field &amp; 0xFF) == 0x0F"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:AdjustPoint edc:offset="0x6" edc:_addr="0x18C"/>
        <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="ASYNCUSER0" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x192">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
              <edc:SFRFieldDef edc:cname="ASYNCUSER0" edc:nzwidth="0x8" edc:desc="Asynchronous User Ch 0 Input Selection - TCB0">
                <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="Off" edc:when="(field &amp; 0xFF) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="SYNCCH0" edc:desc="Synchronous Event Channel 0" edc:when="(field &amp; 0xFF) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="SYNCCH1" edc:desc="Synchronous Event Channel 1" edc:when="(field &amp; 0xFF) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="ASYNCCH0" edc:desc="Asynchronous Event Channel 0" edc:when="(field &amp; 0xFF) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="ASYNCCH1" edc:desc="Asynchronous Event Channel 1" edc:when="(field &amp; 0xFF) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="ASYNCCH2" edc:desc="Asynchronous Event Channel 2" edc:when="(field &amp; 0xFF) == 0x05"/>
                <edc:SFRFieldSemantic edc:cname="ASYNCCH3" edc:desc="Asynchronous Event Channel 3" edc:when="(field &amp; 0xFF) == 0x06"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="ASYNCUSER1" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x193">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
              <edc:SFRFieldDef edc:cname="ASYNCUSER1" edc:nzwidth="0x8" edc:desc="Asynchronous User Ch 1 Input Selection - ADC0">
                <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="Off" edc:when="(field &amp; 0xFF) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="SYNCCH0" edc:desc="Synchronous Event Channel 0" edc:when="(field &amp; 0xFF) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="SYNCCH1" edc:desc="Synchronous Event Channel 1" edc:when="(field &amp; 0xFF) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="ASYNCCH0" edc:desc="Asynchronous Event Channel 0" edc:when="(field &amp; 0xFF) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="ASYNCCH1" edc:desc="Asynchronous Event Channel 1" edc:when="(field &amp; 0xFF) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="ASYNCCH2" edc:desc="Asynchronous Event Channel 2" edc:when="(field &amp; 0xFF) == 0x05"/>
                <edc:SFRFieldSemantic edc:cname="ASYNCCH3" edc:desc="Asynchronous Event Channel 3" edc:when="(field &amp; 0xFF) == 0x06"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="ASYNCUSER2" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x194">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
              <edc:SFRFieldDef edc:cname="ASYNCUSER2" edc:nzwidth="0x8" edc:desc="Asynchronous User Ch 2 Input Selection - CCL LUT0 Event 0">
                <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="Off" edc:when="(field &amp; 0xFF) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="SYNCCH0" edc:desc="Synchronous Event Channel 0" edc:when="(field &amp; 0xFF) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="SYNCCH1" edc:desc="Synchronous Event Channel 1" edc:when="(field &amp; 0xFF) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="ASYNCCH0" edc:desc="Asynchronous Event Channel 0" edc:when="(field &amp; 0xFF) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="ASYNCCH1" edc:desc="Asynchronous Event Channel 1" edc:when="(field &amp; 0xFF) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="ASYNCCH2" edc:desc="Asynchronous Event Channel 2" edc:when="(field &amp; 0xFF) == 0x05"/>
                <edc:SFRFieldSemantic edc:cname="ASYNCCH3" edc:desc="Asynchronous Event Channel 3" edc:when="(field &amp; 0xFF) == 0x06"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="ASYNCUSER3" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x195">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
              <edc:SFRFieldDef edc:cname="ASYNCUSER3" edc:nzwidth="0x8" edc:desc="Asynchronous User Ch 3 Input Selection - CCL LUT1 Event 0">
                <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="Off" edc:when="(field &amp; 0xFF) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="SYNCCH0" edc:desc="Synchronous Event Channel 0" edc:when="(field &amp; 0xFF) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="SYNCCH1" edc:desc="Synchronous Event Channel 1" edc:when="(field &amp; 0xFF) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="ASYNCCH0" edc:desc="Asynchronous Event Channel 0" edc:when="(field &amp; 0xFF) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="ASYNCCH1" edc:desc="Asynchronous Event Channel 1" edc:when="(field &amp; 0xFF) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="ASYNCCH2" edc:desc="Asynchronous Event Channel 2" edc:when="(field &amp; 0xFF) == 0x05"/>
                <edc:SFRFieldSemantic edc:cname="ASYNCCH3" edc:desc="Asynchronous Event Channel 3" edc:when="(field &amp; 0xFF) == 0x06"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="ASYNCUSER4" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x196">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
              <edc:SFRFieldDef edc:cname="ASYNCUSER4" edc:nzwidth="0x8" edc:desc="Asynchronous User Ch 4 Input Selection - CCL LUT0 Event 1">
                <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="Off" edc:when="(field &amp; 0xFF) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="SYNCCH0" edc:desc="Synchronous Event Channel 0" edc:when="(field &amp; 0xFF) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="SYNCCH1" edc:desc="Synchronous Event Channel 1" edc:when="(field &amp; 0xFF) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="ASYNCCH0" edc:desc="Asynchronous Event Channel 0" edc:when="(field &amp; 0xFF) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="ASYNCCH1" edc:desc="Asynchronous Event Channel 1" edc:when="(field &amp; 0xFF) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="ASYNCCH2" edc:desc="Asynchronous Event Channel 2" edc:when="(field &amp; 0xFF) == 0x05"/>
                <edc:SFRFieldSemantic edc:cname="ASYNCCH3" edc:desc="Asynchronous Event Channel 3" edc:when="(field &amp; 0xFF) == 0x06"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="ASYNCUSER5" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x197">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
              <edc:SFRFieldDef edc:cname="ASYNCUSER5" edc:nzwidth="0x8" edc:desc="Asynchronous User Ch 5 Input Selection - CCL LUT1 Event 1">
                <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="Off" edc:when="(field &amp; 0xFF) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="SYNCCH0" edc:desc="Synchronous Event Channel 0" edc:when="(field &amp; 0xFF) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="SYNCCH1" edc:desc="Synchronous Event Channel 1" edc:when="(field &amp; 0xFF) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="ASYNCCH0" edc:desc="Asynchronous Event Channel 0" edc:when="(field &amp; 0xFF) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="ASYNCCH1" edc:desc="Asynchronous Event Channel 1" edc:when="(field &amp; 0xFF) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="ASYNCCH2" edc:desc="Asynchronous Event Channel 2" edc:when="(field &amp; 0xFF) == 0x05"/>
                <edc:SFRFieldSemantic edc:cname="ASYNCCH3" edc:desc="Asynchronous Event Channel 3" edc:when="(field &amp; 0xFF) == 0x06"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="ASYNCUSER6" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x198">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
              <edc:SFRFieldDef edc:cname="ASYNCUSER6" edc:nzwidth="0x8" edc:desc="Asynchronous User Ch 6 Input Selection - TCD0 Event 0">
                <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="Off" edc:when="(field &amp; 0xFF) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="SYNCCH0" edc:desc="Synchronous Event Channel 0" edc:when="(field &amp; 0xFF) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="SYNCCH1" edc:desc="Synchronous Event Channel 1" edc:when="(field &amp; 0xFF) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="ASYNCCH0" edc:desc="Asynchronous Event Channel 0" edc:when="(field &amp; 0xFF) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="ASYNCCH1" edc:desc="Asynchronous Event Channel 1" edc:when="(field &amp; 0xFF) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="ASYNCCH2" edc:desc="Asynchronous Event Channel 2" edc:when="(field &amp; 0xFF) == 0x05"/>
                <edc:SFRFieldSemantic edc:cname="ASYNCCH3" edc:desc="Asynchronous Event Channel 3" edc:when="(field &amp; 0xFF) == 0x06"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="ASYNCUSER7" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x199">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
              <edc:SFRFieldDef edc:cname="ASYNCUSER7" edc:nzwidth="0x8" edc:desc="Asynchronous User Ch 7 Input Selection - TCD0 Event 1">
                <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="Off" edc:when="(field &amp; 0xFF) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="SYNCCH0" edc:desc="Synchronous Event Channel 0" edc:when="(field &amp; 0xFF) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="SYNCCH1" edc:desc="Synchronous Event Channel 1" edc:when="(field &amp; 0xFF) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="ASYNCCH0" edc:desc="Asynchronous Event Channel 0" edc:when="(field &amp; 0xFF) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="ASYNCCH1" edc:desc="Asynchronous Event Channel 1" edc:when="(field &amp; 0xFF) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="ASYNCCH2" edc:desc="Asynchronous Event Channel 2" edc:when="(field &amp; 0xFF) == 0x05"/>
                <edc:SFRFieldSemantic edc:cname="ASYNCCH3" edc:desc="Asynchronous Event Channel 3" edc:when="(field &amp; 0xFF) == 0x06"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="ASYNCUSER8" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x19A">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
              <edc:SFRFieldDef edc:cname="ASYNCUSER8" edc:nzwidth="0x8" edc:desc="Asynchronous User Ch 8 Input Selection - Event Out 0">
                <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="Off" edc:when="(field &amp; 0xFF) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="SYNCCH0" edc:desc="Synchronous Event Channel 0" edc:when="(field &amp; 0xFF) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="SYNCCH1" edc:desc="Synchronous Event Channel 1" edc:when="(field &amp; 0xFF) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="ASYNCCH0" edc:desc="Asynchronous Event Channel 0" edc:when="(field &amp; 0xFF) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="ASYNCCH1" edc:desc="Asynchronous Event Channel 1" edc:when="(field &amp; 0xFF) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="ASYNCCH2" edc:desc="Asynchronous Event Channel 2" edc:when="(field &amp; 0xFF) == 0x05"/>
                <edc:SFRFieldSemantic edc:cname="ASYNCCH3" edc:desc="Asynchronous Event Channel 3" edc:when="(field &amp; 0xFF) == 0x06"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="ASYNCUSER9" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x19B">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
              <edc:SFRFieldDef edc:cname="ASYNCUSER9" edc:nzwidth="0x8" edc:desc="Asynchronous User Ch 9 Input Selection - Event Out 1">
                <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="Off" edc:when="(field &amp; 0xFF) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="SYNCCH0" edc:desc="Synchronous Event Channel 0" edc:when="(field &amp; 0xFF) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="SYNCCH1" edc:desc="Synchronous Event Channel 1" edc:when="(field &amp; 0xFF) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="ASYNCCH0" edc:desc="Asynchronous Event Channel 0" edc:when="(field &amp; 0xFF) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="ASYNCCH1" edc:desc="Asynchronous Event Channel 1" edc:when="(field &amp; 0xFF) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="ASYNCCH2" edc:desc="Asynchronous Event Channel 2" edc:when="(field &amp; 0xFF) == 0x05"/>
                <edc:SFRFieldSemantic edc:cname="ASYNCCH3" edc:desc="Asynchronous Event Channel 3" edc:when="(field &amp; 0xFF) == 0x06"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="ASYNCUSER10" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x19C">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
              <edc:SFRFieldDef edc:cname="ASYNCUSER10" edc:nzwidth="0x8" edc:desc="Asynchronous User Ch 10 Input Selection - Event Out 2">
                <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="Off" edc:when="(field &amp; 0xFF) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="SYNCCH0" edc:desc="Synchronous Event Channel 0" edc:when="(field &amp; 0xFF) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="SYNCCH1" edc:desc="Synchronous Event Channel 1" edc:when="(field &amp; 0xFF) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="ASYNCCH0" edc:desc="Asynchronous Event Channel 0" edc:when="(field &amp; 0xFF) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="ASYNCCH1" edc:desc="Asynchronous Event Channel 1" edc:when="(field &amp; 0xFF) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="ASYNCCH2" edc:desc="Asynchronous Event Channel 2" edc:when="(field &amp; 0xFF) == 0x05"/>
                <edc:SFRFieldSemantic edc:cname="ASYNCCH3" edc:desc="Asynchronous Event Channel 3" edc:when="(field &amp; 0xFF) == 0x06"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:AdjustPoint edc:offset="0x5" edc:_addr="0x19D"/>
        <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="SYNCUSER0" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x1A2">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
              <edc:SFRFieldDef edc:cname="SYNCUSER0" edc:nzwidth="0x8" edc:desc="Synchronous User Ch 0 Input Selection - TCA0">
                <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="Off" edc:when="(field &amp; 0xFF) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="SYNCCH0" edc:desc="Synchronous Event Channel 0" edc:when="(field &amp; 0xFF) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="SYNCCH1" edc:desc="Synchronous Event Channel 1" edc:when="(field &amp; 0xFF) == 0x02"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="SYNCUSER1" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x1A3">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
              <edc:SFRFieldDef edc:cname="SYNCUSER1" edc:nzwidth="0x8" edc:desc="Synchronous User Ch 1 Input Selection - USART0">
                <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="Off" edc:when="(field &amp; 0xFF) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="SYNCCH0" edc:desc="Synchronous Event Channel 0" edc:when="(field &amp; 0xFF) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="SYNCCH1" edc:desc="Synchronous Event Channel 1" edc:when="(field &amp; 0xFF) == 0x02"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:AdjustPoint edc:offset="0x1C" edc:_addr="0x1A4"/>
        <edc:SFRDef ltx:memberofperipheral="CCL" edc:cname="CTRLA" edc:nzwidth="0x8" edc:access="-n-----n" edc:por="00000000" edc:mclr="00000000" edc:impl="0x41" edc:_addr="0x1C0">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="CCL">
              <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="Enable"/>
              <edc:AdjustPoint edc:offset="0x5"/>
              <edc:SFRFieldDef edc:cname="RUNSTDBY" edc:nzwidth="0x1" edc:desc="Run in Standby"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="CCL" edc:cname="SEQCTRL0" edc:nzwidth="0x8" edc:access="-----nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x7" edc:_addr="0x1C1">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="CCL">
              <edc:SFRFieldDef edc:cname="SEQSEL" edc:nzwidth="0x3" edc:desc="Sequential Selection">
                <edc:SFRFieldSemantic edc:cname="DISABLE" edc:desc="Sequential logic disabled" edc:when="(field &amp; 0x7) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="DFF" edc:desc="D FlipFlop" edc:when="(field &amp; 0x7) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="JK" edc:desc="JK FlipFlop" edc:when="(field &amp; 0x7) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="LATCH" edc:desc="D Latch" edc:when="(field &amp; 0x7) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="RS" edc:desc="RS Latch" edc:when="(field &amp; 0x7) == 0x04"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:AdjustPoint edc:offset="0x3" edc:_addr="0x1C2"/>
        <edc:SFRDef ltx:memberofperipheral="CCL" edc:cname="LUT0CTRLA" edc:nzwidth="0x8" edc:access="nnnnn--n" edc:por="00000000" edc:mclr="00000000" edc:impl="0xF9" edc:_addr="0x1C5">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="CCL">
              <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="LUT Enable"/>
              <edc:AdjustPoint edc:offset="0x2"/>
              <edc:SFRFieldDef edc:cname="OUTEN" edc:nzwidth="0x1" edc:desc="Output Enable"/>
              <edc:SFRFieldDef edc:cname="FILTSEL" edc:nzwidth="0x2" edc:desc="Filter Selection">
                <edc:SFRFieldSemantic edc:cname="DISABLE" edc:desc="Filter disabled" edc:when="(field &amp; 0x3) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="SYNCH" edc:desc="Synchronizer enabled" edc:when="(field &amp; 0x3) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="FILTER" edc:desc="Filter enabled" edc:when="(field &amp; 0x3) == 0x02"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="CLKSRC" edc:nzwidth="0x1" edc:desc="Clock Source Selection">
                <edc:SFRFieldSemantic edc:cname="CLKPER" edc:desc="CLK_PER is clocking the LUT" edc:when="(field &amp; 0x1) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="IN2" edc:desc="IN[2] is clocking the LUT" edc:when="(field &amp; 0x1) == 0x01"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="EDGEDET" edc:nzwidth="0x1" edc:desc="Edge Detection Enable">
                <edc:SFRFieldSemantic edc:cname="DIS" edc:desc="Edge detector is disabled" edc:when="(field &amp; 0x1) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="EN" edc:desc="Edge detector is enabled" edc:when="(field &amp; 0x1) == 0x01"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="CCL" edc:cname="LUT0CTRLB" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x1C6">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="CCL">
              <edc:SFRFieldDef edc:cname="INSEL0" edc:nzwidth="0x4" edc:desc="LUT Input 0 Source Selection">
                <edc:SFRFieldSemantic edc:cname="MASK" edc:desc="Masked input" edc:when="(field &amp; 0xF) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="FEEDBACK" edc:desc="Feedback input source" edc:when="(field &amp; 0xF) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="LINK" edc:desc="Linked LUT input source" edc:when="(field &amp; 0xF) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="EVENT0" edc:desc="Event input source 0" edc:when="(field &amp; 0xF) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="EVENT1" edc:desc="Event input source 1" edc:when="(field &amp; 0xF) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="IO" edc:desc="IO pin LUTn-IN0 input source" edc:when="(field &amp; 0xF) == 0x05"/>
                <edc:SFRFieldSemantic edc:cname="AC0" edc:desc="AC0 OUT input source" edc:when="(field &amp; 0xF) == 0x06"/>
                <edc:SFRFieldSemantic edc:cname="TCB0" edc:desc="TCB0 WO input source" edc:when="(field &amp; 0xF) == 0x07"/>
                <edc:SFRFieldSemantic edc:cname="TCA0" edc:desc="TCA0 WO0 input source" edc:when="(field &amp; 0xF) == 0x08"/>
                <edc:SFRFieldSemantic edc:cname="TCD0" edc:desc="TCD0 WOA input source" edc:when="(field &amp; 0xF) == 0x09"/>
                <edc:SFRFieldSemantic edc:cname="USART0" edc:desc="USART0 XCK input source" edc:when="(field &amp; 0xF) == 0x0A"/>
                <edc:SFRFieldSemantic edc:cname="SPI0" edc:desc="SPI0 SCK source" edc:when="(field &amp; 0xF) == 0x0B"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="INSEL1" edc:nzwidth="0x4" edc:desc="LUT Input 1 Source Selection">
                <edc:SFRFieldSemantic edc:cname="MASK" edc:desc="Masked input" edc:when="(field &amp; 0xF) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="FEEDBACK" edc:desc="Feedback input source" edc:when="(field &amp; 0xF) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="LINK" edc:desc="Linked LUT input source" edc:when="(field &amp; 0xF) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="EVENT0" edc:desc="Event input source 0" edc:when="(field &amp; 0xF) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="EVENT1" edc:desc="Event input source 1" edc:when="(field &amp; 0xF) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="IO" edc:desc="IO pin LUTn-N1 input source" edc:when="(field &amp; 0xF) == 0x05"/>
                <edc:SFRFieldSemantic edc:cname="AC0" edc:desc="AC0 OUT input source" edc:when="(field &amp; 0xF) == 0x06"/>
                <edc:SFRFieldSemantic edc:cname="TCB0" edc:desc="TCB0 WO input source" edc:when="(field &amp; 0xF) == 0x07"/>
                <edc:SFRFieldSemantic edc:cname="TCA0" edc:desc="TCA0 WO1 input source" edc:when="(field &amp; 0xF) == 0x08"/>
                <edc:SFRFieldSemantic edc:cname="TCD0" edc:desc="TCD0 WOB input source" edc:when="(field &amp; 0xF) == 0x09"/>
                <edc:SFRFieldSemantic edc:cname="USART0" edc:desc="USART0 TXD input source" edc:when="(field &amp; 0xF) == 0x0A"/>
                <edc:SFRFieldSemantic edc:cname="SPI0" edc:desc="SPI0 MOSI input source" edc:when="(field &amp; 0xF) == 0x0B"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="CCL" edc:cname="LUT0CTRLC" edc:nzwidth="0x8" edc:access="----nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xF" edc:_addr="0x1C7">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="CCL">
              <edc:SFRFieldDef edc:cname="INSEL2" edc:nzwidth="0x4" edc:desc="LUT Input 2 Source Selection">
                <edc:SFRFieldSemantic edc:cname="MASK" edc:desc="Masked input" edc:when="(field &amp; 0xF) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="FEEDBACK" edc:desc="Feedback input source" edc:when="(field &amp; 0xF) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="LINK" edc:desc="Linked LUT input source" edc:when="(field &amp; 0xF) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="EVENT0" edc:desc="Event input source 0" edc:when="(field &amp; 0xF) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="EVENT1" edc:desc="Event input source 1" edc:when="(field &amp; 0xF) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="IO" edc:desc="IO pin LUTn-IN2 input source" edc:when="(field &amp; 0xF) == 0x05"/>
                <edc:SFRFieldSemantic edc:cname="AC0" edc:desc="AC0 OUT input source" edc:when="(field &amp; 0xF) == 0x06"/>
                <edc:SFRFieldSemantic edc:cname="TCB0" edc:desc="TCB0 WO input source" edc:when="(field &amp; 0xF) == 0x07"/>
                <edc:SFRFieldSemantic edc:cname="TCA0" edc:desc="TCA0 WO2 input source" edc:when="(field &amp; 0xF) == 0x08"/>
                <edc:SFRFieldSemantic edc:cname="TCD0" edc:desc="TCD0 WOA input source" edc:when="(field &amp; 0xF) == 0x09"/>
                <edc:SFRFieldSemantic edc:cname="SPI0" edc:desc="SPI0 MISO source" edc:when="(field &amp; 0xF) == 0x0B"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="CCL" edc:cname="TRUTH0" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x1C8">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="CCL">
              <edc:SFRFieldDef edc:cname="TRUTH" edc:nzwidth="0x8" edc:desc="Truth Table"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="CCL" edc:cname="LUT1CTRLA" edc:nzwidth="0x8" edc:access="nnnnn--n" edc:por="00000000" edc:mclr="00000000" edc:impl="0xF9" edc:_addr="0x1C9">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="CCL">
              <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="LUT Enable"/>
              <edc:AdjustPoint edc:offset="0x2"/>
              <edc:SFRFieldDef edc:cname="OUTEN" edc:nzwidth="0x1" edc:desc="Output Enable"/>
              <edc:SFRFieldDef edc:cname="FILTSEL" edc:nzwidth="0x2" edc:desc="Filter Selection">
                <edc:SFRFieldSemantic edc:cname="DISABLE" edc:desc="Filter disabled" edc:when="(field &amp; 0x3) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="SYNCH" edc:desc="Synchronizer enabled" edc:when="(field &amp; 0x3) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="FILTER" edc:desc="Filter enabled" edc:when="(field &amp; 0x3) == 0x02"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="CLKSRC" edc:nzwidth="0x1" edc:desc="Clock Source Selection">
                <edc:SFRFieldSemantic edc:cname="CLKPER" edc:desc="CLK_PER is clocking the LUT" edc:when="(field &amp; 0x1) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="IN2" edc:desc="IN[2] is clocking the LUT" edc:when="(field &amp; 0x1) == 0x01"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="EDGEDET" edc:nzwidth="0x1" edc:desc="Edge Detection Enable">
                <edc:SFRFieldSemantic edc:cname="DIS" edc:desc="Edge detector is disabled" edc:when="(field &amp; 0x1) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="EN" edc:desc="Edge detector is enabled" edc:when="(field &amp; 0x1) == 0x01"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="CCL" edc:cname="LUT1CTRLB" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x1CA">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="CCL">
              <edc:SFRFieldDef edc:cname="INSEL0" edc:nzwidth="0x4" edc:desc="LUT Input 0 Source Selection">
                <edc:SFRFieldSemantic edc:cname="MASK" edc:desc="Masked input" edc:when="(field &amp; 0xF) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="FEEDBACK" edc:desc="Feedback input source" edc:when="(field &amp; 0xF) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="LINK" edc:desc="Linked LUT input source" edc:when="(field &amp; 0xF) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="EVENT0" edc:desc="Event input source 0" edc:when="(field &amp; 0xF) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="EVENT1" edc:desc="Event input source 1" edc:when="(field &amp; 0xF) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="IO" edc:desc="IO pin LUTn-IN0 input source" edc:when="(field &amp; 0xF) == 0x05"/>
                <edc:SFRFieldSemantic edc:cname="AC0" edc:desc="AC0 OUT input source" edc:when="(field &amp; 0xF) == 0x06"/>
                <edc:SFRFieldSemantic edc:cname="TCB0" edc:desc="TCB0 WO input source" edc:when="(field &amp; 0xF) == 0x07"/>
                <edc:SFRFieldSemantic edc:cname="TCA0" edc:desc="TCA0 WO0 input source" edc:when="(field &amp; 0xF) == 0x08"/>
                <edc:SFRFieldSemantic edc:cname="TCD0" edc:desc="TCD0 WOA input source" edc:when="(field &amp; 0xF) == 0x09"/>
                <edc:SFRFieldSemantic edc:cname="USART0" edc:desc="USART0 XCK input source" edc:when="(field &amp; 0xF) == 0x0A"/>
                <edc:SFRFieldSemantic edc:cname="SPI0" edc:desc="SPI0 SCK source" edc:when="(field &amp; 0xF) == 0x0B"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="INSEL1" edc:nzwidth="0x4" edc:desc="LUT Input 1 Source Selection">
                <edc:SFRFieldSemantic edc:cname="MASK" edc:desc="Masked input" edc:when="(field &amp; 0xF) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="FEEDBACK" edc:desc="Feedback input source" edc:when="(field &amp; 0xF) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="LINK" edc:desc="Linked LUT input source" edc:when="(field &amp; 0xF) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="EVENT0" edc:desc="Event input source 0" edc:when="(field &amp; 0xF) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="EVENT1" edc:desc="Event input source 1" edc:when="(field &amp; 0xF) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="IO" edc:desc="IO pin LUTn-N1 input source" edc:when="(field &amp; 0xF) == 0x05"/>
                <edc:SFRFieldSemantic edc:cname="AC0" edc:desc="AC0 OUT input source" edc:when="(field &amp; 0xF) == 0x06"/>
                <edc:SFRFieldSemantic edc:cname="TCB0" edc:desc="TCB0 WO input source" edc:when="(field &amp; 0xF) == 0x07"/>
                <edc:SFRFieldSemantic edc:cname="TCA0" edc:desc="TCA0 WO1 input source" edc:when="(field &amp; 0xF) == 0x08"/>
                <edc:SFRFieldSemantic edc:cname="TCD0" edc:desc="TCD0 WOB input source" edc:when="(field &amp; 0xF) == 0x09"/>
                <edc:SFRFieldSemantic edc:cname="USART0" edc:desc="USART0 TXD input source" edc:when="(field &amp; 0xF) == 0x0A"/>
                <edc:SFRFieldSemantic edc:cname="SPI0" edc:desc="SPI0 MOSI input source" edc:when="(field &amp; 0xF) == 0x0B"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="CCL" edc:cname="LUT1CTRLC" edc:nzwidth="0x8" edc:access="----nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xF" edc:_addr="0x1CB">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="CCL">
              <edc:SFRFieldDef edc:cname="INSEL2" edc:nzwidth="0x4" edc:desc="LUT Input 2 Source Selection">
                <edc:SFRFieldSemantic edc:cname="MASK" edc:desc="Masked input" edc:when="(field &amp; 0xF) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="FEEDBACK" edc:desc="Feedback input source" edc:when="(field &amp; 0xF) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="LINK" edc:desc="Linked LUT input source" edc:when="(field &amp; 0xF) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="EVENT0" edc:desc="Event input source 0" edc:when="(field &amp; 0xF) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="EVENT1" edc:desc="Event input source 1" edc:when="(field &amp; 0xF) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="IO" edc:desc="IO pin LUTn-IN2 input source" edc:when="(field &amp; 0xF) == 0x05"/>
                <edc:SFRFieldSemantic edc:cname="AC0" edc:desc="AC0 OUT input source" edc:when="(field &amp; 0xF) == 0x06"/>
                <edc:SFRFieldSemantic edc:cname="TCB0" edc:desc="TCB0 WO input source" edc:when="(field &amp; 0xF) == 0x07"/>
                <edc:SFRFieldSemantic edc:cname="TCA0" edc:desc="TCA0 WO2 input source" edc:when="(field &amp; 0xF) == 0x08"/>
                <edc:SFRFieldSemantic edc:cname="TCD0" edc:desc="TCD0 WOA input source" edc:when="(field &amp; 0xF) == 0x09"/>
                <edc:SFRFieldSemantic edc:cname="SPI0" edc:desc="SPI0 MISO source" edc:when="(field &amp; 0xF) == 0x0B"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="CCL" edc:cname="TRUTH1" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x1CC">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="CCL">
              <edc:SFRFieldDef edc:cname="TRUTH" edc:nzwidth="0x8" edc:desc="Truth Table"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:AdjustPoint edc:offset="0x33" edc:_addr="0x1CD"/>
        <edc:SFRDef ltx:memberofperipheral="PORTMUX" edc:cname="CTRLA" edc:nzwidth="0x8" edc:access="--nn-nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x37" edc:_addr="0x200">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORTMUX">
              <edc:SFRFieldDef edc:cname="EVOUT0" edc:nzwidth="0x1" edc:desc="Event Output 0"/>
              <edc:SFRFieldDef edc:cname="EVOUT1" edc:nzwidth="0x1" edc:desc="Event Output 1"/>
              <edc:SFRFieldDef edc:cname="EVOUT2" edc:nzwidth="0x1" edc:desc="Event Output 2"/>
              <edc:AdjustPoint edc:offset="0x1"/>
              <edc:SFRFieldDef edc:cname="LUT0" edc:nzwidth="0x1" edc:desc="Configurable Custom Logic LUT0">
                <edc:SFRFieldSemantic edc:cname="DEFAULT" edc:desc="Default pin" edc:when="(field &amp; 0x1) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="ALTERNATE" edc:desc="Alternate pin" edc:when="(field &amp; 0x1) == 0x01"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="LUT1" edc:nzwidth="0x1" edc:desc="Configurable Custom Logic LUT1">
                <edc:SFRFieldSemantic edc:cname="DEFAULT" edc:desc="Default pin" edc:when="(field &amp; 0x1) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="ALTERNATE" edc:desc="Alternate pin" edc:when="(field &amp; 0x1) == 0x01"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="PORTMUX" edc:cname="CTRLB" edc:nzwidth="0x8" edc:access="-----n-n" edc:por="00000000" edc:mclr="00000000" edc:impl="0x5" edc:_addr="0x201">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORTMUX">
              <edc:SFRFieldDef edc:cname="USART0" edc:nzwidth="0x1" edc:desc="Port Multiplexer USART0">
                <edc:SFRFieldSemantic edc:cname="DEFAULT" edc:desc="Default pins" edc:when="(field &amp; 0x1) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="ALTERNATE" edc:desc="Alternate pins" edc:when="(field &amp; 0x1) == 0x01"/>
              </edc:SFRFieldDef>
              <edc:AdjustPoint edc:offset="0x1"/>
              <edc:SFRFieldDef edc:cname="SPI0" edc:nzwidth="0x1" edc:desc="Port Multiplexer SPI0">
                <edc:SFRFieldSemantic edc:cname="DEFAULT" edc:desc="Default pins" edc:when="(field &amp; 0x1) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="ALTERNATE" edc:desc="Alternate pins" edc:when="(field &amp; 0x1) == 0x01"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="PORTMUX" edc:cname="CTRLC" edc:nzwidth="0x8" edc:access="----nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xF" edc:_addr="0x202">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORTMUX">
              <edc:SFRFieldDef edc:cname="TCA00" edc:nzwidth="0x1" edc:desc="Port Multiplexer TCA0 Output 0">
                <edc:SFRFieldSemantic edc:cname="DEFAULT" edc:desc="Default pin" edc:when="(field &amp; 0x1) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="ALTERNATE" edc:desc="Alternate pin" edc:when="(field &amp; 0x1) == 0x01"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="TCA01" edc:nzwidth="0x1" edc:desc="Port Multiplexer TCA0 Output 1">
                <edc:SFRFieldSemantic edc:cname="DEFAULT" edc:desc="Default pin" edc:when="(field &amp; 0x1) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="ALTERNATE" edc:desc="Alternate pin" edc:when="(field &amp; 0x1) == 0x01"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="TCA02" edc:nzwidth="0x1" edc:desc="Port Multiplexer TCA0 Output 2">
                <edc:SFRFieldSemantic edc:cname="DEFAULT" edc:desc="Default pin" edc:when="(field &amp; 0x1) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="ALTERNATE" edc:desc="Alternate pin" edc:when="(field &amp; 0x1) == 0x01"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="TCA03" edc:nzwidth="0x1" edc:desc="Port Multiplexer TCA0 Output 3">
                <edc:SFRFieldSemantic edc:cname="DEFAULT" edc:desc="Default pin" edc:when="(field &amp; 0x1) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="ALTERNATE" edc:desc="Alternate pin" edc:when="(field &amp; 0x1) == 0x01"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="PORTMUX" edc:cname="CTRLD" edc:nzwidth="0x8" edc:access="-------n" edc:por="00000000" edc:mclr="00000000" edc:impl="0x1" edc:_addr="0x203">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORTMUX">
              <edc:SFRFieldDef edc:cname="TCB0" edc:nzwidth="0x1" edc:desc="Port Multiplexer TCB">
                <edc:SFRFieldSemantic edc:cname="DEFAULT" edc:desc="Default pin" edc:when="(field &amp; 0x1) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="ALTERNATE" edc:desc="Alternate pin" edc:when="(field &amp; 0x1) == 0x01"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:AdjustPoint edc:offset="0x1FC" edc:_addr="0x204"/>
        <edc:SFRDef ltx:memberofperipheral="PORTA" edc:cname="DIR" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x400"/>
        <edc:SFRDef ltx:memberofperipheral="PORTA" edc:cname="DIRSET" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x401"/>
        <edc:SFRDef ltx:memberofperipheral="PORTA" edc:cname="DIRCLR" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x402"/>
        <edc:SFRDef ltx:memberofperipheral="PORTA" edc:cname="DIRTGL" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x403"/>
        <edc:SFRDef ltx:memberofperipheral="PORTA" edc:cname="OUT" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x404"/>
        <edc:SFRDef ltx:memberofperipheral="PORTA" edc:cname="OUTSET" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x405"/>
        <edc:SFRDef ltx:memberofperipheral="PORTA" edc:cname="OUTCLR" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x406"/>
        <edc:SFRDef ltx:memberofperipheral="PORTA" edc:cname="OUTTGL" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x407"/>
        <edc:SFRDef ltx:memberofperipheral="PORTA" edc:cname="IN" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x408"/>
        <edc:SFRDef ltx:memberofperipheral="PORTA" edc:cname="INTFLAGS" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x409">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORTA">
              <edc:SFRFieldDef edc:cname="INT" edc:nzwidth="0x8" edc:desc="Pin Interrupt"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:AdjustPoint edc:offset="0x6" edc:_addr="0x40A"/>
        <edc:SFRDef ltx:memberofperipheral="PORTA" edc:cname="PIN0CTRL" edc:nzwidth="0x8" edc:access="n---nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x8F" edc:_addr="0x410">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORTA">
              <edc:SFRFieldDef edc:cname="ISC" edc:nzwidth="0x3" edc:desc="Input/Sense Configuration">
                <edc:SFRFieldSemantic edc:cname="INTDISABLE" edc:desc="Interrupt disabled but input buffer enabled" edc:when="(field &amp; 0x7) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="BOTHEDGES" edc:desc="Sense Both Edges" edc:when="(field &amp; 0x7) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="RISING" edc:desc="Sense Rising Edge" edc:when="(field &amp; 0x7) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="FALLING" edc:desc="Sense Falling Edge" edc:when="(field &amp; 0x7) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="INPUT_DISABLE" edc:desc="Digital Input Buffer disabled" edc:when="(field &amp; 0x7) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="LEVEL" edc:desc="Sense low Level" edc:when="(field &amp; 0x7) == 0x05"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="PULLUPEN" edc:nzwidth="0x1" edc:desc="Pullup enable"/>
              <edc:AdjustPoint edc:offset="0x3"/>
              <edc:SFRFieldDef edc:cname="INVEN" edc:nzwidth="0x1" edc:desc="Inverted I/O Enable"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="PORTA" edc:cname="PIN1CTRL" edc:nzwidth="0x8" edc:access="n---nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x8F" edc:_addr="0x411">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORTA">
              <edc:SFRFieldDef edc:cname="ISC" edc:nzwidth="0x3" edc:desc="Input/Sense Configuration">
                <edc:SFRFieldSemantic edc:cname="INTDISABLE" edc:desc="Interrupt disabled but input buffer enabled" edc:when="(field &amp; 0x7) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="BOTHEDGES" edc:desc="Sense Both Edges" edc:when="(field &amp; 0x7) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="RISING" edc:desc="Sense Rising Edge" edc:when="(field &amp; 0x7) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="FALLING" edc:desc="Sense Falling Edge" edc:when="(field &amp; 0x7) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="INPUT_DISABLE" edc:desc="Digital Input Buffer disabled" edc:when="(field &amp; 0x7) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="LEVEL" edc:desc="Sense low Level" edc:when="(field &amp; 0x7) == 0x05"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="PULLUPEN" edc:nzwidth="0x1" edc:desc="Pullup enable"/>
              <edc:AdjustPoint edc:offset="0x3"/>
              <edc:SFRFieldDef edc:cname="INVEN" edc:nzwidth="0x1" edc:desc="Inverted I/O Enable"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="PORTA" edc:cname="PIN2CTRL" edc:nzwidth="0x8" edc:access="n---nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x8F" edc:_addr="0x412">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORTA">
              <edc:SFRFieldDef edc:cname="ISC" edc:nzwidth="0x3" edc:desc="Input/Sense Configuration">
                <edc:SFRFieldSemantic edc:cname="INTDISABLE" edc:desc="Interrupt disabled but input buffer enabled" edc:when="(field &amp; 0x7) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="BOTHEDGES" edc:desc="Sense Both Edges" edc:when="(field &amp; 0x7) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="RISING" edc:desc="Sense Rising Edge" edc:when="(field &amp; 0x7) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="FALLING" edc:desc="Sense Falling Edge" edc:when="(field &amp; 0x7) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="INPUT_DISABLE" edc:desc="Digital Input Buffer disabled" edc:when="(field &amp; 0x7) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="LEVEL" edc:desc="Sense low Level" edc:when="(field &amp; 0x7) == 0x05"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="PULLUPEN" edc:nzwidth="0x1" edc:desc="Pullup enable"/>
              <edc:AdjustPoint edc:offset="0x3"/>
              <edc:SFRFieldDef edc:cname="INVEN" edc:nzwidth="0x1" edc:desc="Inverted I/O Enable"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="PORTA" edc:cname="PIN3CTRL" edc:nzwidth="0x8" edc:access="n---nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x8F" edc:_addr="0x413">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORTA">
              <edc:SFRFieldDef edc:cname="ISC" edc:nzwidth="0x3" edc:desc="Input/Sense Configuration">
                <edc:SFRFieldSemantic edc:cname="INTDISABLE" edc:desc="Interrupt disabled but input buffer enabled" edc:when="(field &amp; 0x7) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="BOTHEDGES" edc:desc="Sense Both Edges" edc:when="(field &amp; 0x7) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="RISING" edc:desc="Sense Rising Edge" edc:when="(field &amp; 0x7) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="FALLING" edc:desc="Sense Falling Edge" edc:when="(field &amp; 0x7) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="INPUT_DISABLE" edc:desc="Digital Input Buffer disabled" edc:when="(field &amp; 0x7) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="LEVEL" edc:desc="Sense low Level" edc:when="(field &amp; 0x7) == 0x05"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="PULLUPEN" edc:nzwidth="0x1" edc:desc="Pullup enable"/>
              <edc:AdjustPoint edc:offset="0x3"/>
              <edc:SFRFieldDef edc:cname="INVEN" edc:nzwidth="0x1" edc:desc="Inverted I/O Enable"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="PORTA" edc:cname="PIN4CTRL" edc:nzwidth="0x8" edc:access="n---nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x8F" edc:_addr="0x414">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORTA">
              <edc:SFRFieldDef edc:cname="ISC" edc:nzwidth="0x3" edc:desc="Input/Sense Configuration">
                <edc:SFRFieldSemantic edc:cname="INTDISABLE" edc:desc="Interrupt disabled but input buffer enabled" edc:when="(field &amp; 0x7) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="BOTHEDGES" edc:desc="Sense Both Edges" edc:when="(field &amp; 0x7) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="RISING" edc:desc="Sense Rising Edge" edc:when="(field &amp; 0x7) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="FALLING" edc:desc="Sense Falling Edge" edc:when="(field &amp; 0x7) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="INPUT_DISABLE" edc:desc="Digital Input Buffer disabled" edc:when="(field &amp; 0x7) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="LEVEL" edc:desc="Sense low Level" edc:when="(field &amp; 0x7) == 0x05"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="PULLUPEN" edc:nzwidth="0x1" edc:desc="Pullup enable"/>
              <edc:AdjustPoint edc:offset="0x3"/>
              <edc:SFRFieldDef edc:cname="INVEN" edc:nzwidth="0x1" edc:desc="Inverted I/O Enable"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="PORTA" edc:cname="PIN5CTRL" edc:nzwidth="0x8" edc:access="n---nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x8F" edc:_addr="0x415">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORTA">
              <edc:SFRFieldDef edc:cname="ISC" edc:nzwidth="0x3" edc:desc="Input/Sense Configuration">
                <edc:SFRFieldSemantic edc:cname="INTDISABLE" edc:desc="Interrupt disabled but input buffer enabled" edc:when="(field &amp; 0x7) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="BOTHEDGES" edc:desc="Sense Both Edges" edc:when="(field &amp; 0x7) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="RISING" edc:desc="Sense Rising Edge" edc:when="(field &amp; 0x7) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="FALLING" edc:desc="Sense Falling Edge" edc:when="(field &amp; 0x7) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="INPUT_DISABLE" edc:desc="Digital Input Buffer disabled" edc:when="(field &amp; 0x7) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="LEVEL" edc:desc="Sense low Level" edc:when="(field &amp; 0x7) == 0x05"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="PULLUPEN" edc:nzwidth="0x1" edc:desc="Pullup enable"/>
              <edc:AdjustPoint edc:offset="0x3"/>
              <edc:SFRFieldDef edc:cname="INVEN" edc:nzwidth="0x1" edc:desc="Inverted I/O Enable"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="PORTA" edc:cname="PIN6CTRL" edc:nzwidth="0x8" edc:access="n---nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x8F" edc:_addr="0x416">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORTA">
              <edc:SFRFieldDef edc:cname="ISC" edc:nzwidth="0x3" edc:desc="Input/Sense Configuration">
                <edc:SFRFieldSemantic edc:cname="INTDISABLE" edc:desc="Interrupt disabled but input buffer enabled" edc:when="(field &amp; 0x7) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="BOTHEDGES" edc:desc="Sense Both Edges" edc:when="(field &amp; 0x7) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="RISING" edc:desc="Sense Rising Edge" edc:when="(field &amp; 0x7) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="FALLING" edc:desc="Sense Falling Edge" edc:when="(field &amp; 0x7) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="INPUT_DISABLE" edc:desc="Digital Input Buffer disabled" edc:when="(field &amp; 0x7) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="LEVEL" edc:desc="Sense low Level" edc:when="(field &amp; 0x7) == 0x05"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="PULLUPEN" edc:nzwidth="0x1" edc:desc="Pullup enable"/>
              <edc:AdjustPoint edc:offset="0x3"/>
              <edc:SFRFieldDef edc:cname="INVEN" edc:nzwidth="0x1" edc:desc="Inverted I/O Enable"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="PORTA" edc:cname="PIN7CTRL" edc:nzwidth="0x8" edc:access="n---nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x8F" edc:_addr="0x417">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORTA">
              <edc:SFRFieldDef edc:cname="ISC" edc:nzwidth="0x3" edc:desc="Input/Sense Configuration">
                <edc:SFRFieldSemantic edc:cname="INTDISABLE" edc:desc="Interrupt disabled but input buffer enabled" edc:when="(field &amp; 0x7) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="BOTHEDGES" edc:desc="Sense Both Edges" edc:when="(field &amp; 0x7) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="RISING" edc:desc="Sense Rising Edge" edc:when="(field &amp; 0x7) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="FALLING" edc:desc="Sense Falling Edge" edc:when="(field &amp; 0x7) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="INPUT_DISABLE" edc:desc="Digital Input Buffer disabled" edc:when="(field &amp; 0x7) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="LEVEL" edc:desc="Sense low Level" edc:when="(field &amp; 0x7) == 0x05"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="PULLUPEN" edc:nzwidth="0x1" edc:desc="Pullup enable"/>
              <edc:AdjustPoint edc:offset="0x3"/>
              <edc:SFRFieldDef edc:cname="INVEN" edc:nzwidth="0x1" edc:desc="Inverted I/O Enable"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:AdjustPoint edc:offset="0x1E8" edc:_addr="0x418"/>
        <edc:SFRDef ltx:memberofperipheral="ADC0" edc:cname="CTRLA" edc:nzwidth="0x8" edc:access="n----nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x87" edc:_addr="0x600">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="ADC0">
              <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="ADC Enable"/>
              <edc:SFRFieldDef edc:cname="FREERUN" edc:nzwidth="0x1" edc:desc="ADC Freerun mode"/>
              <edc:SFRFieldDef edc:cname="RESSEL" edc:nzwidth="0x1" edc:desc="ADC Resolution">
                <edc:SFRFieldSemantic edc:cname="10BIT" edc:desc="10-bit mode" edc:when="(field &amp; 0x1) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="8BIT" edc:desc="8-bit mode" edc:when="(field &amp; 0x1) == 0x01"/>
              </edc:SFRFieldDef>
              <edc:AdjustPoint edc:offset="0x4"/>
              <edc:SFRFieldDef edc:cname="RUNSTBY" edc:nzwidth="0x1" edc:desc="Run standby mode"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="ADC0" edc:cname="CTRLB" edc:nzwidth="0x8" edc:access="-----nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x7" edc:_addr="0x601">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="ADC0">
              <edc:SFRFieldDef edc:cname="SAMPNUM" edc:nzwidth="0x3" edc:desc="Accumulation Samples">
                <edc:SFRFieldSemantic edc:cname="ACC1" edc:desc="1 ADC sample" edc:when="(field &amp; 0x7) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="ACC2" edc:desc="Accumulate 2 samples" edc:when="(field &amp; 0x7) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="ACC4" edc:desc="Accumulate 4 samples" edc:when="(field &amp; 0x7) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="ACC8" edc:desc="Accumulate 8 samples" edc:when="(field &amp; 0x7) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="ACC16" edc:desc="Accumulate 16 samples" edc:when="(field &amp; 0x7) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="ACC32" edc:desc="Accumulate 32 samples" edc:when="(field &amp; 0x7) == 0x05"/>
                <edc:SFRFieldSemantic edc:cname="ACC64" edc:desc="Accumulate 64 samples" edc:when="(field &amp; 0x7) == 0x06"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="ADC0" edc:cname="CTRLC" edc:nzwidth="0x8" edc:access="-nnn-nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x77" edc:_addr="0x602">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="ADC0">
              <edc:SFRFieldDef edc:cname="PRESC" edc:nzwidth="0x3" edc:desc="Clock Pre-scaler">
                <edc:SFRFieldSemantic edc:cname="DIV2" edc:desc="CLK_PER divided by 2" edc:when="(field &amp; 0x7) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="DIV4" edc:desc="CLK_PER divided by 4" edc:when="(field &amp; 0x7) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="DIV8" edc:desc="CLK_PER divided by 8" edc:when="(field &amp; 0x7) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="DIV16" edc:desc="CLK_PER divided by 16" edc:when="(field &amp; 0x7) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="DIV32" edc:desc="CLK_PER divided by 32" edc:when="(field &amp; 0x7) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="DIV64" edc:desc="CLK_PER divided by 64" edc:when="(field &amp; 0x7) == 0x05"/>
                <edc:SFRFieldSemantic edc:cname="DIV128" edc:desc="CLK_PER divided by 128" edc:when="(field &amp; 0x7) == 0x06"/>
                <edc:SFRFieldSemantic edc:cname="DIV256" edc:desc="CLK_PER divided by 256" edc:when="(field &amp; 0x7) == 0x07"/>
              </edc:SFRFieldDef>
              <edc:AdjustPoint edc:offset="0x1"/>
              <edc:SFRFieldDef edc:cname="REFSEL" edc:nzwidth="0x2" edc:desc="Reference Selection">
                <edc:SFRFieldSemantic edc:cname="INTREF" edc:desc="Internal reference" edc:when="(field &amp; 0x3) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="VDDREF" edc:desc="VDD" edc:when="(field &amp; 0x3) == 0x01"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="SAMPCAP" edc:nzwidth="0x1" edc:desc="Sample Capacitance Selection"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="ADC0" edc:cname="CTRLD" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x603">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="ADC0">
              <edc:SFRFieldDef edc:cname="SAMPDLY" edc:nzwidth="0x4" edc:desc="Sampling Delay Selection"/>
              <edc:SFRFieldDef edc:cname="ASDV" edc:nzwidth="0x1" edc:desc="Automatic Sampling Delay Variation">
                <edc:SFRFieldSemantic edc:cname="ASVOFF" edc:desc="The Automatic Sampling Delay Variation is disabled" edc:when="(field &amp; 0x1) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="ASVON" edc:desc="The Automatic Sampling Delay Variation is enabled" edc:when="(field &amp; 0x1) == 0x01"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="INITDLY" edc:nzwidth="0x3" edc:desc="Initial Delay Selection">
                <edc:SFRFieldSemantic edc:cname="DLY0" edc:desc="Delay 0 CLK_ADC cycles" edc:when="(field &amp; 0x7) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="DLY16" edc:desc="Delay 16 CLK_ADC cycles" edc:when="(field &amp; 0x7) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="DLY32" edc:desc="Delay 32 CLK_ADC cycles" edc:when="(field &amp; 0x7) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="DLY64" edc:desc="Delay 64 CLK_ADC cycles" edc:when="(field &amp; 0x7) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="DLY128" edc:desc="Delay 128 CLK_ADC cycles" edc:when="(field &amp; 0x7) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="DLY256" edc:desc="Delay 256 CLK_ADC cycles" edc:when="(field &amp; 0x7) == 0x05"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="ADC0" edc:cname="CTRLE" edc:nzwidth="0x8" edc:access="-----nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x7" edc:_addr="0x604">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="ADC0">
              <edc:SFRFieldDef edc:cname="WINCM" edc:nzwidth="0x3" edc:desc="Window Comparator Mode">
                <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="No Window Comparison" edc:when="(field &amp; 0x7) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="BELOW" edc:desc="Below Window" edc:when="(field &amp; 0x7) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="ABOVE" edc:desc="Above Window" edc:when="(field &amp; 0x7) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="INSIDE" edc:desc="Inside Window" edc:when="(field &amp; 0x7) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="OUTSIDE" edc:desc="Outside Window" edc:when="(field &amp; 0x7) == 0x04"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="ADC0" edc:cname="SAMPCTRL" edc:nzwidth="0x8" edc:access="---nnnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x1F" edc:_addr="0x605">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="ADC0">
              <edc:SFRFieldDef edc:cname="SAMPLEN" edc:nzwidth="0x5" edc:desc="Sample lenght"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="ADC0" edc:cname="MUXPOS" edc:nzwidth="0x8" edc:access="---nnnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x1F" edc:_addr="0x606">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="ADC0">
              <edc:SFRFieldDef edc:cname="MUXPOS" edc:nzwidth="0x5" edc:desc="Analog Channel Selection Bits">
                <edc:SFRFieldSemantic edc:cname="AIN0" edc:desc="ADC input pin 0" edc:when="(field &amp; 0x1F) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="AIN1" edc:desc="ADC input pin 1" edc:when="(field &amp; 0x1F) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="AIN2" edc:desc="ADC input pin 2" edc:when="(field &amp; 0x1F) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="AIN3" edc:desc="ADC input pin 3" edc:when="(field &amp; 0x1F) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="AIN4" edc:desc="ADC input pin 4" edc:when="(field &amp; 0x1F) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="AIN5" edc:desc="ADC input pin 5" edc:when="(field &amp; 0x1F) == 0x05"/>
                <edc:SFRFieldSemantic edc:cname="AIN6" edc:desc="ADC input pin 6" edc:when="(field &amp; 0x1F) == 0x06"/>
                <edc:SFRFieldSemantic edc:cname="AIN7" edc:desc="ADC input pin 7" edc:when="(field &amp; 0x1F) == 0x07"/>
                <edc:SFRFieldSemantic edc:cname="AIN8" edc:desc="ADC input pin 8" edc:when="(field &amp; 0x1F) == 0x08"/>
                <edc:SFRFieldSemantic edc:cname="AIN9" edc:desc="ADC input pin 9" edc:when="(field &amp; 0x1F) == 0x09"/>
                <edc:SFRFieldSemantic edc:cname="AIN10" edc:desc="ADC input pin 10" edc:when="(field &amp; 0x1F) == 0x0A"/>
                <edc:SFRFieldSemantic edc:cname="AIN11" edc:desc="ADC input pin 11" edc:when="(field &amp; 0x1F) == 0x0B"/>
                <edc:SFRFieldSemantic edc:cname="DAC0" edc:desc="DAC0" edc:when="(field &amp; 0x1F) == 0x1C"/>
                <edc:SFRFieldSemantic edc:cname="INTREF" edc:desc="Internal Ref" edc:when="(field &amp; 0x1F) == 0x1D"/>
                <edc:SFRFieldSemantic edc:cname="TEMPSENSE" edc:desc="Temp sensor" edc:when="(field &amp; 0x1F) == 0x1E"/>
                <edc:SFRFieldSemantic edc:cname="GND" edc:desc="GND" edc:when="(field &amp; 0x1F) == 0x1F"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:AdjustPoint edc:offset="0x1" edc:_addr="0x607"/>
        <edc:SFRDef ltx:memberofperipheral="ADC0" edc:cname="COMMAND" edc:nzwidth="0x8" edc:access="-------n" edc:por="00000000" edc:mclr="00000000" edc:impl="0x1" edc:_addr="0x608">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="ADC0">
              <edc:SFRFieldDef edc:cname="STCONV" edc:nzwidth="0x1" edc:desc="Start Conversion Operation"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="ADC0" edc:cname="EVCTRL" edc:nzwidth="0x8" edc:access="-------n" edc:por="00000000" edc:mclr="00000000" edc:impl="0x1" edc:_addr="0x609">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="ADC0">
              <edc:SFRFieldDef edc:cname="STARTEI" edc:nzwidth="0x1" edc:desc="Start Event Input Enable"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="ADC0" edc:cname="INTCTRL" edc:nzwidth="0x8" edc:access="------nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3" edc:_addr="0x60A">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="ADC0">
              <edc:SFRFieldDef edc:cname="RESRDY" edc:nzwidth="0x1" edc:desc="Result Ready Interrupt Enable"/>
              <edc:SFRFieldDef edc:cname="WCMP" edc:nzwidth="0x1" edc:desc="Window Comparator Interrupt Enable"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="ADC0" edc:cname="INTFLAGS" edc:nzwidth="0x8" edc:access="------nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3" edc:_addr="0x60B">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="ADC0">
              <edc:SFRFieldDef edc:cname="RESRDY" edc:nzwidth="0x1" edc:desc="Result Ready Flag"/>
              <edc:SFRFieldDef edc:cname="WCMP" edc:nzwidth="0x1" edc:desc="Window Comparator Flag"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="ADC0" edc:cname="DBGCTRL" edc:nzwidth="0x8" edc:access="-------n" edc:por="00000000" edc:mclr="00000000" edc:impl="0x1" edc:_addr="0x60C">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="ADC0">
              <edc:SFRFieldDef edc:cname="DBGRUN" edc:nzwidth="0x1" edc:desc="Debug run"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="ADC0" edc:cname="TEMP" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x60D">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="ADC0">
              <edc:SFRFieldDef edc:cname="TEMP" edc:nzwidth="0x8" edc:desc="Temporary"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:AdjustPoint edc:offset="0x2" edc:_addr="0x60E"/>
        <edc:SFRDef ltx:memberofperipheral="ADC0" edc:cname="RES" edc:nzwidth="0x10" edc:access="rrrrrrrrrrrrrrrr" edc:_addr="0x610"/>
        <edc:SFRDef ltx:memberofperipheral="ADC0" edc:cname="WINLT" edc:nzwidth="0x10" edc:access="nnnnnnnnnnnnnnnn" edc:_addr="0x612"/>
        <edc:SFRDef ltx:memberofperipheral="ADC0" edc:cname="WINHT" edc:nzwidth="0x10" edc:access="nnnnnnnnnnnnnnnn" edc:_addr="0x614"/>
        <edc:SFRDef ltx:memberofperipheral="ADC0" edc:cname="CALIB" edc:nzwidth="0x8" edc:access="-------n" edc:por="00000000" edc:mclr="00000000" edc:impl="0x1" edc:_addr="0x616">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="ADC0">
              <edc:SFRFieldDef edc:cname="DUTYCYC" edc:nzwidth="0x1" edc:desc="Duty Cycle">
                <edc:SFRFieldSemantic edc:cname="DUTY50" edc:desc="50% Duty cycle" edc:when="(field &amp; 0x1) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="DUTY25" edc:desc="25% Duty cycle" edc:when="(field &amp; 0x1) == 0x01"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:AdjustPoint edc:offset="0x59" edc:_addr="0x617"/>
        <edc:SFRDef ltx:memberofperipheral="AC0" edc:cname="CTRLA" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x670">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="AC0">
              <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="Enable"/>
              <edc:SFRFieldDef edc:cname="HYSMODE" edc:nzwidth="0x2" edc:desc="Hysteresis Mode">
                <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="No hysteresis" edc:when="(field &amp; 0x3) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="10mV" edc:desc="10mV hysteresis" edc:when="(field &amp; 0x3) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="25mV" edc:desc="25mV hysteresis" edc:when="(field &amp; 0x3) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="50mV" edc:desc="50mV hysteresis" edc:when="(field &amp; 0x3) == 0x03"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="LPMODE" edc:nzwidth="0x1" edc:desc="Low Power Mode">
                <edc:SFRFieldSemantic edc:cname="DIS" edc:desc="Low power mode disabled" edc:when="(field &amp; 0x1) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="EN" edc:desc="Low power mode enabled" edc:when="(field &amp; 0x1) == 0x01"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="INTMODE" edc:nzwidth="0x2" edc:desc="Interrupt Mode">
                <edc:SFRFieldSemantic edc:cname="BOTHEDGE" edc:desc="Any Edge" edc:when="(field &amp; 0x3) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="NEGEDGE" edc:desc="Negative Edge" edc:when="(field &amp; 0x3) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="POSEDGE" edc:desc="Positive Edge" edc:when="(field &amp; 0x3) == 0x03"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="OUTEN" edc:nzwidth="0x1" edc:desc="Output Buffer Enable"/>
              <edc:SFRFieldDef edc:cname="RUNSTDBY" edc:nzwidth="0x1" edc:desc="Run in Standby Mode"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:AdjustPoint edc:offset="0x1" edc:_addr="0x671"/>
        <edc:SFRDef ltx:memberofperipheral="AC0" edc:cname="MUXCTRLA" edc:nzwidth="0x8" edc:access="n--nn-nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x9B" edc:_addr="0x672">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="AC0">
              <edc:SFRFieldDef edc:cname="MUXNEG" edc:nzwidth="0x2" edc:desc="Negative Input MUX Selection">
                <edc:SFRFieldSemantic edc:cname="PIN0" edc:desc="Negative Pin 0" edc:when="(field &amp; 0x3) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="VREF" edc:desc="Voltage Reference" edc:when="(field &amp; 0x3) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="DAC" edc:desc="DAC output" edc:when="(field &amp; 0x3) == 0x03"/>
              </edc:SFRFieldDef>
              <edc:AdjustPoint edc:offset="0x1"/>
              <edc:SFRFieldDef edc:cname="MUXPOS" edc:nzwidth="0x2" edc:desc="Positive Input MUX Selection">
                <edc:SFRFieldSemantic edc:cname="PIN0" edc:desc="Positive Pin 0" edc:when="(field &amp; 0x3) == 0x00"/>
              </edc:SFRFieldDef>
              <edc:AdjustPoint edc:offset="0x2"/>
              <edc:SFRFieldDef edc:cname="INVERT" edc:nzwidth="0x1" edc:desc="Invert AC Output"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:AdjustPoint edc:offset="0x3" edc:_addr="0x673"/>
        <edc:SFRDef ltx:memberofperipheral="AC0" edc:cname="INTCTRL" edc:nzwidth="0x8" edc:access="-------n" edc:por="00000000" edc:mclr="00000000" edc:impl="0x1" edc:_addr="0x676">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="AC0">
              <edc:SFRFieldDef edc:cname="CMP" edc:nzwidth="0x1" edc:desc="Analog Comparator 0 Interrupt Enable"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="AC0" edc:cname="STATUS" edc:nzwidth="0x8" edc:access="---r---n" edc:por="00000000" edc:mclr="00000000" edc:impl="0x11" edc:_addr="0x677">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="AC0">
              <edc:SFRFieldDef edc:cname="CMP" edc:nzwidth="0x1" edc:desc="Analog Comparator Interrupt Flag"/>
              <edc:AdjustPoint edc:offset="0x3"/>
              <edc:SFRFieldDef edc:cname="STATE" edc:nzwidth="0x1" edc:desc="Analog Comparator State"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:AdjustPoint edc:offset="0x8" edc:_addr="0x678"/>
        <edc:SFRDef ltx:memberofperipheral="DAC0" edc:cname="CTRLA" edc:nzwidth="0x8" edc:access="nn-----n" edc:por="00000000" edc:mclr="00000000" edc:impl="0xC1" edc:_addr="0x680">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DAC0">
              <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="DAC Enable"/>
              <edc:AdjustPoint edc:offset="0x5"/>
              <edc:SFRFieldDef edc:cname="OUTEN" edc:nzwidth="0x1" edc:desc="Output Buffer Enable"/>
              <edc:SFRFieldDef edc:cname="RUNSTDBY" edc:nzwidth="0x1" edc:desc="Run in Standby Mode"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="DAC0" edc:cname="DATA" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x681"/>
        <edc:AdjustPoint edc:offset="0x17E" edc:_addr="0x682"/>
        <edc:SFRDef ltx:memberofperipheral="USART0" edc:cname="RXDATAL" edc:nzwidth="0x8" edc:access="rrrrrrrr" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x800">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="USART0">
              <edc:SFRFieldDef edc:cname="DATA" edc:nzwidth="0x8" edc:desc="RX Data"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="USART0" edc:cname="RXDATAH" edc:nzwidth="0x8" edc:access="rr---rrr" edc:por="00000000" edc:mclr="00000000" edc:impl="0xC7" edc:_addr="0x801">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="USART0">
              <edc:SFRFieldDef edc:cname="DATA8" edc:nzwidth="0x1" edc:desc="Receiver Data Register"/>
              <edc:SFRFieldDef edc:cname="PERR" edc:nzwidth="0x1" edc:desc="Parity Error"/>
              <edc:SFRFieldDef edc:cname="FERR" edc:nzwidth="0x1" edc:desc="Frame Error"/>
              <edc:AdjustPoint edc:offset="0x3"/>
              <edc:SFRFieldDef edc:cname="BUFOVF" edc:nzwidth="0x1" edc:desc="Buffer Overflow"/>
              <edc:SFRFieldDef edc:cname="RXCIF" edc:nzwidth="0x1" edc:desc="Receive Complete Interrupt Flag"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="USART0" edc:cname="TXDATAL" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x802">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="USART0">
              <edc:SFRFieldDef edc:cname="DATA" edc:nzwidth="0x8" edc:desc="Transmit Data Register"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="USART0" edc:cname="TXDATAH" edc:nzwidth="0x8" edc:access="-------n" edc:por="00000000" edc:mclr="00000000" edc:impl="0x1" edc:_addr="0x803">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="USART0">
              <edc:SFRFieldDef edc:cname="DATA8" edc:nzwidth="0x1" edc:desc="Transmit Data Register (CHSIZE=9bit)"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="USART0" edc:cname="STATUS" edc:nzwidth="0x8" edc:access="rnrrn-nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xFB" edc:_addr="0x804">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="USART0">
              <edc:SFRFieldDef edc:cname="WFB" edc:nzwidth="0x1" edc:desc="Wait For Break"/>
              <edc:SFRFieldDef edc:cname="BDF" edc:nzwidth="0x1" edc:desc="Break Detected Flag"/>
              <edc:AdjustPoint edc:offset="0x1"/>
              <edc:SFRFieldDef edc:cname="ISFIF" edc:nzwidth="0x1" edc:desc="Inconsistent Sync Field Interrupt Flag"/>
              <edc:SFRFieldDef edc:cname="RXSIF" edc:nzwidth="0x1" edc:desc="Receive Start Interrupt"/>
              <edc:SFRFieldDef edc:cname="DREIF" edc:nzwidth="0x1" edc:desc="Data Register Empty Flag"/>
              <edc:SFRFieldDef edc:cname="TXCIF" edc:nzwidth="0x1" edc:desc="Transmit Interrupt Flag"/>
              <edc:SFRFieldDef edc:cname="RXCIF" edc:nzwidth="0x1" edc:desc="Receive Complete Interrupt Flag"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="USART0" edc:cname="CTRLA" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x805">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="USART0">
              <edc:SFRFieldDef edc:cname="RS485" edc:nzwidth="0x2" edc:desc="RS485 Mode internal transmitter">
                <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="RS485 Mode disabled" edc:when="(field &amp; 0x3) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="EXT" edc:desc="RS485 Mode External drive" edc:when="(field &amp; 0x3) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="INT" edc:desc="RS485 Mode Internal drive" edc:when="(field &amp; 0x3) == 0x02"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="ABEIE" edc:nzwidth="0x1" edc:desc="Auto-baud Error Interrupt Enable"/>
              <edc:SFRFieldDef edc:cname="LBME" edc:nzwidth="0x1" edc:desc="Loop-back Mode Enable"/>
              <edc:SFRFieldDef edc:cname="RXSIE" edc:nzwidth="0x1" edc:desc="Receiver Start Frame Interrupt Enable"/>
              <edc:SFRFieldDef edc:cname="DREIE" edc:nzwidth="0x1" edc:desc="Data Register Empty Interrupt Enable"/>
              <edc:SFRFieldDef edc:cname="TXCIE" edc:nzwidth="0x1" edc:desc="Transmit Complete Interrupt Enable"/>
              <edc:SFRFieldDef edc:cname="RXCIE" edc:nzwidth="0x1" edc:desc="Receive Complete Interrupt Enable"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="USART0" edc:cname="CTRLB" edc:nzwidth="0x8" edc:access="nn-nnnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xDF" edc:_addr="0x806">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="USART0">
              <edc:SFRFieldDef edc:cname="MPCM" edc:nzwidth="0x1" edc:desc="Multi-processor Communication Mode"/>
              <edc:SFRFieldDef edc:cname="RXMODE" edc:nzwidth="0x2" edc:desc="Receiver Mode">
                <edc:SFRFieldSemantic edc:cname="NORMAL" edc:desc="Normal mode" edc:when="(field &amp; 0x3) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="CLK2X" edc:desc="CLK2x mode" edc:when="(field &amp; 0x3) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="GENAUTO" edc:desc="Generic autobaud mode" edc:when="(field &amp; 0x3) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="LINAUTO" edc:desc="LIN constrained autobaud mode" edc:when="(field &amp; 0x3) == 0x03"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="ODME" edc:nzwidth="0x1" edc:desc="Open Drain Mode Enable"/>
              <edc:SFRFieldDef edc:cname="SFDEN" edc:nzwidth="0x1" edc:desc="Start Frame Detection Enable"/>
              <edc:AdjustPoint edc:offset="0x1"/>
              <edc:SFRFieldDef edc:cname="TXEN" edc:nzwidth="0x1" edc:desc="Transmitter Enable"/>
              <edc:SFRFieldDef edc:cname="RXEN" edc:nzwidth="0x1" edc:desc="Reciever enable"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="USART0" edc:cname="CTRLC" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000011" edc:mclr="00000011" edc:_addr="0x807">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="USART0">
              <edc:SFRFieldDef edc:cname="CHSIZE" edc:nzwidth="0x3" edc:desc="Character Size">
                <edc:SFRFieldSemantic edc:cname="5BIT" edc:desc="Character size: 5 bit" edc:when="(field &amp; 0x7) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="6BIT" edc:desc="Character size: 6 bit" edc:when="(field &amp; 0x7) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="7BIT" edc:desc="Character size: 7 bit" edc:when="(field &amp; 0x7) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="8BIT" edc:desc="Character size: 8 bit" edc:when="(field &amp; 0x7) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="9BITL" edc:desc="Character size: 9 bit read low byte first" edc:when="(field &amp; 0x7) == 0x06"/>
                <edc:SFRFieldSemantic edc:cname="9BITH" edc:desc="Character size: 9 bit read high byte first" edc:when="(field &amp; 0x7) == 0x07"/>
              </edc:SFRFieldDef>
              <edc:AdjustPoint edc:offset="-2"/>
              <edc:SFRFieldDef edc:cname="UCPHA" edc:nzwidth="0x1" edc:desc="SPI Host Mode, Clock Phase"/>
              <edc:SFRFieldDef edc:cname="UDORD" edc:nzwidth="0x1" edc:desc="SPI Host Mode, Data Order"/>
              <edc:SFRFieldDef edc:cname="SBMODE" edc:nzwidth="0x1" edc:desc="Stop Bit Mode">
                <edc:SFRFieldSemantic edc:cname="1BIT" edc:desc="1 stop bit" edc:when="(field &amp; 0x1) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="2BIT" edc:desc="2 stop bits" edc:when="(field &amp; 0x1) == 0x01"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="PMODE" edc:nzwidth="0x2" edc:desc="Parity Mode">
                <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="No Parity" edc:when="(field &amp; 0x3) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="EVEN" edc:desc="Even Parity" edc:when="(field &amp; 0x3) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="ODD" edc:desc="Odd Parity" edc:when="(field &amp; 0x3) == 0x03"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="CMODE" edc:nzwidth="0x2" edc:desc="Communication Mode">
                <edc:SFRFieldSemantic edc:cname="ASYNCHRONOUS" edc:desc="Asynchronous Mode" edc:when="(field &amp; 0x3) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="SYNCHRONOUS" edc:desc="Synchronous Mode" edc:when="(field &amp; 0x3) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="IRCOM" edc:desc="Infrared Communication" edc:when="(field &amp; 0x3) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="MSPI" edc:desc="SPI Host Mode" edc:when="(field &amp; 0x3) == 0x03"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="USART0" edc:cname="BAUD" edc:nzwidth="0x10" edc:access="nnnnnnnnnnnnnnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:_addr="0x808"/>
        <edc:AdjustPoint edc:offset="0x1" edc:_addr="0x80A"/>
        <edc:SFRDef ltx:memberofperipheral="USART0" edc:cname="DBGCTRL" edc:nzwidth="0x8" edc:access="-------n" edc:por="00000000" edc:mclr="00000000" edc:impl="0x1" edc:_addr="0x80B">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="USART0">
              <edc:SFRFieldDef edc:cname="DBGRUN" edc:nzwidth="0x1" edc:desc="Debug Run"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="USART0" edc:cname="EVCTRL" edc:nzwidth="0x8" edc:access="-------n" edc:por="00000000" edc:mclr="00000000" edc:impl="0x1" edc:_addr="0x80C">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="USART0">
              <edc:SFRFieldDef edc:cname="IREI" edc:nzwidth="0x1" edc:desc="IrDA Event Input Enable"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="USART0" edc:cname="TXPLCTRL" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x80D">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="USART0">
              <edc:SFRFieldDef edc:cname="TXPL" edc:nzwidth="0x8" edc:desc="Transmit pulse length"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="USART0" edc:cname="RXPLCTRL" edc:nzwidth="0x8" edc:access="-nnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x7F" edc:_addr="0x80E">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="USART0">
              <edc:SFRFieldDef edc:cname="RXPL" edc:nzwidth="0x7" edc:desc="Receiver Pulse Lenght"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:AdjustPoint edc:offset="0x1" edc:_addr="0x80F"/>
        <edc:SFRDef ltx:memberofperipheral="TWI0" edc:cname="CTRLA" edc:nzwidth="0x8" edc:access="---nnnn-" edc:por="00000000" edc:mclr="00000000" edc:impl="0x1E" edc:_addr="0x810">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TWI0">
              <edc:AdjustPoint edc:offset="0x1"/>
              <edc:SFRFieldDef edc:cname="FMPEN" edc:nzwidth="0x1" edc:desc="FM Plus Enable"/>
              <edc:SFRFieldDef edc:cname="SDAHOLD" edc:nzwidth="0x2" edc:desc="SDA Hold Time">
                <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="SDA hold time off" edc:when="(field &amp; 0x3) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="50NS" edc:desc="Typical 50ns hold time" edc:when="(field &amp; 0x3) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="300NS" edc:desc="Typical 300ns hold time" edc:when="(field &amp; 0x3) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="500NS" edc:desc="Typical 500ns hold time" edc:when="(field &amp; 0x3) == 0x03"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="SDASETUP" edc:nzwidth="0x1" edc:desc="SDA Setup Time">
                <edc:SFRFieldSemantic edc:cname="4CYC" edc:desc="SDA setup time is 4 clock cycles" edc:when="(field &amp; 0x1) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="8CYC" edc:desc="SDA setup time is 8 clock cycles" edc:when="(field &amp; 0x1) == 0x01"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:AdjustPoint edc:offset="0x1" edc:_addr="0x811"/>
        <edc:SFRDef ltx:memberofperipheral="TWI0" edc:cname="DBGCTRL" edc:nzwidth="0x8" edc:access="-------n" edc:por="00000000" edc:mclr="00000000" edc:impl="0x1" edc:_addr="0x812">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TWI0">
              <edc:SFRFieldDef edc:cname="DBGRUN" edc:nzwidth="0x1" edc:desc="Debug Run"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="TWI0" edc:cname="MCTRLA" edc:nzwidth="0x8" edc:access="nn-nnnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xDF" edc:_addr="0x813">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TWI0">
              <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="Enable TWI Host"/>
              <edc:SFRFieldDef edc:cname="SMEN" edc:nzwidth="0x1" edc:desc="Smart Mode Enable"/>
              <edc:SFRFieldDef edc:cname="TIMEOUT" edc:nzwidth="0x2" edc:desc="Inactive Bus Timeout">
                <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Bus Timeout Disabled" edc:when="(field &amp; 0x3) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="50US" edc:desc="50 Microseconds" edc:when="(field &amp; 0x3) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="100US" edc:desc="100 Microseconds" edc:when="(field &amp; 0x3) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="200US" edc:desc="200 Microseconds" edc:when="(field &amp; 0x3) == 0x03"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="QCEN" edc:nzwidth="0x1" edc:desc="Quick Command Enable"/>
              <edc:AdjustPoint edc:offset="0x1"/>
              <edc:SFRFieldDef edc:cname="WIEN" edc:nzwidth="0x1" edc:desc="Write Interrupt Enable"/>
              <edc:SFRFieldDef edc:cname="RIEN" edc:nzwidth="0x1" edc:desc="Read Interrupt Enable"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="TWI0" edc:cname="MCTRLB" edc:nzwidth="0x8" edc:access="----nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xF" edc:_addr="0x814">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TWI0">
              <edc:SFRFieldDef edc:cname="MCMD" edc:nzwidth="0x2" edc:desc="Command">
                <edc:SFRFieldSemantic edc:cname="NOACT" edc:desc="No Action" edc:when="(field &amp; 0x3) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="REPSTART" edc:desc="Issue Repeated Start Condition" edc:when="(field &amp; 0x3) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="RECVTRANS" edc:desc="Receive or Transmit Data, depending on DIR" edc:when="(field &amp; 0x3) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="STOP" edc:desc="Issue Stop Condition" edc:when="(field &amp; 0x3) == 0x03"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="ACKACT" edc:nzwidth="0x1" edc:desc="Acknowledge Action">
                <edc:SFRFieldSemantic edc:cname="ACK" edc:desc="Send ACK" edc:when="(field &amp; 0x1) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="NACK" edc:desc="Send NACK" edc:when="(field &amp; 0x1) == 0x01"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="FLUSH" edc:nzwidth="0x1" edc:desc="Flush"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="TWI0" edc:cname="MSTATUS" edc:nzwidth="0x8" edc:access="nnnrnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x815">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TWI0">
              <edc:SFRFieldDef edc:cname="BUSSTATE" edc:nzwidth="0x2" edc:desc="Bus State">
                <edc:SFRFieldSemantic edc:cname="UNKNOWN" edc:desc="Unknown Bus State" edc:when="(field &amp; 0x3) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="IDLE" edc:desc="Bus is Idle" edc:when="(field &amp; 0x3) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="OWNER" edc:desc="This Module Controls The Bus" edc:when="(field &amp; 0x3) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="BUSY" edc:desc="The Bus is Busy" edc:when="(field &amp; 0x3) == 0x03"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="BUSERR" edc:nzwidth="0x1" edc:desc="Bus Error"/>
              <edc:SFRFieldDef edc:cname="ARBLOST" edc:nzwidth="0x1" edc:desc="Arbitration Lost"/>
              <edc:SFRFieldDef edc:cname="RXACK" edc:nzwidth="0x1" edc:desc="Received Acknowledge"/>
              <edc:SFRFieldDef edc:cname="CLKHOLD" edc:nzwidth="0x1" edc:desc="Clock Hold"/>
              <edc:SFRFieldDef edc:cname="WIF" edc:nzwidth="0x1" edc:desc="Write Interrupt Flag"/>
              <edc:SFRFieldDef edc:cname="RIF" edc:nzwidth="0x1" edc:desc="Read Interrupt Flag"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="TWI0" edc:cname="MBAUD" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x816"/>
        <edc:SFRDef ltx:memberofperipheral="TWI0" edc:cname="MADDR" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x817"/>
        <edc:SFRDef ltx:memberofperipheral="TWI0" edc:cname="MDATA" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x818"/>
        <edc:SFRDef ltx:memberofperipheral="TWI0" edc:cname="SCTRLA" edc:nzwidth="0x8" edc:access="nnn--nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xE7" edc:_addr="0x819">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TWI0">
              <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="Enable TWI Client"/>
              <edc:SFRFieldDef edc:cname="SMEN" edc:nzwidth="0x1" edc:desc="Smart Mode Enable"/>
              <edc:SFRFieldDef edc:cname="PMEN" edc:nzwidth="0x1" edc:desc="Promiscuous Mode Enable"/>
              <edc:AdjustPoint edc:offset="0x2"/>
              <edc:SFRFieldDef edc:cname="PIEN" edc:nzwidth="0x1" edc:desc="Stop Interrupt Enable"/>
              <edc:SFRFieldDef edc:cname="APIEN" edc:nzwidth="0x1" edc:desc="Address/Stop Interrupt Enable"/>
              <edc:SFRFieldDef edc:cname="DIEN" edc:nzwidth="0x1" edc:desc="Data Interrupt Enable"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="TWI0" edc:cname="SCTRLB" edc:nzwidth="0x8" edc:access="-----nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x7" edc:_addr="0x81A">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TWI0">
              <edc:SFRFieldDef edc:cname="SCMD" edc:nzwidth="0x2" edc:desc="Command">
                <edc:SFRFieldSemantic edc:cname="NOACT" edc:desc="No Action" edc:when="(field &amp; 0x3) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="COMPTRANS" edc:desc="Used To Complete a Transaction" edc:when="(field &amp; 0x3) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="RESPONSE" edc:desc="Used in Response to Address/Data Interrupt" edc:when="(field &amp; 0x3) == 0x03"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="ACKACT" edc:nzwidth="0x1" edc:desc="Acknowledge Action">
                <edc:SFRFieldSemantic edc:cname="ACK" edc:desc="Send ACK" edc:when="(field &amp; 0x1) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="NACK" edc:desc="Send NACK" edc:when="(field &amp; 0x1) == 0x01"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="TWI0" edc:cname="SSTATUS" edc:nzwidth="0x8" edc:access="nnrrnnrr" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x81B">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TWI0">
              <edc:SFRFieldDef edc:cname="AP" edc:nzwidth="0x1" edc:desc="Client Address or Stop">
                <edc:SFRFieldSemantic edc:cname="STOP" edc:desc="Stop condition generated APIF" edc:when="(field &amp; 0x1) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="ADR" edc:desc="Address detection generated APIF" edc:when="(field &amp; 0x1) == 0x01"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="DIR" edc:nzwidth="0x1" edc:desc="Read/Write Direction"/>
              <edc:SFRFieldDef edc:cname="BUSERR" edc:nzwidth="0x1" edc:desc="Bus Error"/>
              <edc:SFRFieldDef edc:cname="COLL" edc:nzwidth="0x1" edc:desc="Collision"/>
              <edc:SFRFieldDef edc:cname="RXACK" edc:nzwidth="0x1" edc:desc="Received Acknowledge"/>
              <edc:SFRFieldDef edc:cname="CLKHOLD" edc:nzwidth="0x1" edc:desc="Clock Hold"/>
              <edc:SFRFieldDef edc:cname="APIF" edc:nzwidth="0x1" edc:desc="Address/Stop Interrupt Flag"/>
              <edc:SFRFieldDef edc:cname="DIF" edc:nzwidth="0x1" edc:desc="Data Interrupt Flag"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="TWI0" edc:cname="SADDR" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x81C"/>
        <edc:SFRDef ltx:memberofperipheral="TWI0" edc:cname="SDATA" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x81D"/>
        <edc:SFRDef ltx:memberofperipheral="TWI0" edc:cname="SADDRMASK" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x81E">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TWI0">
              <edc:SFRFieldDef edc:cname="ADDREN" edc:nzwidth="0x1" edc:desc="Address Enable"/>
              <edc:SFRFieldDef edc:cname="ADDRMASK" edc:nzwidth="0x7" edc:desc="Address Mask"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:AdjustPoint edc:offset="0x1" edc:_addr="0x81F"/>
        <edc:SFRDef ltx:memberofperipheral="SPI0" edc:cname="CTRLA" edc:nzwidth="0x8" edc:access="-nnn-nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x77" edc:_addr="0x820">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPI0">
              <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="Enable Module"/>
              <edc:SFRFieldDef edc:cname="PRESC" edc:nzwidth="0x2" edc:desc="Prescaler">
                <edc:SFRFieldSemantic edc:cname="DIV4" edc:desc="System Clock / 4" edc:when="(field &amp; 0x3) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="DIV16" edc:desc="System Clock / 16" edc:when="(field &amp; 0x3) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="DIV64" edc:desc="System Clock / 64" edc:when="(field &amp; 0x3) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="DIV128" edc:desc="System Clock / 128" edc:when="(field &amp; 0x3) == 0x03"/>
              </edc:SFRFieldDef>
              <edc:AdjustPoint edc:offset="0x1"/>
              <edc:SFRFieldDef edc:cname="CLK2X" edc:nzwidth="0x1" edc:desc="Enable Double Speed"/>
              <edc:SFRFieldDef edc:cname="MASTER" edc:nzwidth="0x1" edc:desc="Host Operation Enable"/>
              <edc:SFRFieldDef edc:cname="DORD" edc:nzwidth="0x1" edc:desc="Data Order Setting"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="SPI0" edc:cname="CTRLB" edc:nzwidth="0x8" edc:access="nn---nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xC7" edc:_addr="0x821">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPI0">
              <edc:SFRFieldDef edc:cname="MODE" edc:nzwidth="0x2" edc:desc="SPI Mode">
                <edc:SFRFieldSemantic edc:cname="0" edc:desc="SPI Mode 0" edc:when="(field &amp; 0x3) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="1" edc:desc="SPI Mode 1" edc:when="(field &amp; 0x3) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="2" edc:desc="SPI Mode 2" edc:when="(field &amp; 0x3) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="3" edc:desc="SPI Mode 3" edc:when="(field &amp; 0x3) == 0x03"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="SSD" edc:nzwidth="0x1" edc:desc="Client Select Disable"/>
              <edc:AdjustPoint edc:offset="0x3"/>
              <edc:SFRFieldDef edc:cname="BUFWR" edc:nzwidth="0x1" edc:desc="Buffer Write Mode"/>
              <edc:SFRFieldDef edc:cname="BUFEN" edc:nzwidth="0x1" edc:desc="Buffer Mode Enable"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="SPI0" edc:cname="INTCTRL" edc:nzwidth="0x8" edc:access="nnnn---n" edc:impl="0xF1" edc:_addr="0x822">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPI0">
              <edc:SFRFieldDef edc:cname="IE" edc:nzwidth="0x1" edc:desc="Interrupt Enable"/>
              <edc:AdjustPoint edc:offset="0x3"/>
              <edc:SFRFieldDef edc:cname="SSIE" edc:nzwidth="0x1" edc:desc="Client Select Trigger Interrupt Enable"/>
              <edc:SFRFieldDef edc:cname="DREIE" edc:nzwidth="0x1" edc:desc="Data Register Empty Interrupt Enable"/>
              <edc:SFRFieldDef edc:cname="TXCIE" edc:nzwidth="0x1" edc:desc="Transfer Complete Interrupt Enable"/>
              <edc:SFRFieldDef edc:cname="RXCIE" edc:nzwidth="0x1" edc:desc="Receive Complete Interrupt Enable"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="SPI0" edc:cname="INTFLAGS" edc:nzwidth="0x8" edc:access="nnnn---n" edc:por="00000000" edc:mclr="00000000" edc:impl="0xF1" edc:_addr="0x823">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPI0">
              <edc:SFRFieldDef edc:cname="BUFOVF" edc:nzwidth="0x1" edc:desc="Buffer Overflow"/>
              <edc:AdjustPoint edc:offset="0x3"/>
              <edc:SFRFieldDef edc:cname="SSIF" edc:nzwidth="0x1" edc:desc="Client Select Trigger Interrupt Flag"/>
              <edc:SFRFieldDef edc:cname="DREIF" edc:nzwidth="0x1" edc:desc="Data Register Empty Interrupt Flag"/>
              <edc:SFRFieldDef edc:cname="WRCOL" edc:nzwidth="0x1" edc:desc="Write Collision"/>
              <edc:SFRFieldDef edc:cname="IF" edc:nzwidth="0x1" edc:desc="Interrupt Flag"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="SPI0" edc:cname="DATA" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x824"/>
        <edc:AdjustPoint edc:offset="0x21B" edc:_addr="0x825"/>
        <edc:SFRDef ltx:memberofperipheral="TCB0" edc:cname="CTRLA" edc:nzwidth="0x8" edc:access="-n-n-nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x57" edc:_addr="0xA40">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCB0">
              <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="Enable"/>
              <edc:SFRFieldDef edc:cname="CLKSEL" edc:nzwidth="0x2" edc:desc="Clock Select">
                <edc:SFRFieldSemantic edc:cname="CLKDIV1" edc:desc="CLK_PER (No Prescaling)" edc:when="(field &amp; 0x3) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="CLKDIV2" edc:desc="CLK_PER/2 (From Prescaler)" edc:when="(field &amp; 0x3) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="CLKTCA" edc:desc="Use Clock from TCA" edc:when="(field &amp; 0x3) == 0x02"/>
              </edc:SFRFieldDef>
              <edc:AdjustPoint edc:offset="0x1"/>
              <edc:SFRFieldDef edc:cname="SYNCUPD" edc:nzwidth="0x1" edc:desc="Synchronize Update"/>
              <edc:AdjustPoint edc:offset="0x1"/>
              <edc:SFRFieldDef edc:cname="RUNSTDBY" edc:nzwidth="0x1" edc:desc="Run Standby"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="TCB0" edc:cname="CTRLB" edc:nzwidth="0x8" edc:access="-nnn-nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x77" edc:_addr="0xA41">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCB0">
              <edc:SFRFieldDef edc:cname="CNTMODE" edc:nzwidth="0x3" edc:desc="Timer Mode">
                <edc:SFRFieldSemantic edc:cname="INT" edc:desc="Periodic Interrupt" edc:when="(field &amp; 0x7) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="TIMEOUT" edc:desc="Periodic Timeout" edc:when="(field &amp; 0x7) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="CAPT" edc:desc="Input Capture Event" edc:when="(field &amp; 0x7) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="FRQ" edc:desc="Input Capture Frequency measurement" edc:when="(field &amp; 0x7) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="PW" edc:desc="Input Capture Pulse-Width measurement" edc:when="(field &amp; 0x7) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="FRQPW" edc:desc="Input Capture Frequency and Pulse-Width measurement" edc:when="(field &amp; 0x7) == 0x05"/>
                <edc:SFRFieldSemantic edc:cname="SINGLE" edc:desc="Single Shot" edc:when="(field &amp; 0x7) == 0x06"/>
                <edc:SFRFieldSemantic edc:cname="PWM8" edc:desc="8-bit PWM" edc:when="(field &amp; 0x7) == 0x07"/>
              </edc:SFRFieldDef>
              <edc:AdjustPoint edc:offset="0x1"/>
              <edc:SFRFieldDef edc:cname="CCMPEN" edc:nzwidth="0x1" edc:desc="Pin Output Enable"/>
              <edc:SFRFieldDef edc:cname="CCMPINIT" edc:nzwidth="0x1" edc:desc="Pin Initial State"/>
              <edc:SFRFieldDef edc:cname="ASYNC" edc:nzwidth="0x1" edc:desc="Asynchronous Enable"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:AdjustPoint edc:offset="0x2" edc:_addr="0xA42"/>
        <edc:SFRDef ltx:memberofperipheral="TCB0" edc:cname="EVCTRL" edc:nzwidth="0x8" edc:access="-n-n---n" edc:por="00000000" edc:mclr="00000000" edc:impl="0x51" edc:_addr="0xA44">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCB0">
              <edc:SFRFieldDef edc:cname="CAPTEI" edc:nzwidth="0x1" edc:desc="Event Input Enable"/>
              <edc:AdjustPoint edc:offset="0x3"/>
              <edc:SFRFieldDef edc:cname="EDGE" edc:nzwidth="0x1" edc:desc="Event Edge"/>
              <edc:AdjustPoint edc:offset="0x1"/>
              <edc:SFRFieldDef edc:cname="FILTER" edc:nzwidth="0x1" edc:desc="Input Capture Noise Cancellation Filter"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="TCB0" edc:cname="INTCTRL" edc:nzwidth="0x8" edc:access="-------n" edc:por="00000000" edc:mclr="00000000" edc:impl="0x1" edc:_addr="0xA45">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCB0">
              <edc:SFRFieldDef edc:cname="CAPT" edc:nzwidth="0x1" edc:desc="Capture or Timeout"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="TCB0" edc:cname="INTFLAGS" edc:nzwidth="0x8" edc:access="-------n" edc:por="00000000" edc:mclr="00000000" edc:impl="0x1" edc:_addr="0xA46">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCB0">
              <edc:SFRFieldDef edc:cname="CAPT" edc:nzwidth="0x1" edc:desc="Capture or Timeout"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="TCB0" edc:cname="STATUS" edc:nzwidth="0x8" edc:access="-------r" edc:por="00000000" edc:mclr="00000000" edc:impl="0x1" edc:_addr="0xA47">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCB0">
              <edc:SFRFieldDef edc:cname="RUN" edc:nzwidth="0x1" edc:desc="Run"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="TCB0" edc:cname="DBGCTRL" edc:nzwidth="0x8" edc:access="-------n" edc:por="00000000" edc:mclr="00000000" edc:impl="0x1" edc:_addr="0xA48">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCB0">
              <edc:SFRFieldDef edc:cname="DBGRUN" edc:nzwidth="0x1" edc:desc="Debug Run"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="TCB0" edc:cname="TEMP" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0xA49"/>
        <edc:SFRDef ltx:memberofperipheral="TCB0" edc:cname="CNT" edc:nzwidth="0x10" edc:access="nnnnnnnnnnnnnnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:_addr="0xA4A"/>
        <edc:SFRDef ltx:memberofperipheral="TCB0" edc:cname="CCMP" edc:nzwidth="0x10" edc:access="nnnnnnnnnnnnnnnn" edc:_addr="0xA4C"/>
        <edc:AdjustPoint edc:offset="0x32" edc:_addr="0xA4E"/>
        <edc:SFRDef ltx:memberofperipheral="TCD0" edc:cname="CTRLA" edc:nzwidth="0x8" edc:access="-nnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x7F" edc:_addr="0xA80">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCD0">
              <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="Enable"/>
              <edc:SFRFieldDef edc:cname="SYNCPRES" edc:nzwidth="0x2" edc:desc="Syncronization prescaler">
                <edc:SFRFieldSemantic edc:cname="DIV1" edc:desc="Selevted clock source divided by 1" edc:when="(field &amp; 0x3) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="DIV2" edc:desc="Selevted clock source divided by 2" edc:when="(field &amp; 0x3) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="DIV4" edc:desc="Selevted clock source divided by 4" edc:when="(field &amp; 0x3) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="DIV8" edc:desc="Selevted clock source divided by 8" edc:when="(field &amp; 0x3) == 0x03"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="CNTPRES" edc:nzwidth="0x2" edc:desc="counter prescaler">
                <edc:SFRFieldSemantic edc:cname="DIV1" edc:desc="Sync clock divided by 1" edc:when="(field &amp; 0x3) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="DIV4" edc:desc="Sync clock divided by 4" edc:when="(field &amp; 0x3) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="DIV32" edc:desc="Sync clock divided by 32" edc:when="(field &amp; 0x3) == 0x02"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="CLKSEL" edc:nzwidth="0x2" edc:desc="clock select">
                <edc:SFRFieldSemantic edc:cname="20MHZ" edc:desc="20 MHz oscillator" edc:when="(field &amp; 0x3) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="EXTCLK" edc:desc="External clock" edc:when="(field &amp; 0x3) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="SYSCLK" edc:desc="System clock" edc:when="(field &amp; 0x3) == 0x03"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="TCD0" edc:cname="CTRLB" edc:nzwidth="0x8" edc:access="------nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3" edc:_addr="0xA81">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCD0">
              <edc:SFRFieldDef edc:cname="WGMODE" edc:nzwidth="0x2" edc:desc="Waveform generation mode">
                <edc:SFRFieldSemantic edc:cname="ONERAMP" edc:desc="One ramp mode" edc:when="(field &amp; 0x3) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="TWORAMP" edc:desc="Two ramp mode" edc:when="(field &amp; 0x3) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="FOURRAMP" edc:desc="Four ramp mode" edc:when="(field &amp; 0x3) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="DS" edc:desc="Dual slope mode" edc:when="(field &amp; 0x3) == 0x03"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="TCD0" edc:cname="CTRLC" edc:nzwidth="0x8" edc:access="nn--n-nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xCB" edc:_addr="0xA82">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCD0">
              <edc:SFRFieldDef edc:cname="CMPOVR" edc:nzwidth="0x1" edc:desc="Compare output value override"/>
              <edc:SFRFieldDef edc:cname="AUPDATE" edc:nzwidth="0x1" edc:desc="Auto update"/>
              <edc:AdjustPoint edc:offset="0x1"/>
              <edc:SFRFieldDef edc:cname="FIFTY" edc:nzwidth="0x1" edc:desc="Fifty percent waveform"/>
              <edc:AdjustPoint edc:offset="0x2"/>
              <edc:SFRFieldDef edc:cname="CMPCSEL" edc:nzwidth="0x1" edc:desc="Compare C output select">
                <edc:SFRFieldSemantic edc:cname="PWMA" edc:desc="PWM A output" edc:when="(field &amp; 0x1) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="PWMB" edc:desc="PWM B output" edc:when="(field &amp; 0x1) == 0x01"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="CMPDSEL" edc:nzwidth="0x1" edc:desc="Compare D output select">
                <edc:SFRFieldSemantic edc:cname="PWMA" edc:desc="PWM A output" edc:when="(field &amp; 0x1) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="PWMB" edc:desc="PWM B output" edc:when="(field &amp; 0x1) == 0x01"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="TCD0" edc:cname="CTRLD" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0xA83">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCD0">
              <edc:SFRFieldDef edc:cname="CMPAVAL" edc:nzwidth="0x4" edc:desc="Compare A value"/>
              <edc:SFRFieldDef edc:cname="CMPBVAL" edc:nzwidth="0x4" edc:desc="Compare B value"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="TCD0" edc:cname="CTRLE" edc:nzwidth="0x8" edc:access="n--nnnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x9F" edc:_addr="0xA84">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCD0">
              <edc:SFRFieldDef edc:cname="SYNCEOC" edc:nzwidth="0x1" edc:desc="Synchronize end of cycle strobe"/>
              <edc:SFRFieldDef edc:cname="SYNC" edc:nzwidth="0x1" edc:desc="Synchronize strobe"/>
              <edc:SFRFieldDef edc:cname="RESTART" edc:nzwidth="0x1" edc:desc="Restart strobe"/>
              <edc:SFRFieldDef edc:cname="SCAPTUREA" edc:nzwidth="0x1" edc:desc="Software Capture A Strobe"/>
              <edc:SFRFieldDef edc:cname="SCAPTUREB" edc:nzwidth="0x1" edc:desc="Software Capture B Strobe"/>
              <edc:AdjustPoint edc:offset="0x2"/>
              <edc:SFRFieldDef edc:cname="DISEOC" edc:nzwidth="0x1" edc:desc="Disable at end of cycle"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:AdjustPoint edc:offset="0x3" edc:_addr="0xA85"/>
        <edc:SFRDef ltx:memberofperipheral="TCD0" edc:cname="EVCTRLA" edc:nzwidth="0x8" edc:access="nn-n-n-n" edc:por="00000000" edc:mclr="00000000" edc:impl="0xD5" edc:_addr="0xA88">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCD0">
              <edc:SFRFieldDef edc:cname="TRIGEI" edc:nzwidth="0x1" edc:desc="Trigger event enable"/>
              <edc:AdjustPoint edc:offset="0x1"/>
              <edc:SFRFieldDef edc:cname="ACTION" edc:nzwidth="0x1" edc:desc="Event action">
                <edc:SFRFieldSemantic edc:cname="FAULT" edc:desc="Event trigger a fault" edc:when="(field &amp; 0x1) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="CAPTURE" edc:desc="Event trigger a fault and capture" edc:when="(field &amp; 0x1) == 0x01"/>
              </edc:SFRFieldDef>
              <edc:AdjustPoint edc:offset="0x1"/>
              <edc:SFRFieldDef edc:cname="EDGE" edc:nzwidth="0x1" edc:desc="Edge select">
                <edc:SFRFieldSemantic edc:cname="FALL_LOW" edc:desc="The falling edge or low level of event generates retrigger or fault action" edc:when="(field &amp; 0x1) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="RISE_HIGH" edc:desc="The rising edge or high level of event generates retrigger or fault action" edc:when="(field &amp; 0x1) == 0x01"/>
              </edc:SFRFieldDef>
              <edc:AdjustPoint edc:offset="0x1"/>
              <edc:SFRFieldDef edc:cname="CFG" edc:nzwidth="0x2" edc:desc="Event config">
                <edc:SFRFieldSemantic edc:cname="NEITHER" edc:desc="Neither Filter nor Asynchronous Event is enabled" edc:when="(field &amp; 0x3) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="FILTER" edc:desc="Input Capture Noise Cancellation Filter enabled" edc:when="(field &amp; 0x3) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="ASYNC" edc:desc="Asynchronous Event output qualification enabled" edc:when="(field &amp; 0x3) == 0x02"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="TCD0" edc:cname="EVCTRLB" edc:nzwidth="0x8" edc:access="nn-n-n-n" edc:por="00000000" edc:mclr="00000000" edc:impl="0xD5" edc:_addr="0xA89">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCD0">
              <edc:SFRFieldDef edc:cname="TRIGEI" edc:nzwidth="0x1" edc:desc="Trigger event enable"/>
              <edc:AdjustPoint edc:offset="0x1"/>
              <edc:SFRFieldDef edc:cname="ACTION" edc:nzwidth="0x1" edc:desc="Event action">
                <edc:SFRFieldSemantic edc:cname="FAULT" edc:desc="Event trigger a fault" edc:when="(field &amp; 0x1) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="CAPTURE" edc:desc="Event trigger a fault and capture" edc:when="(field &amp; 0x1) == 0x01"/>
              </edc:SFRFieldDef>
              <edc:AdjustPoint edc:offset="0x1"/>
              <edc:SFRFieldDef edc:cname="EDGE" edc:nzwidth="0x1" edc:desc="Edge select">
                <edc:SFRFieldSemantic edc:cname="FALL_LOW" edc:desc="The falling edge or low level of event generates retrigger or fault action" edc:when="(field &amp; 0x1) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="RISE_HIGH" edc:desc="The rising edge or high level of event generates retrigger or fault action" edc:when="(field &amp; 0x1) == 0x01"/>
              </edc:SFRFieldDef>
              <edc:AdjustPoint edc:offset="0x1"/>
              <edc:SFRFieldDef edc:cname="CFG" edc:nzwidth="0x2" edc:desc="Event config">
                <edc:SFRFieldSemantic edc:cname="NEITHER" edc:desc="Neither Filter nor Asynchronous Event is enabled" edc:when="(field &amp; 0x3) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="FILTER" edc:desc="Input Capture Noise Cancellation Filter enabled" edc:when="(field &amp; 0x3) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="ASYNC" edc:desc="Asynchronous Event output qualification enabled" edc:when="(field &amp; 0x3) == 0x02"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:AdjustPoint edc:offset="0x2" edc:_addr="0xA8A"/>
        <edc:SFRDef ltx:memberofperipheral="TCD0" edc:cname="INTCTRL" edc:nzwidth="0x8" edc:access="----nn-n" edc:por="00000000" edc:mclr="00000000" edc:impl="0xD" edc:_addr="0xA8C">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCD0">
              <edc:SFRFieldDef edc:cname="OVF" edc:nzwidth="0x1" edc:desc="Overflow interrupt enable"/>
              <edc:AdjustPoint edc:offset="0x1"/>
              <edc:SFRFieldDef edc:cname="TRIGA" edc:nzwidth="0x1" edc:desc="Trigger A interrupt enable"/>
              <edc:SFRFieldDef edc:cname="TRIGB" edc:nzwidth="0x1" edc:desc="Trigger B interrupt enable"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="TCD0" edc:cname="INTFLAGS" edc:nzwidth="0x8" edc:access="----nn-n" edc:por="00000000" edc:mclr="00000000" edc:impl="0xD" edc:_addr="0xA8D">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCD0">
              <edc:SFRFieldDef edc:cname="OVF" edc:nzwidth="0x1" edc:desc="Overflow interrupt enable"/>
              <edc:AdjustPoint edc:offset="0x1"/>
              <edc:SFRFieldDef edc:cname="TRIGA" edc:nzwidth="0x1" edc:desc="Trigger A interrupt enable"/>
              <edc:SFRFieldDef edc:cname="TRIGB" edc:nzwidth="0x1" edc:desc="Trigger B interrupt enable"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="TCD0" edc:cname="STATUS" edc:nzwidth="0x8" edc:access="nn----rr" edc:por="00000000" edc:mclr="00000000" edc:impl="0xC3" edc:_addr="0xA8E">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCD0">
              <edc:SFRFieldDef edc:cname="ENRDY" edc:nzwidth="0x1" edc:desc="Enable ready"/>
              <edc:SFRFieldDef edc:cname="CMDRDY" edc:nzwidth="0x1" edc:desc="Command ready"/>
              <edc:AdjustPoint edc:offset="0x4"/>
              <edc:SFRFieldDef edc:cname="PWMACTA" edc:nzwidth="0x1" edc:desc="PWM activity on A"/>
              <edc:SFRFieldDef edc:cname="PWMACTB" edc:nzwidth="0x1" edc:desc="PWM activity on B"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:AdjustPoint edc:offset="0x1" edc:_addr="0xA8F"/>
        <edc:SFRDef ltx:memberofperipheral="TCD0" edc:cname="INPUTCTRLA" edc:nzwidth="0x8" edc:access="----nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xF" edc:_addr="0xA90">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCD0">
              <edc:SFRFieldDef edc:cname="INPUTMODE" edc:nzwidth="0x4" edc:desc="Input mode">
                <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="Input has no actions" edc:when="(field &amp; 0xF) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="JMPWAIT" edc:desc="Stop output, jump to opposite compare cycle and wait" edc:when="(field &amp; 0xF) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="EXECWAIT" edc:desc="Stop output, execute opposite compare cycle and wait" edc:when="(field &amp; 0xF) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="EXECFAULT" edc:desc="stop output, execute opposite compare cycle while fault active" edc:when="(field &amp; 0xF) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="FREQ" edc:desc="Stop all outputs, maintain frequency" edc:when="(field &amp; 0xF) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="EXECDT" edc:desc="Stop all outputs, execute dead time while fault active" edc:when="(field &amp; 0xF) == 0x05"/>
                <edc:SFRFieldSemantic edc:cname="WAIT" edc:desc="Stop all outputs, jump to next compare cycle and wait" edc:when="(field &amp; 0xF) == 0x06"/>
                <edc:SFRFieldSemantic edc:cname="WAITSW" edc:desc="Stop all outputs, wait for software action" edc:when="(field &amp; 0xF) == 0x07"/>
                <edc:SFRFieldSemantic edc:cname="EDGETRIG" edc:desc="Stop output on edge, jump to next compare cycle" edc:when="(field &amp; 0xF) == 0x08"/>
                <edc:SFRFieldSemantic edc:cname="EDGETRIGFREQ" edc:desc="Stop output on edge, maintain frequency" edc:when="(field &amp; 0xF) == 0x09"/>
                <edc:SFRFieldSemantic edc:cname="LVLTRIGFREQ" edc:desc="Stop output at level, maintain frequency" edc:when="(field &amp; 0xF) == 0x0A"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="TCD0" edc:cname="INPUTCTRLB" edc:nzwidth="0x8" edc:access="----nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xF" edc:_addr="0xA91">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCD0">
              <edc:SFRFieldDef edc:cname="INPUTMODE" edc:nzwidth="0x4" edc:desc="Input mode">
                <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="Input has no actions" edc:when="(field &amp; 0xF) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="JMPWAIT" edc:desc="Stop output, jump to opposite compare cycle and wait" edc:when="(field &amp; 0xF) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="EXECWAIT" edc:desc="Stop output, execute opposite compare cycle and wait" edc:when="(field &amp; 0xF) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="EXECFAULT" edc:desc="stop output, execute opposite compare cycle while fault active" edc:when="(field &amp; 0xF) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="FREQ" edc:desc="Stop all outputs, maintain frequency" edc:when="(field &amp; 0xF) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="EXECDT" edc:desc="Stop all outputs, execute dead time while fault active" edc:when="(field &amp; 0xF) == 0x05"/>
                <edc:SFRFieldSemantic edc:cname="WAIT" edc:desc="Stop all outputs, jump to next compare cycle and wait" edc:when="(field &amp; 0xF) == 0x06"/>
                <edc:SFRFieldSemantic edc:cname="WAITSW" edc:desc="Stop all outputs, wait for software action" edc:when="(field &amp; 0xF) == 0x07"/>
                <edc:SFRFieldSemantic edc:cname="EDGETRIG" edc:desc="Stop output on edge, jump to next compare cycle" edc:when="(field &amp; 0xF) == 0x08"/>
                <edc:SFRFieldSemantic edc:cname="EDGETRIGFREQ" edc:desc="Stop output on edge, maintain frequency" edc:when="(field &amp; 0xF) == 0x09"/>
                <edc:SFRFieldSemantic edc:cname="LVLTRIGFREQ" edc:desc="Stop output at level, maintain frequency" edc:when="(field &amp; 0xF) == 0x0A"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="TCD0" edc:cname="FAULTCTRL" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0xA92">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCD0">
              <edc:SFRFieldDef edc:cname="CMPA" edc:nzwidth="0x1" edc:desc="Compare A value"/>
              <edc:SFRFieldDef edc:cname="CMPB" edc:nzwidth="0x1" edc:desc="Compare B value"/>
              <edc:SFRFieldDef edc:cname="CMPC" edc:nzwidth="0x1" edc:desc="Compare C value"/>
              <edc:SFRFieldDef edc:cname="CMPD" edc:nzwidth="0x1" edc:desc="Compare D vaule"/>
              <edc:SFRFieldDef edc:cname="CMPAEN" edc:nzwidth="0x1" edc:desc="Compare A enable"/>
              <edc:SFRFieldDef edc:cname="CMPBEN" edc:nzwidth="0x1" edc:desc="Compare B enable"/>
              <edc:SFRFieldDef edc:cname="CMPCEN" edc:nzwidth="0x1" edc:desc="Compare C enable"/>
              <edc:SFRFieldDef edc:cname="CMPDEN" edc:nzwidth="0x1" edc:desc="Compare D enable"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:AdjustPoint edc:offset="0x1" edc:_addr="0xA93"/>
        <edc:SFRDef ltx:memberofperipheral="TCD0" edc:cname="DLYCTRL" edc:nzwidth="0x8" edc:access="--nnnnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3F" edc:_addr="0xA94">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCD0">
              <edc:SFRFieldDef edc:cname="DLYSEL" edc:nzwidth="0x2" edc:desc="Delay select">
                <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="No delay" edc:when="(field &amp; 0x3) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="INBLANK" edc:desc="Input blanking enabled" edc:when="(field &amp; 0x3) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="EVENT" edc:desc="Event delay enabled" edc:when="(field &amp; 0x3) == 0x02"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="DLYTRIG" edc:nzwidth="0x2" edc:desc="Delay trigger">
                <edc:SFRFieldSemantic edc:cname="CMPASET" edc:desc="Compare A set" edc:when="(field &amp; 0x3) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="CMPACLR" edc:desc="Compare A clear" edc:when="(field &amp; 0x3) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="CMPBSET" edc:desc="Compare B set" edc:when="(field &amp; 0x3) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="CMPBCLR" edc:desc="Compare B clear" edc:when="(field &amp; 0x3) == 0x03"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="DLYPRESC" edc:nzwidth="0x2" edc:desc="Delay prescaler">
                <edc:SFRFieldSemantic edc:cname="DIV1" edc:desc="No prescaling" edc:when="(field &amp; 0x3) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="DIV2" edc:desc="Prescale with 2" edc:when="(field &amp; 0x3) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="DIV4" edc:desc="Prescale with 4" edc:when="(field &amp; 0x3) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="DIV8" edc:desc="Prescale with 8" edc:when="(field &amp; 0x3) == 0x03"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="TCD0" edc:cname="DLYVAL" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0xA95">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCD0">
              <edc:SFRFieldDef edc:cname="DLYVAL" edc:nzwidth="0x8" edc:desc="Delay value"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:AdjustPoint edc:offset="0x2" edc:_addr="0xA96"/>
        <edc:SFRDef ltx:memberofperipheral="TCD0" edc:cname="DITCTRL" edc:nzwidth="0x8" edc:access="------nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3" edc:_addr="0xA98">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCD0">
              <edc:SFRFieldDef edc:cname="DITHERSEL" edc:nzwidth="0x2" edc:desc="Dither select">
                <edc:SFRFieldSemantic edc:cname="ONTIMEB" edc:desc="On-time ramp B" edc:when="(field &amp; 0x3) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="ONTIMEAB" edc:desc="On-time ramp A and B" edc:when="(field &amp; 0x3) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="DEADTIMEB" edc:desc="Dead-time rampB" edc:when="(field &amp; 0x3) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="DEADTIMEAB" edc:desc="Dead-time ramp A and B" edc:when="(field &amp; 0x3) == 0x03"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="TCD0" edc:cname="DITVAL" edc:nzwidth="0x8" edc:access="----nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xF" edc:_addr="0xA99">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCD0">
              <edc:SFRFieldDef edc:cname="DITHER" edc:nzwidth="0x4" edc:desc="Dither value"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:AdjustPoint edc:offset="0x4" edc:_addr="0xA9A"/>
        <edc:SFRDef ltx:memberofperipheral="TCD0" edc:cname="DBGCTRL" edc:nzwidth="0x8" edc:access="-----n-n" edc:por="00000000" edc:mclr="00000000" edc:impl="0x5" edc:_addr="0xA9E">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCD0">
              <edc:SFRFieldDef edc:cname="DBGRUN" edc:nzwidth="0x1" edc:desc="Debug run"/>
              <edc:AdjustPoint edc:offset="0x1"/>
              <edc:SFRFieldDef edc:cname="FAULTDET" edc:nzwidth="0x1" edc:desc="Fault detection"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:AdjustPoint edc:offset="0x3" edc:_addr="0xA9F"/>
        <edc:SFRDef ltx:memberofperipheral="TCD0" edc:cname="CAPTUREA" edc:nzwidth="0x10" edc:access="rrrrrrrrrrrrrrrr" edc:_addr="0xAA2"/>
        <edc:SFRDef ltx:memberofperipheral="TCD0" edc:cname="CAPTUREB" edc:nzwidth="0x10" edc:access="rrrrrrrrrrrrrrrr" edc:_addr="0xAA4"/>
        <edc:AdjustPoint edc:offset="0x2" edc:_addr="0xAA6"/>
        <edc:SFRDef ltx:memberofperipheral="TCD0" edc:cname="CMPASET" edc:nzwidth="0x10" edc:access="----nnnnnnnnnnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:impl="0xFFF" edc:_addr="0xAA8">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCD0">
              <edc:SFRFieldDef edc:cname="CMPASET" edc:nzwidth="0xC" edc:desc="Compare A Set"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="TCD0" edc:cname="CMPACLR" edc:nzwidth="0x10" edc:access="----nnnnnnnnnnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:impl="0xFFF" edc:_addr="0xAAA">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCD0">
              <edc:SFRFieldDef edc:cname="CMPACLR" edc:nzwidth="0xC" edc:desc="Compare A Set"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="TCD0" edc:cname="CMPBSET" edc:nzwidth="0x10" edc:access="----nnnnnnnnnnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:impl="0xFFF" edc:_addr="0xAAC">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCD0">
              <edc:SFRFieldDef edc:cname="CMPBSET" edc:nzwidth="0xC" edc:desc="Compare B Set"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="TCD0" edc:cname="CMPBCLR" edc:nzwidth="0x10" edc:access="----nnnnnnnnnnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:impl="0xFFF" edc:_addr="0xAAE">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCD0">
              <edc:SFRFieldDef edc:cname="CMPBCLR" edc:nzwidth="0xC" edc:desc="Compare B Clear"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:AdjustPoint edc:offset="0x451" edc:_addr="0xAB0"/>
        <edc:SFRDef ltx:memberofperipheral="SYSCFG" edc:cname="REVID" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0xF01"/>
        <edc:SFRDef ltx:memberofperipheral="SYSCFG" edc:cname="EXTBRK" edc:nzwidth="0x8" edc:access="-------n" edc:por="00000000" edc:mclr="00000000" edc:impl="0x1" edc:_addr="0xF02">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SYSCFG">
              <edc:SFRFieldDef edc:cname="ENEXTBRK" edc:nzwidth="0x1" edc:desc="External break enable"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:AdjustPoint edc:offset="0xFD" edc:_addr="0xF03"/>
        <edc:SFRDef ltx:memberofperipheral="NVMCTRL" edc:cname="CTRLA" edc:nzwidth="0x8" edc:access="-----nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x7" edc:_addr="0x1000">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVMCTRL">
              <edc:SFRFieldDef edc:cname="CMD" edc:nzwidth="0x3" edc:desc="Command">
                <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="No Command" edc:when="(field &amp; 0x7) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="PAGEWRITE" edc:desc="Write page" edc:when="(field &amp; 0x7) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="PAGEERASE" edc:desc="Erase page" edc:when="(field &amp; 0x7) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="PAGEERASEWRITE" edc:desc="Erase and write page" edc:when="(field &amp; 0x7) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="PAGEBUFCLR" edc:desc="Page buffer clear" edc:when="(field &amp; 0x7) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="CHIPERASE" edc:desc="Chip erase" edc:when="(field &amp; 0x7) == 0x05"/>
                <edc:SFRFieldSemantic edc:cname="EEERASE" edc:desc="EEPROM erase" edc:when="(field &amp; 0x7) == 0x06"/>
                <edc:SFRFieldSemantic edc:cname="FUSEWRITE" edc:desc="Write fuse (PDI only)" edc:when="(field &amp; 0x7) == 0x07"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="NVMCTRL" edc:cname="CTRLB" edc:nzwidth="0x8" edc:access="------nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3" edc:_addr="0x1001">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVMCTRL">
              <edc:SFRFieldDef edc:cname="APCWP" edc:nzwidth="0x1" edc:desc="Application code write protect"/>
              <edc:SFRFieldDef edc:cname="BOOTLOCK" edc:nzwidth="0x1" edc:desc="Boot Lock"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="NVMCTRL" edc:cname="STATUS" edc:nzwidth="0x8" edc:access="-----rrr" edc:impl="0x7" edc:_addr="0x1002">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVMCTRL">
              <edc:SFRFieldDef edc:cname="FBUSY" edc:nzwidth="0x1" edc:desc="Flash busy"/>
              <edc:SFRFieldDef edc:cname="EEBUSY" edc:nzwidth="0x1" edc:desc="EEPROM busy"/>
              <edc:SFRFieldDef edc:cname="WRERROR" edc:nzwidth="0x1" edc:desc="Write error"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="NVMCTRL" edc:cname="INTCTRL" edc:nzwidth="0x8" edc:access="-------n" edc:por="00000000" edc:mclr="00000000" edc:impl="0x1" edc:_addr="0x1003">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVMCTRL">
              <edc:SFRFieldDef edc:cname="EEREADY" edc:nzwidth="0x1" edc:desc="EEPROM Ready"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="NVMCTRL" edc:cname="INTFLAGS" edc:nzwidth="0x8" edc:access="-------n" edc:por="00000000" edc:mclr="00000000" edc:impl="0x1" edc:_addr="0x1004">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVMCTRL">
              <edc:SFRFieldDef edc:cname="EEREADY" edc:nzwidth="0x1" edc:desc="EEPROM Ready"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:AdjustPoint edc:offset="0x1" edc:_addr="0x1005"/>
        <edc:SFRDef ltx:memberofperipheral="NVMCTRL" edc:cname="DATA" edc:nzwidth="0x10" edc:access="nnnnnnnnnnnnnnnn" edc:_addr="0x1006"/>
        <edc:SFRDef ltx:memberofperipheral="NVMCTRL" edc:cname="ADDR" edc:nzwidth="0x10" edc:access="nnnnnnnnnnnnnnnn" edc:_addr="0x1008"/>
      </edc:SFRDataSector>
      <edc:DeviceIDSector edc:regionid="SIGNATURES" edc:beginaddr="0x1100" edc:endaddr="0x1103" atdf:pagesize="0x40" edc:value="0x1E9223" edc:mask="0xffffff" edc:rw="r">
        <edc:DCRDef ltx:memberofperipheral="SIGROW" edc:cname="DEVICEID0" edc:nzwidth="0x8" edc:impl="0x0" edc:unused="0x0" edc:useinchecksum="0xFF" edc:factorydefault="0x0" edc:access="rrrrrrrr" edc:_addr="0x1100"/>
        <edc:DCRDef ltx:memberofperipheral="SIGROW" edc:cname="DEVICEID1" edc:nzwidth="0x8" edc:impl="0x0" edc:unused="0x0" edc:useinchecksum="0xFF" edc:factorydefault="0x0" edc:access="rrrrrrrr" edc:_addr="0x1101"/>
        <edc:DCRDef ltx:memberofperipheral="SIGROW" edc:cname="DEVICEID2" edc:nzwidth="0x8" edc:impl="0x0" edc:unused="0x0" edc:useinchecksum="0xFF" edc:factorydefault="0x0" edc:access="rrrrrrrr" edc:_addr="0x1102"/>
      </edc:DeviceIDSector>
      <edc:DeviceIDSector edc:regionid="PROD_SIGNATURES" edc:beginaddr="0x1103" edc:endaddr="0x1140" atdf:pagesize="0x40" edc:value="0x1E9223" edc:mask="0xffffff" edc:rw="r">
        <edc:DCRDef ltx:memberofperipheral="SIGROW" edc:cname="SERNUM0" edc:nzwidth="0x8" edc:impl="0x0" edc:unused="0x0" edc:useinchecksum="0xFF" edc:factorydefault="0x0" edc:access="rrrrrrrr" edc:_addr="0x1103"/>
        <edc:DCRDef ltx:memberofperipheral="SIGROW" edc:cname="SERNUM1" edc:nzwidth="0x8" edc:impl="0x0" edc:unused="0x0" edc:useinchecksum="0xFF" edc:factorydefault="0x0" edc:access="rrrrrrrr" edc:_addr="0x1104"/>
        <edc:DCRDef ltx:memberofperipheral="SIGROW" edc:cname="SERNUM2" edc:nzwidth="0x8" edc:impl="0x0" edc:unused="0x0" edc:useinchecksum="0xFF" edc:factorydefault="0x0" edc:access="rrrrrrrr" edc:_addr="0x1105"/>
        <edc:DCRDef ltx:memberofperipheral="SIGROW" edc:cname="SERNUM3" edc:nzwidth="0x8" edc:impl="0x0" edc:unused="0x0" edc:useinchecksum="0xFF" edc:factorydefault="0x0" edc:access="rrrrrrrr" edc:_addr="0x1106"/>
        <edc:DCRDef ltx:memberofperipheral="SIGROW" edc:cname="SERNUM4" edc:nzwidth="0x8" edc:impl="0x0" edc:unused="0x0" edc:useinchecksum="0xFF" edc:factorydefault="0x0" edc:access="rrrrrrrr" edc:_addr="0x1107"/>
        <edc:DCRDef ltx:memberofperipheral="SIGROW" edc:cname="SERNUM5" edc:nzwidth="0x8" edc:impl="0x0" edc:unused="0x0" edc:useinchecksum="0xFF" edc:factorydefault="0x0" edc:access="rrrrrrrr" edc:_addr="0x1108"/>
        <edc:DCRDef ltx:memberofperipheral="SIGROW" edc:cname="SERNUM6" edc:nzwidth="0x8" edc:impl="0x0" edc:unused="0x0" edc:useinchecksum="0xFF" edc:factorydefault="0x0" edc:access="rrrrrrrr" edc:_addr="0x1109"/>
        <edc:DCRDef ltx:memberofperipheral="SIGROW" edc:cname="SERNUM7" edc:nzwidth="0x8" edc:impl="0x0" edc:unused="0x0" edc:useinchecksum="0xFF" edc:factorydefault="0x0" edc:access="rrrrrrrr" edc:_addr="0x110A"/>
        <edc:DCRDef ltx:memberofperipheral="SIGROW" edc:cname="SERNUM8" edc:nzwidth="0x8" edc:impl="0x0" edc:unused="0x0" edc:useinchecksum="0xFF" edc:factorydefault="0x0" edc:access="rrrrrrrr" edc:_addr="0x110B"/>
        <edc:DCRDef ltx:memberofperipheral="SIGROW" edc:cname="SERNUM9" edc:nzwidth="0x8" edc:impl="0x0" edc:unused="0x0" edc:useinchecksum="0xFF" edc:factorydefault="0x0" edc:access="rrrrrrrr" edc:_addr="0x110C"/>
        <edc:AdjustPoint edc:offset="0x13" edc:_addr="0x110D"/>
        <edc:DCRDef ltx:memberofperipheral="SIGROW" edc:cname="TEMPSENSE0" edc:nzwidth="0x8" edc:impl="0x0" edc:unused="0x0" edc:useinchecksum="0xFF" edc:factorydefault="0x0" edc:access="rrrrrrrr" edc:_addr="0x1120"/>
        <edc:DCRDef ltx:memberofperipheral="SIGROW" edc:cname="TEMPSENSE1" edc:nzwidth="0x8" edc:impl="0x0" edc:unused="0x0" edc:useinchecksum="0xFF" edc:factorydefault="0x0" edc:access="rrrrrrrr" edc:_addr="0x1121"/>
        <edc:DCRDef ltx:memberofperipheral="SIGROW" edc:cname="OSC16ERR3V" edc:nzwidth="0x8" edc:impl="0x0" edc:unused="0x0" edc:useinchecksum="0xFF" edc:factorydefault="0x0" edc:access="rrrrrrrr" edc:_addr="0x1122"/>
        <edc:DCRDef ltx:memberofperipheral="SIGROW" edc:cname="OSC16ERR5V" edc:nzwidth="0x8" edc:impl="0x0" edc:unused="0x0" edc:useinchecksum="0xFF" edc:factorydefault="0x0" edc:access="rrrrrrrr" edc:_addr="0x1123"/>
        <edc:DCRDef ltx:memberofperipheral="SIGROW" edc:cname="OSC20ERR3V" edc:nzwidth="0x8" edc:impl="0x0" edc:unused="0x0" edc:useinchecksum="0xFF" edc:factorydefault="0x0" edc:access="rrrrrrrr" edc:_addr="0x1124"/>
        <edc:DCRDef ltx:memberofperipheral="SIGROW" edc:cname="OSC20ERR5V" edc:nzwidth="0x8" edc:impl="0x0" edc:unused="0x0" edc:useinchecksum="0xFF" edc:factorydefault="0x0" edc:access="rrrrrrrr" edc:_addr="0x1125"/>
      </edc:DeviceIDSector>
      <edc:ConfigFuseSector edc:regionid="FUSES" edc:beginaddr="0x1280" edc:endaddr="0x1289" edc:magicoffset="0x820000" atdf:pagesize="0x20" edc:rw="rw">
        <edc:DCRDef ltx:memberofperipheral="FUSE" edc:cname="WDTCFG" edc:nzwidth="0x8" edc:impl="0xFF" edc:unused="0x0" edc:useinchecksum="0xFF" edc:factorydefault="0x00" edc:access="nnnnnnnn" edc:_addr="0x1280">
          <edc:DCRModeList>
            <edc:DCRMode edc:id="DS.0" ltx:memberofperipheral="FUSE">
              <edc:DCRFieldDef edc:cname="PERIOD" edc:nzwidth="0x4" edc:desc="Watchdog Timeout Period">
                <edc:DCRFieldSemantic edc:cname="OFF" edc:desc="Watch-Dog timer Off" edc:when="(field &amp; 0xF) == 0x00"/>
                <edc:DCRFieldSemantic edc:cname="8CLK" edc:desc="8 cycles (8ms)" edc:when="(field &amp; 0xF) == 0x01"/>
                <edc:DCRFieldSemantic edc:cname="16CLK" edc:desc="16 cycles (16ms)" edc:when="(field &amp; 0xF) == 0x02"/>
                <edc:DCRFieldSemantic edc:cname="32CLK" edc:desc="32 cycles (32ms)" edc:when="(field &amp; 0xF) == 0x03"/>
                <edc:DCRFieldSemantic edc:cname="64CLK" edc:desc="64 cycles (64ms)" edc:when="(field &amp; 0xF) == 0x04"/>
                <edc:DCRFieldSemantic edc:cname="128CLK" edc:desc="128 cycles (0.128s)" edc:when="(field &amp; 0xF) == 0x05"/>
                <edc:DCRFieldSemantic edc:cname="256CLK" edc:desc="256 cycles (0.256s)" edc:when="(field &amp; 0xF) == 0x06"/>
                <edc:DCRFieldSemantic edc:cname="512CLK" edc:desc="512 cycles (0.512s)" edc:when="(field &amp; 0xF) == 0x07"/>
                <edc:DCRFieldSemantic edc:cname="1KCLK" edc:desc="1K cycles (1.0s)" edc:when="(field &amp; 0xF) == 0x08"/>
                <edc:DCRFieldSemantic edc:cname="2KCLK" edc:desc="2K cycles (2.0s)" edc:when="(field &amp; 0xF) == 0x09"/>
                <edc:DCRFieldSemantic edc:cname="4KCLK" edc:desc="4K cycles (4.1s)" edc:when="(field &amp; 0xF) == 0x0A"/>
                <edc:DCRFieldSemantic edc:cname="8KCLK" edc:desc="8K cycles (8.2s)" edc:when="(field &amp; 0xF) == 0x0B"/>
              </edc:DCRFieldDef>
              <edc:DCRFieldDef edc:cname="WINDOW" edc:nzwidth="0x4" edc:desc="Watchdog Window Timeout Period">
                <edc:DCRFieldSemantic edc:cname="OFF" edc:desc="Window mode off" edc:when="(field &amp; 0xF) == 0x00"/>
                <edc:DCRFieldSemantic edc:cname="8CLK" edc:desc="8 cycles (8ms)" edc:when="(field &amp; 0xF) == 0x01"/>
                <edc:DCRFieldSemantic edc:cname="16CLK" edc:desc="16 cycles (16ms)" edc:when="(field &amp; 0xF) == 0x02"/>
                <edc:DCRFieldSemantic edc:cname="32CLK" edc:desc="32 cycles (32ms)" edc:when="(field &amp; 0xF) == 0x03"/>
                <edc:DCRFieldSemantic edc:cname="64CLK" edc:desc="64 cycles (64ms)" edc:when="(field &amp; 0xF) == 0x04"/>
                <edc:DCRFieldSemantic edc:cname="128CLK" edc:desc="128 cycles (0.128s)" edc:when="(field &amp; 0xF) == 0x05"/>
                <edc:DCRFieldSemantic edc:cname="256CLK" edc:desc="256 cycles (0.256s)" edc:when="(field &amp; 0xF) == 0x06"/>
                <edc:DCRFieldSemantic edc:cname="512CLK" edc:desc="512 cycles (0.512s)" edc:when="(field &amp; 0xF) == 0x07"/>
                <edc:DCRFieldSemantic edc:cname="1KCLK" edc:desc="1K cycles (1.0s)" edc:when="(field &amp; 0xF) == 0x08"/>
                <edc:DCRFieldSemantic edc:cname="2KCLK" edc:desc="2K cycles (2.0s)" edc:when="(field &amp; 0xF) == 0x09"/>
                <edc:DCRFieldSemantic edc:cname="4KCLK" edc:desc="4K cycles (4.1s)" edc:when="(field &amp; 0xF) == 0x0A"/>
                <edc:DCRFieldSemantic edc:cname="8KCLK" edc:desc="8K cycles (8.2s)" edc:when="(field &amp; 0xF) == 0x0B"/>
              </edc:DCRFieldDef>
            </edc:DCRMode>
          </edc:DCRModeList>
        </edc:DCRDef>
        <edc:DCRDef ltx:memberofperipheral="FUSE" edc:cname="BODCFG" edc:nzwidth="0x8" edc:impl="0xFF" edc:unused="0x0" edc:useinchecksum="0xFF" edc:factorydefault="0x00" edc:access="nnnnnnnn" edc:_addr="0x1281">
          <edc:DCRModeList>
            <edc:DCRMode edc:id="DS.0" ltx:memberofperipheral="FUSE">
              <edc:DCRFieldDef edc:cname="SLEEP" edc:nzwidth="0x2" edc:desc="BOD Operation in Sleep Mode">
                <edc:DCRFieldSemantic edc:cname="DIS" edc:desc="Disabled" edc:when="(field &amp; 0x3) == 0x00"/>
                <edc:DCRFieldSemantic edc:cname="ENABLED" edc:desc="Enabled" edc:when="(field &amp; 0x3) == 0x01"/>
                <edc:DCRFieldSemantic edc:cname="SAMPLED" edc:desc="Sampled" edc:when="(field &amp; 0x3) == 0x02"/>
              </edc:DCRFieldDef>
              <edc:DCRFieldDef edc:cname="ACTIVE" edc:nzwidth="0x2" edc:desc="BOD Operation in Active Mode">
                <edc:DCRFieldSemantic edc:cname="DIS" edc:desc="Disabled" edc:when="(field &amp; 0x3) == 0x00"/>
                <edc:DCRFieldSemantic edc:cname="ENABLED" edc:desc="Enabled" edc:when="(field &amp; 0x3) == 0x01"/>
                <edc:DCRFieldSemantic edc:cname="SAMPLED" edc:desc="Sampled" edc:when="(field &amp; 0x3) == 0x02"/>
                <edc:DCRFieldSemantic edc:cname="ENWAKE" edc:desc="Enabled with wake-up halted until BOD is ready" edc:when="(field &amp; 0x3) == 0x03"/>
              </edc:DCRFieldDef>
              <edc:DCRFieldDef edc:cname="SAMPFREQ" edc:nzwidth="0x1" edc:desc="BOD Sample Frequency">
                <edc:DCRFieldSemantic edc:cname="1KHz" edc:desc="1kHz sampling frequency" edc:when="(field &amp; 0x1) == 0x00"/>
                <edc:DCRFieldSemantic edc:cname="125Hz" edc:desc="125Hz sampling frequency" edc:when="(field &amp; 0x1) == 0x01"/>
              </edc:DCRFieldDef>
              <edc:DCRFieldDef edc:cname="LVL" edc:nzwidth="0x3" edc:desc="BOD Level">
                <edc:DCRFieldSemantic edc:cname="BODLEVEL0" edc:desc="1.8 V" edc:when="(field &amp; 0x7) == 0x00"/>
                <edc:DCRFieldSemantic edc:cname="BODLEVEL2" edc:desc="2.6 V" edc:when="(field &amp; 0x7) == 0x02"/>
                <edc:DCRFieldSemantic edc:cname="BODLEVEL7" edc:desc="4.2 V" edc:when="(field &amp; 0x7) == 0x07"/>
              </edc:DCRFieldDef>
            </edc:DCRMode>
          </edc:DCRModeList>
        </edc:DCRDef>
        <edc:DCRDef ltx:memberofperipheral="FUSE" edc:cname="OSCCFG" edc:nzwidth="0x8" edc:impl="0x83" edc:unused="0x0" edc:useinchecksum="0xFF" edc:factorydefault="0x7E" edc:access="n-----nn" edc:_addr="0x1282">
          <edc:DCRModeList>
            <edc:DCRMode edc:id="DS.0" ltx:memberofperipheral="FUSE">
              <edc:DCRFieldDef edc:cname="FREQSEL" edc:nzwidth="0x2" edc:desc="Frequency Select">
                <edc:DCRFieldSemantic edc:cname="16MHZ" edc:desc="16 MHz" edc:when="(field &amp; 0x3) == 0x01"/>
                <edc:DCRFieldSemantic edc:cname="20MHZ" edc:desc="20 MHz" edc:when="(field &amp; 0x3) == 0x02"/>
              </edc:DCRFieldDef>
              <edc:AdjustPoint edc:offset="0x5"/>
              <edc:DCRFieldDef edc:cname="OSCLOCK" edc:nzwidth="0x1" edc:desc="Oscillator Lock">
                <edc:DCRFieldSemantic edc:cname="SET" edc:when="(field &amp; 0x1) == 0x1"/>
                <edc:DCRFieldSemantic edc:cname="CLEAR" edc:when="(field &amp; 0x1) == 0x0"/>
              </edc:DCRFieldDef>
            </edc:DCRMode>
          </edc:DCRModeList>
        </edc:DCRDef>
        <edc:AdjustPoint edc:offset="0x1" edc:_addr="0x1283"/>
        <edc:DCRDef ltx:memberofperipheral="FUSE" edc:cname="TCD0CFG" edc:nzwidth="0x8" edc:impl="0xFF" edc:unused="0x0" edc:useinchecksum="0xFF" edc:factorydefault="0x00" edc:access="nnnnnnnn" edc:_addr="0x1284">
          <edc:DCRModeList>
            <edc:DCRMode edc:id="DS.0" ltx:memberofperipheral="FUSE">
              <edc:DCRFieldDef edc:cname="CMPA" edc:nzwidth="0x1" edc:desc="Compare A Default Output Value">
                <edc:DCRFieldSemantic edc:cname="SET" edc:when="(field &amp; 0x1) == 0x1"/>
                <edc:DCRFieldSemantic edc:cname="CLEAR" edc:when="(field &amp; 0x1) == 0x0"/>
              </edc:DCRFieldDef>
              <edc:DCRFieldDef edc:cname="CMPB" edc:nzwidth="0x1" edc:desc="Compare B Default Output Value">
                <edc:DCRFieldSemantic edc:cname="SET" edc:when="(field &amp; 0x1) == 0x1"/>
                <edc:DCRFieldSemantic edc:cname="CLEAR" edc:when="(field &amp; 0x1) == 0x0"/>
              </edc:DCRFieldDef>
              <edc:DCRFieldDef edc:cname="CMPC" edc:nzwidth="0x1" edc:desc="Compare C Default Output Value">
                <edc:DCRFieldSemantic edc:cname="SET" edc:when="(field &amp; 0x1) == 0x1"/>
                <edc:DCRFieldSemantic edc:cname="CLEAR" edc:when="(field &amp; 0x1) == 0x0"/>
              </edc:DCRFieldDef>
              <edc:DCRFieldDef edc:cname="CMPD" edc:nzwidth="0x1" edc:desc="Compare D Default Output Value">
                <edc:DCRFieldSemantic edc:cname="SET" edc:when="(field &amp; 0x1) == 0x1"/>
                <edc:DCRFieldSemantic edc:cname="CLEAR" edc:when="(field &amp; 0x1) == 0x0"/>
              </edc:DCRFieldDef>
              <edc:DCRFieldDef edc:cname="CMPAEN" edc:nzwidth="0x1" edc:desc="Compare A Output Enable">
                <edc:DCRFieldSemantic edc:cname="SET" edc:when="(field &amp; 0x1) == 0x1"/>
                <edc:DCRFieldSemantic edc:cname="CLEAR" edc:when="(field &amp; 0x1) == 0x0"/>
              </edc:DCRFieldDef>
              <edc:DCRFieldDef edc:cname="CMPBEN" edc:nzwidth="0x1" edc:desc="Compare B Output Enable">
                <edc:DCRFieldSemantic edc:cname="SET" edc:when="(field &amp; 0x1) == 0x1"/>
                <edc:DCRFieldSemantic edc:cname="CLEAR" edc:when="(field &amp; 0x1) == 0x0"/>
              </edc:DCRFieldDef>
              <edc:DCRFieldDef edc:cname="CMPCEN" edc:nzwidth="0x1" edc:desc="Compare C Output Enable">
                <edc:DCRFieldSemantic edc:cname="SET" edc:when="(field &amp; 0x1) == 0x1"/>
                <edc:DCRFieldSemantic edc:cname="CLEAR" edc:when="(field &amp; 0x1) == 0x0"/>
              </edc:DCRFieldDef>
              <edc:DCRFieldDef edc:cname="CMPDEN" edc:nzwidth="0x1" edc:desc="Compare D Output Enable">
                <edc:DCRFieldSemantic edc:cname="SET" edc:when="(field &amp; 0x1) == 0x1"/>
                <edc:DCRFieldSemantic edc:cname="CLEAR" edc:when="(field &amp; 0x1) == 0x0"/>
              </edc:DCRFieldDef>
            </edc:DCRMode>
          </edc:DCRModeList>
        </edc:DCRDef>
        <edc:DCRDef ltx:memberofperipheral="FUSE" edc:cname="SYSCFG0" edc:nzwidth="0x8" edc:impl="0xCD" edc:unused="0x0" edc:useinchecksum="0xFF" edc:factorydefault="0xF6" edc:access="nn--nn-n" edc:_addr="0x1285">
          <edc:DCRModeList>
            <edc:DCRMode edc:id="DS.0" ltx:memberofperipheral="FUSE">
              <edc:DCRFieldDef edc:cname="EESAVE" edc:nzwidth="0x1" edc:desc="EEPROM Save">
                <edc:DCRFieldSemantic edc:cname="SET" edc:when="(field &amp; 0x1) == 0x1"/>
                <edc:DCRFieldSemantic edc:cname="CLEAR" edc:when="(field &amp; 0x1) == 0x0"/>
              </edc:DCRFieldDef>
              <edc:AdjustPoint edc:offset="0x1"/>
              <edc:DCRFieldDef edc:cname="RSTPINCFG" edc:nzwidth="0x2" edc:desc="Reset Pin Configuration">
                <edc:DCRFieldSemantic edc:cname="GPIO" edc:desc="GPIO mode" edc:when="(field &amp; 0x3) == 0x00"/>
                <edc:DCRFieldSemantic edc:cname="UPDI" edc:desc="UPDI mode" edc:when="(field &amp; 0x3) == 0x01"/>
                <edc:DCRFieldSemantic edc:cname="RST" edc:desc="Reset mode" edc:when="(field &amp; 0x3) == 0x02"/>
              </edc:DCRFieldDef>
              <edc:AdjustPoint edc:offset="0x2"/>
              <edc:DCRFieldDef edc:cname="CRCSRC" edc:nzwidth="0x2" edc:desc="CRC Source">
                <edc:DCRFieldSemantic edc:cname="FLASH" edc:desc="The CRC is performed on the entire Flash (boot, application code and application data section)." edc:when="(field &amp; 0x3) == 0x00"/>
                <edc:DCRFieldSemantic edc:cname="BOOT" edc:desc="The CRC is performed on the boot section of Flash" edc:when="(field &amp; 0x3) == 0x01"/>
                <edc:DCRFieldSemantic edc:cname="BOOTAPP" edc:desc="The CRC is performed on the boot and application code section of Flash" edc:when="(field &amp; 0x3) == 0x02"/>
                <edc:DCRFieldSemantic edc:cname="NOCRC" edc:desc="Disable CRC." edc:when="(field &amp; 0x3) == 0x03"/>
              </edc:DCRFieldDef>
            </edc:DCRMode>
          </edc:DCRModeList>
        </edc:DCRDef>
        <edc:DCRDef ltx:memberofperipheral="FUSE" edc:cname="SYSCFG1" edc:nzwidth="0x8" edc:impl="0x7" edc:unused="0x0" edc:useinchecksum="0xFF" edc:factorydefault="0xFF" edc:access="-----nnn" edc:_addr="0x1286">
          <edc:DCRModeList>
            <edc:DCRMode edc:id="DS.0" ltx:memberofperipheral="FUSE">
              <edc:DCRFieldDef edc:cname="SUT" edc:nzwidth="0x3" edc:desc="Startup Time">
                <edc:DCRFieldSemantic edc:cname="0MS" edc:desc="0 ms" edc:when="(field &amp; 0x7) == 0x00"/>
                <edc:DCRFieldSemantic edc:cname="1MS" edc:desc="1 ms" edc:when="(field &amp; 0x7) == 0x01"/>
                <edc:DCRFieldSemantic edc:cname="2MS" edc:desc="2 ms" edc:when="(field &amp; 0x7) == 0x02"/>
                <edc:DCRFieldSemantic edc:cname="4MS" edc:desc="4 ms" edc:when="(field &amp; 0x7) == 0x03"/>
                <edc:DCRFieldSemantic edc:cname="8MS" edc:desc="8 ms" edc:when="(field &amp; 0x7) == 0x04"/>
                <edc:DCRFieldSemantic edc:cname="16MS" edc:desc="16 ms" edc:when="(field &amp; 0x7) == 0x05"/>
                <edc:DCRFieldSemantic edc:cname="32MS" edc:desc="32 ms" edc:when="(field &amp; 0x7) == 0x06"/>
                <edc:DCRFieldSemantic edc:cname="64MS" edc:desc="64 ms" edc:when="(field &amp; 0x7) == 0x07"/>
              </edc:DCRFieldDef>
            </edc:DCRMode>
          </edc:DCRModeList>
        </edc:DCRDef>
        <edc:DCRDef ltx:memberofperipheral="FUSE" edc:cname="APPEND" edc:nzwidth="0x8" edc:impl="0xFF" edc:unused="0x0" edc:useinchecksum="0xFF" edc:factorydefault="0x00" edc:access="nnnnnnnn" edc:_addr="0x1287">
          <edc:DCRModeList>
            <edc:DCRMode edc:id="DS.0" ltx:memberofperipheral="FUSE">
              <edc:DCRFieldDef edc:cname="APPEND" edc:nzwidth="0x8" edc:desc="Application Code Section End"/>
            </edc:DCRMode>
          </edc:DCRModeList>
        </edc:DCRDef>
        <edc:DCRDef ltx:memberofperipheral="FUSE" edc:cname="BOOTEND" edc:nzwidth="0x8" edc:impl="0xFF" edc:unused="0x0" edc:useinchecksum="0xFF" edc:factorydefault="0x00" edc:access="nnnnnnnn" edc:_addr="0x1288">
          <edc:DCRModeList>
            <edc:DCRMode edc:id="DS.0" ltx:memberofperipheral="FUSE">
              <edc:DCRFieldDef edc:cname="BOOTEND" edc:nzwidth="0x8" edc:desc="Boot Section End"/>
            </edc:DCRMode>
          </edc:DCRModeList>
        </edc:DCRDef>
      </edc:ConfigFuseSector>
      <edc:ConfigFuseSector edc:regionid="LOCKBITS" edc:beginaddr="0x128A" edc:endaddr="0x128B" edc:magicoffset="0x830000" atdf:pagesize="0x20" edc:rw="rw">
        <edc:DCRDef ltx:memberofperipheral="LOCKBIT" edc:cname="LOCKBIT" edc:nzwidth="0x8" edc:impl="0xFF" edc:unused="0x0" edc:useinchecksum="0xFF" edc:factorydefault="0xC5" edc:access="nnnnnnnn" edc:_addr="0x128A">
          <edc:DCRModeList>
            <edc:DCRMode edc:id="DS.0" ltx:memberofperipheral="LOCKBIT">
              <edc:DCRFieldDef edc:cname="LB" edc:nzwidth="0x8" edc:desc="Lock Bits">
                <edc:DCRFieldSemantic edc:cname="RWLOCK" edc:desc="Read and write lock" edc:when="(field &amp; 0xFF) == 0x3A"/>
                <edc:DCRFieldSemantic edc:cname="NOLOCK" edc:desc="No locks" edc:when="(field &amp; 0xFF) == 0xC5"/>
              </edc:DCRFieldDef>
            </edc:DCRMode>
          </edc:DCRModeList>
        </edc:DCRDef>
      </edc:ConfigFuseSector>
      <edc:UserIDSector edc:regionid="USER_SIGNATURES" edc:beginaddr="0x1300" edc:endaddr="0x1320" edc:magicoffset="0x850000" atdf:pagesize="0x20" edc:rw="rw">
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW0" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1300"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW1" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1301"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW2" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1302"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW3" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1303"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW4" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1304"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW5" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1305"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW6" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1306"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW7" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1307"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW8" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1308"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW9" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1309"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW10" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x130A"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW11" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x130B"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW12" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x130C"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW13" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x130D"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW14" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x130E"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW15" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x130F"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW16" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1310"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW17" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1311"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW18" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1312"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW19" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1313"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW20" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1314"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW21" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1315"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW22" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1316"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW23" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1317"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW24" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1318"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW25" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1319"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW26" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x131A"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW27" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x131B"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW28" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x131C"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW29" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x131D"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW30" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x131E"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW31" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x131F"/>
      </edc:UserIDSector>
      <edc:EEDataSector edc:regionid="EEPROM" edc:beginaddr="0x811400" edc:endaddr="0x811480" edc:magicoffset="0x810000" atdf:pagesize="0x20" edc:rw="rw"/>
      <edc:GPRDataSector edc:regionid="INTERNAL_SRAM" edc:beginaddr="0x3F00" edc:endaddr="0x4000" edc:isexecutable="false" edc:rw="rw"/>
      <edc:GPRDataSector edc:regionid="MAPPED_PROGMEM" edc:beginaddr="0x8000" edc:endaddr="0x9000" atdf:pagesize="0x40" edc:isexecutable="false" edc:rw="rw"/>
    </edc:RegardlessOfMode>
    <edc:RegisterMap edc:id="TCA0/SINGLE">
      <edc:SFRDef ltx:memberofperipheral="TCA0" edc:cname="CTRLA" edc:nzwidth="0x8" edc:access="----nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xF" edc:addr="0xA00">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCA0">
            <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="Module Enable"/>
            <edc:SFRFieldDef edc:cname="CLKSEL" edc:nzwidth="0x3" edc:desc="Clock Selection">
              <edc:SFRFieldSemantic edc:cname="DIV1" edc:desc="System Clock" edc:when="(field &amp; 0x7) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="DIV2" edc:desc="System Clock / 2" edc:when="(field &amp; 0x7) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="DIV4" edc:desc="System Clock / 4" edc:when="(field &amp; 0x7) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="DIV8" edc:desc="System Clock / 8" edc:when="(field &amp; 0x7) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="DIV16" edc:desc="System Clock / 16" edc:when="(field &amp; 0x7) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="DIV64" edc:desc="System Clock / 64" edc:when="(field &amp; 0x7) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="DIV256" edc:desc="System Clock / 256" edc:when="(field &amp; 0x7) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="DIV1024" edc:desc="System Clock / 1024" edc:when="(field &amp; 0x7) == 0x07"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TCA0" edc:cname="CTRLB" edc:nzwidth="0x8" edc:access="-nnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x7F" edc:addr="0xA01">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCA0">
            <edc:SFRFieldDef edc:cname="WGMODE" edc:nzwidth="0x3" edc:desc="Waveform generation mode">
              <edc:SFRFieldSemantic edc:cname="NORMAL" edc:desc="Normal Mode" edc:when="(field &amp; 0x7) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="FRQ" edc:desc="Frequency Generation Mode" edc:when="(field &amp; 0x7) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="SINGLESLOPE" edc:desc="Single Slope PWM" edc:when="(field &amp; 0x7) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="DSTOP" edc:desc="Dual Slope PWM, overflow on TOP" edc:when="(field &amp; 0x7) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="DSBOTH" edc:desc="Dual Slope PWM, overflow on TOP and BOTTOM" edc:when="(field &amp; 0x7) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="DSBOTTOM" edc:desc="Dual Slope PWM, overflow on BOTTOM" edc:when="(field &amp; 0x7) == 0x07"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="ALUPD" edc:nzwidth="0x1" edc:desc="Auto Lock Update"/>
            <edc:SFRFieldDef edc:cname="CMP0EN" edc:nzwidth="0x1" edc:desc="Compare 0 Enable"/>
            <edc:SFRFieldDef edc:cname="CMP1EN" edc:nzwidth="0x1" edc:desc="Compare 1 Enable"/>
            <edc:SFRFieldDef edc:cname="CMP2EN" edc:nzwidth="0x1" edc:desc="Compare 2 Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TCA0" edc:cname="CTRLC" edc:nzwidth="0x8" edc:access="-----nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x7" edc:addr="0xA02">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCA0">
            <edc:SFRFieldDef edc:cname="CMP0OV" edc:nzwidth="0x1" edc:desc="Compare 0 Waveform Output Value"/>
            <edc:SFRFieldDef edc:cname="CMP1OV" edc:nzwidth="0x1" edc:desc="Compare 1 Waveform Output Value"/>
            <edc:SFRFieldDef edc:cname="CMP2OV" edc:nzwidth="0x1" edc:desc="Compare 2 Waveform Output Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TCA0" edc:cname="CTRLD" edc:nzwidth="0x8" edc:access="-------n" edc:por="00000000" edc:mclr="00000000" edc:impl="0x1" edc:addr="0xA03">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCA0">
            <edc:SFRFieldDef edc:cname="SPLITM" edc:nzwidth="0x1" edc:desc="Split Mode Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TCA0" edc:cname="CTRLECLR" edc:nzwidth="0x8" edc:access="----nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xF" edc:addr="0xA04">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCA0">
            <edc:SFRFieldDef edc:cname="DIR" edc:nzwidth="0x1" edc:desc="Direction"/>
            <edc:SFRFieldDef edc:cname="LUPD" edc:nzwidth="0x1" edc:desc="Lock Update"/>
            <edc:SFRFieldDef edc:cname="CMD" edc:nzwidth="0x2" edc:desc="Command">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="No Command" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="UPDATE" edc:desc="Force Update" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="RESTART" edc:desc="Force Restart" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="RESET" edc:desc="Force Hard Reset" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TCA0" edc:cname="CTRLESET" edc:nzwidth="0x8" edc:access="----nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xF" edc:addr="0xA05">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCA0">
            <edc:SFRFieldDef edc:cname="DIR" edc:nzwidth="0x1" edc:desc="Direction">
              <edc:SFRFieldSemantic edc:cname="UP" edc:desc="Count up" edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="DOWN" edc:desc="Count down" edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="LUPD" edc:nzwidth="0x1" edc:desc="Lock Update"/>
            <edc:SFRFieldDef edc:cname="CMD" edc:nzwidth="0x2" edc:desc="Command">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="No Command" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="UPDATE" edc:desc="Force Update" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="RESTART" edc:desc="Force Restart" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="RESET" edc:desc="Force Hard Reset" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TCA0" edc:cname="CTRLFCLR" edc:nzwidth="0x8" edc:access="----nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xF" edc:addr="0xA06">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCA0">
            <edc:SFRFieldDef edc:cname="PERBV" edc:nzwidth="0x1" edc:desc="Period Buffer Valid"/>
            <edc:SFRFieldDef edc:cname="CMP0BV" edc:nzwidth="0x1" edc:desc="Compare 0 Buffer Valid"/>
            <edc:SFRFieldDef edc:cname="CMP1BV" edc:nzwidth="0x1" edc:desc="Compare 1 Buffer Valid"/>
            <edc:SFRFieldDef edc:cname="CMP2BV" edc:nzwidth="0x1" edc:desc="Compare 2 Buffer Valid"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TCA0" edc:cname="CTRLFSET" edc:nzwidth="0x8" edc:access="----nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xF" edc:addr="0xA07">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCA0">
            <edc:SFRFieldDef edc:cname="PERBV" edc:nzwidth="0x1" edc:desc="Period Buffer Valid"/>
            <edc:SFRFieldDef edc:cname="CMP0BV" edc:nzwidth="0x1" edc:desc="Compare 0 Buffer Valid"/>
            <edc:SFRFieldDef edc:cname="CMP1BV" edc:nzwidth="0x1" edc:desc="Compare 1 Buffer Valid"/>
            <edc:SFRFieldDef edc:cname="CMP2BV" edc:nzwidth="0x1" edc:desc="Compare 2 Buffer Valid"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TCA0" edc:cname="EVCTRL" edc:nzwidth="0x8" edc:access="-----nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x7" edc:addr="0xA09">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCA0">
            <edc:SFRFieldDef edc:cname="CNTEI" edc:nzwidth="0x1" edc:desc="Count on Event Input"/>
            <edc:SFRFieldDef edc:cname="EVACT" edc:nzwidth="0x2" edc:desc="Event Action">
              <edc:SFRFieldSemantic edc:cname="POSEDGE" edc:desc="Count on positive edge event" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="ANYEDGE" edc:desc="Count on any edge event" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="HIGHLVL" edc:desc="Count on prescaled clock while event line is 1." edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="UPDOWN" edc:desc="Count on prescaled clock. Event controls count direction. Up-count when event line is 0, down-count when event line is 1." edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TCA0" edc:cname="INTCTRL" edc:nzwidth="0x8" edc:access="-nnn---n" edc:por="00000000" edc:mclr="00000000" edc:impl="0x71" edc:addr="0xA0A">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCA0">
            <edc:SFRFieldDef edc:cname="OVF" edc:nzwidth="0x1" edc:desc="Overflow Interrupt"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="CMP0" edc:nzwidth="0x1" edc:desc="Compare 0 Interrupt"/>
            <edc:SFRFieldDef edc:cname="CMP1" edc:nzwidth="0x1" edc:desc="Compare 1 Interrupt"/>
            <edc:SFRFieldDef edc:cname="CMP2" edc:nzwidth="0x1" edc:desc="Compare 2 Interrupt"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TCA0" edc:cname="INTFLAGS" edc:nzwidth="0x8" edc:access="-nnn---n" edc:por="00000000" edc:mclr="00000000" edc:impl="0x71" edc:addr="0xA0B">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCA0">
            <edc:SFRFieldDef edc:cname="OVF" edc:nzwidth="0x1" edc:desc="Overflow Interrupt"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="CMP0" edc:nzwidth="0x1" edc:desc="Compare 0 Interrupt"/>
            <edc:SFRFieldDef edc:cname="CMP1" edc:nzwidth="0x1" edc:desc="Compare 1 Interrupt"/>
            <edc:SFRFieldDef edc:cname="CMP2" edc:nzwidth="0x1" edc:desc="Compare 2 Interrupt"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TCA0" edc:cname="DBGCTRL" edc:nzwidth="0x8" edc:access="-------n" edc:por="00000000" edc:mclr="00000000" edc:impl="0x1" edc:addr="0xA0E">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCA0">
            <edc:SFRFieldDef edc:cname="DBGRUN" edc:nzwidth="0x1" edc:desc="Debug Run"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TCA0" edc:cname="TEMP" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:addr="0xA0F"/>
      <edc:SFRDef ltx:memberofperipheral="TCA0" edc:cname="CNT" edc:nzwidth="0x10" edc:access="nnnnnnnnnnnnnnnn" edc:addr="0xA20"/>
      <edc:SFRDef ltx:memberofperipheral="TCA0" edc:cname="PER" edc:nzwidth="0x10" edc:access="nnnnnnnnnnnnnnnn" edc:addr="0xA26"/>
      <edc:SFRDef ltx:memberofperipheral="TCA0" edc:cname="CMP0" edc:nzwidth="0x10" edc:access="nnnnnnnnnnnnnnnn" edc:addr="0xA28"/>
      <edc:SFRDef ltx:memberofperipheral="TCA0" edc:cname="CMP1" edc:nzwidth="0x10" edc:access="nnnnnnnnnnnnnnnn" edc:addr="0xA2A"/>
      <edc:SFRDef ltx:memberofperipheral="TCA0" edc:cname="CMP2" edc:nzwidth="0x10" edc:access="nnnnnnnnnnnnnnnn" edc:addr="0xA2C"/>
      <edc:SFRDef ltx:memberofperipheral="TCA0" edc:cname="PERBUF" edc:nzwidth="0x10" edc:access="nnnnnnnnnnnnnnnn" edc:addr="0xA36"/>
      <edc:SFRDef ltx:memberofperipheral="TCA0" edc:cname="CMP0BUF" edc:nzwidth="0x10" edc:access="nnnnnnnnnnnnnnnn" edc:addr="0xA38"/>
      <edc:SFRDef ltx:memberofperipheral="TCA0" edc:cname="CMP1BUF" edc:nzwidth="0x10" edc:access="nnnnnnnnnnnnnnnn" edc:addr="0xA3A"/>
      <edc:SFRDef ltx:memberofperipheral="TCA0" edc:cname="CMP2BUF" edc:nzwidth="0x10" edc:access="nnnnnnnnnnnnnnnn" edc:addr="0xA3C"/>
    </edc:RegisterMap>
    <edc:RegisterMap edc:id="TCA0/SPLIT">
      <edc:SFRDef ltx:memberofperipheral="TCA0" edc:cname="CTRLA" edc:nzwidth="0x8" edc:access="----nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xF" edc:addr="0xA00">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCA0">
            <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="Module Enable"/>
            <edc:SFRFieldDef edc:cname="CLKSEL" edc:nzwidth="0x3" edc:desc="Clock Selection">
              <edc:SFRFieldSemantic edc:cname="DIV1" edc:desc="System Clock" edc:when="(field &amp; 0x7) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="DIV2" edc:desc="System Clock / 2" edc:when="(field &amp; 0x7) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="DIV4" edc:desc="System Clock / 4" edc:when="(field &amp; 0x7) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="DIV8" edc:desc="System Clock / 8" edc:when="(field &amp; 0x7) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="DIV16" edc:desc="System Clock / 16" edc:when="(field &amp; 0x7) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="DIV64" edc:desc="System Clock / 64" edc:when="(field &amp; 0x7) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="DIV256" edc:desc="System Clock / 256" edc:when="(field &amp; 0x7) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="DIV1024" edc:desc="System Clock / 1024" edc:when="(field &amp; 0x7) == 0x07"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TCA0" edc:cname="CTRLB" edc:nzwidth="0x8" edc:access="-nnn-nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x77" edc:addr="0xA01">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCA0">
            <edc:SFRFieldDef edc:cname="LCMP0EN" edc:nzwidth="0x1" edc:desc="Low Compare 0 Enable"/>
            <edc:SFRFieldDef edc:cname="LCMP1EN" edc:nzwidth="0x1" edc:desc="Low Compare 1 Enable"/>
            <edc:SFRFieldDef edc:cname="LCMP2EN" edc:nzwidth="0x1" edc:desc="Low Compare 2 Enable"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="HCMP0EN" edc:nzwidth="0x1" edc:desc="High Compare 0 Enable"/>
            <edc:SFRFieldDef edc:cname="HCMP1EN" edc:nzwidth="0x1" edc:desc="High Compare 1 Enable"/>
            <edc:SFRFieldDef edc:cname="HCMP2EN" edc:nzwidth="0x1" edc:desc="High Compare 2 Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TCA0" edc:cname="CTRLC" edc:nzwidth="0x8" edc:access="-nnn-nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x77" edc:addr="0xA02">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCA0">
            <edc:SFRFieldDef edc:cname="LCMP0OV" edc:nzwidth="0x1" edc:desc="Low Compare 0 Output Value"/>
            <edc:SFRFieldDef edc:cname="LCMP1OV" edc:nzwidth="0x1" edc:desc="Low Compare 1 Output Value"/>
            <edc:SFRFieldDef edc:cname="LCMP2OV" edc:nzwidth="0x1" edc:desc="Low Compare 2 Output Value"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="HCMP0OV" edc:nzwidth="0x1" edc:desc="High Compare 0 Output Value"/>
            <edc:SFRFieldDef edc:cname="HCMP1OV" edc:nzwidth="0x1" edc:desc="High Compare 1 Output Value"/>
            <edc:SFRFieldDef edc:cname="HCMP2OV" edc:nzwidth="0x1" edc:desc="High Compare 2 Output Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TCA0" edc:cname="CTRLD" edc:nzwidth="0x8" edc:access="-------n" edc:por="00000000" edc:mclr="00000000" edc:impl="0x1" edc:addr="0xA03">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCA0">
            <edc:SFRFieldDef edc:cname="SPLITM" edc:nzwidth="0x1" edc:desc="Split Mode Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TCA0" edc:cname="CTRLECLR" edc:nzwidth="0x8" edc:access="----nn--" edc:por="00000000" edc:mclr="00000000" edc:impl="0xC" edc:addr="0xA04">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCA0">
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="CMD" edc:nzwidth="0x2" edc:desc="Command">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="No Command" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="UPDATE" edc:desc="Force Update" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="RESTART" edc:desc="Force Restart" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="RESET" edc:desc="Force Hard Reset" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TCA0" edc:cname="CTRLESET" edc:nzwidth="0x8" edc:access="----nn--" edc:por="00000000" edc:mclr="00000000" edc:impl="0xC" edc:addr="0xA05">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCA0">
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="CMD" edc:nzwidth="0x2" edc:desc="Command">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="No Command" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="UPDATE" edc:desc="Force Update" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="RESTART" edc:desc="Force Restart" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="RESET" edc:desc="Force Hard Reset" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TCA0" edc:cname="INTCTRL" edc:nzwidth="0x8" edc:access="-nnn--nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x73" edc:addr="0xA0A">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCA0">
            <edc:SFRFieldDef edc:cname="LUNF" edc:nzwidth="0x1" edc:desc="Low Underflow Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="HUNF" edc:nzwidth="0x1" edc:desc="High Underflow Interrupt Enable"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="LCMP0" edc:nzwidth="0x1" edc:desc="Low Compare 0 Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="LCMP1" edc:nzwidth="0x1" edc:desc="Low Compare 1 Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="LCMP2" edc:nzwidth="0x1" edc:desc="Low Compare 2 Interrupt Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TCA0" edc:cname="INTFLAGS" edc:nzwidth="0x8" edc:access="-nnn--nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x73" edc:addr="0xA0B">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCA0">
            <edc:SFRFieldDef edc:cname="LUNF" edc:nzwidth="0x1" edc:desc="Low Underflow Interrupt Flag"/>
            <edc:SFRFieldDef edc:cname="HUNF" edc:nzwidth="0x1" edc:desc="High Underflow Interrupt Flag"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="LCMP0" edc:nzwidth="0x1" edc:desc="Low Compare 2 Interrupt Flag"/>
            <edc:SFRFieldDef edc:cname="LCMP1" edc:nzwidth="0x1" edc:desc="Low Compare 1 Interrupt Flag"/>
            <edc:SFRFieldDef edc:cname="LCMP2" edc:nzwidth="0x1" edc:desc="Low Compare 0 Interrupt Flag"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TCA0" edc:cname="DBGCTRL" edc:nzwidth="0x8" edc:access="-------n" edc:por="00000000" edc:mclr="00000000" edc:impl="0x1" edc:addr="0xA0E">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCA0">
            <edc:SFRFieldDef edc:cname="DBGRUN" edc:nzwidth="0x1" edc:desc="Debug Run"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TCA0" edc:cname="LCNT" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:addr="0xA20"/>
      <edc:SFRDef ltx:memberofperipheral="TCA0" edc:cname="HCNT" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:addr="0xA21"/>
      <edc:SFRDef ltx:memberofperipheral="TCA0" edc:cname="LPER" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:addr="0xA26"/>
      <edc:SFRDef ltx:memberofperipheral="TCA0" edc:cname="HPER" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:addr="0xA27"/>
      <edc:SFRDef ltx:memberofperipheral="TCA0" edc:cname="LCMP0" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:addr="0xA28"/>
      <edc:SFRDef ltx:memberofperipheral="TCA0" edc:cname="HCMP0" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:addr="0xA29"/>
      <edc:SFRDef ltx:memberofperipheral="TCA0" edc:cname="LCMP1" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:addr="0xA2A"/>
      <edc:SFRDef ltx:memberofperipheral="TCA0" edc:cname="HCMP1" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:addr="0xA2B"/>
      <edc:SFRDef ltx:memberofperipheral="TCA0" edc:cname="LCMP2" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:addr="0xA2C"/>
      <edc:SFRDef ltx:memberofperipheral="TCA0" edc:cname="HCMP2" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:addr="0xA2D"/>
    </edc:RegisterMap>
  </edc:DataSpace>
  <edc:PinList edc:ppsflavor="atmel">
    <edc:Pin>
      <edc:VirtualPin edc:name="VDD"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PA6"/>
      <edc:VirtualPin edc:name="AIN6" edc:ppsfunction="AIN0" ltx:memberofperipheral="ADC0"/>
      <edc:VirtualPin edc:name="EVAPA6" edc:ppsfunction="EVAINCH0" ltx:memberofperipheral="EVSYS"/>
      <edc:VirtualPin edc:name="EVSPA6" edc:ppsfunction="EVSINCH0" ltx:memberofperipheral="EVSYS"/>
      <edc:VirtualPin edc:name="LUT0_OUT0" edc:ppsfunction="CCL" ltx:memberofperipheral="CCL"/>
      <edc:VirtualPin edc:name="MOSI" edc:ppsfunction="SPI0_ALT" ltx:memberofperipheral="SPI0"/>
      <edc:VirtualPin edc:name="N0" edc:ppsfunction="AC0" ltx:memberofperipheral="AC0"/>
      <edc:VirtualPin edc:name="OUT0" edc:ppsfunction="DAC0" ltx:memberofperipheral="DAC0"/>
      <edc:VirtualPin edc:name="PIN6" edc:ppsfunction="IOPORT" ltx:memberofperipheral="PORTA"/>
      <edc:VirtualPin edc:name="TXD" edc:ppsfunction="USART0" ltx:memberofperipheral="USART0"/>
      <edc:VirtualPin edc:name="WOAD0" edc:ppsfunction="TCD0" ltx:memberofperipheral="TCD0"/>
      <edc:VirtualPin edc:name="WOB0" edc:ppsfunction="TCB0" ltx:memberofperipheral="TCB0"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PA7"/>
      <edc:VirtualPin edc:name="AIN7" edc:ppsfunction="AIN0" ltx:memberofperipheral="ADC0"/>
      <edc:VirtualPin edc:name="EVAPA7" edc:ppsfunction="EVAINCH0" ltx:memberofperipheral="EVSYS"/>
      <edc:VirtualPin edc:name="EVSPA7" edc:ppsfunction="EVSINCH0" ltx:memberofperipheral="EVSYS"/>
      <edc:VirtualPin edc:name="LUT1_OUT0" edc:ppsfunction="CCL" ltx:memberofperipheral="CCL"/>
      <edc:VirtualPin edc:name="MISO" edc:ppsfunction="SPI0_ALT" ltx:memberofperipheral="SPI0"/>
      <edc:VirtualPin edc:name="P0" edc:ppsfunction="AC0" ltx:memberofperipheral="AC0"/>
      <edc:VirtualPin edc:name="PIN7" edc:ppsfunction="IOPORT" ltx:memberofperipheral="PORTA"/>
      <edc:VirtualPin edc:name="RXD" edc:ppsfunction="USART0" ltx:memberofperipheral="USART0"/>
      <edc:VirtualPin edc:name="WO0A0" edc:ppsfunction="TCA0_ALT" ltx:memberofperipheral="TCA0"/>
      <edc:VirtualPin edc:name="WOBD0" edc:ppsfunction="TCD0" ltx:memberofperipheral="TCD0"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PA1"/>
      <edc:VirtualPin edc:name="AIN1" edc:ppsfunction="AIN0" ltx:memberofperipheral="ADC0"/>
      <edc:VirtualPin edc:name="BREAK" edc:ppsfunction="OTHER" ltx:memberofperipheral="CPU"/>
      <edc:VirtualPin edc:name="EVAPA1" edc:ppsfunction="EVAINCH0" ltx:memberofperipheral="EVSYS"/>
      <edc:VirtualPin edc:name="EVSPA1" edc:ppsfunction="EVSINCH0" ltx:memberofperipheral="EVSYS"/>
      <edc:VirtualPin edc:name="LUT0_IN1" edc:ppsfunction="CCL" ltx:memberofperipheral="CCL"/>
      <edc:VirtualPin edc:name="MOSI" edc:ppsfunction="SPI0" ltx:memberofperipheral="SPI0"/>
      <edc:VirtualPin edc:name="PIN1" edc:ppsfunction="IOPORT" ltx:memberofperipheral="PORTA"/>
      <edc:VirtualPin edc:name="SDA" edc:ppsfunction="TWI0" ltx:memberofperipheral="TWI0"/>
      <edc:VirtualPin edc:name="TXD" edc:ppsfunction="USART0_ALT" ltx:memberofperipheral="USART0"/>
      <edc:VirtualPin edc:name="WO1A0" edc:ppsfunction="TCA0" ltx:memberofperipheral="TCA0"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PA2"/>
      <edc:VirtualPin edc:name="AIN2" edc:ppsfunction="AIN0" ltx:memberofperipheral="ADC0"/>
      <edc:VirtualPin edc:name="EVAPA2" edc:ppsfunction="EVAINCH0" ltx:memberofperipheral="EVSYS"/>
      <edc:VirtualPin edc:name="EVOUT0" edc:ppsfunction="EVSYS" ltx:memberofperipheral="EVSYS"/>
      <edc:VirtualPin edc:name="EVSPA2" edc:ppsfunction="EVSINCH0" ltx:memberofperipheral="EVSYS"/>
      <edc:VirtualPin edc:name="LUT0_IN2" edc:ppsfunction="CCL" ltx:memberofperipheral="CCL"/>
      <edc:VirtualPin edc:name="MISO" edc:ppsfunction="SPI0" ltx:memberofperipheral="SPI0"/>
      <edc:VirtualPin edc:name="PIN2" edc:ppsfunction="IOPORT" ltx:memberofperipheral="PORTA"/>
      <edc:VirtualPin edc:name="RXD" edc:ppsfunction="USART0_ALT" ltx:memberofperipheral="USART0"/>
      <edc:VirtualPin edc:name="SCL" edc:ppsfunction="TWI0" ltx:memberofperipheral="TWI0"/>
      <edc:VirtualPin edc:name="WO2A0" edc:ppsfunction="TCA0" ltx:memberofperipheral="TCA0"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PA0"/>
      <edc:VirtualPin edc:name="AIN0" edc:ppsfunction="AIN0" ltx:memberofperipheral="ADC0"/>
      <edc:VirtualPin edc:name="EVAPA0" edc:ppsfunction="EVAINCH0" ltx:memberofperipheral="EVSYS"/>
      <edc:VirtualPin edc:name="EVSPA0" edc:ppsfunction="EVSINCH0" ltx:memberofperipheral="EVSYS"/>
      <edc:VirtualPin edc:name="LUT0_IN0" edc:ppsfunction="CCL" ltx:memberofperipheral="CCL"/>
      <edc:VirtualPin edc:name="PIN0" edc:ppsfunction="IOPORT" ltx:memberofperipheral="PORTA"/>
      <edc:VirtualPin edc:name="RESET" edc:ppsfunction="OTHER" ltx:memberofperipheral="RSTCTRL"/>
      <edc:VirtualPin edc:name="SS" edc:ppsfunction="SPI0" ltx:memberofperipheral="SPI0"/>
      <edc:VirtualPin edc:name="UPDI" edc:ppsfunction="OTHER" ltx:memberofperipheral="SYSCFG"/>
      <edc:VirtualPin edc:name="XDIR" edc:ppsfunction="USART0" ltx:memberofperipheral="USART0"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PA3"/>
      <edc:VirtualPin edc:name="AIN3" edc:ppsfunction="AIN0" ltx:memberofperipheral="ADC0"/>
      <edc:VirtualPin edc:name="CLKI" edc:ppsfunction="CLKCTRL" ltx:memberofperipheral="CLKCTRL"/>
      <edc:VirtualPin edc:name="EVAPA3" edc:ppsfunction="EVAINCH0" ltx:memberofperipheral="EVSYS"/>
      <edc:VirtualPin edc:name="EVSPA3" edc:ppsfunction="EVSINCH0" ltx:memberofperipheral="EVSYS"/>
      <edc:VirtualPin edc:name="OUT" edc:ppsfunction="AC0" ltx:memberofperipheral="AC0"/>
      <edc:VirtualPin edc:name="PIN3" edc:ppsfunction="IOPORT" ltx:memberofperipheral="PORTA"/>
      <edc:VirtualPin edc:name="SCK" edc:ppsfunction="SPI0" ltx:memberofperipheral="SPI0"/>
      <edc:VirtualPin edc:name="WO0A0" edc:ppsfunction="TCA0" ltx:memberofperipheral="TCA0"/>
      <edc:VirtualPin edc:name="WO3A0" edc:ppsfunction="TCA0" ltx:memberofperipheral="TCA0"/>
      <edc:VirtualPin edc:name="XCK" edc:ppsfunction="USART0" ltx:memberofperipheral="USART0"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="GND"/>
    </edc:Pin>
  </edc:PinList>
</edc:PIC>
