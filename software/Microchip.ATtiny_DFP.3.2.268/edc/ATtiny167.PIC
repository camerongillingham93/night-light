<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<edc:PIC xmlns:atdf="http://crownking/atdf" xmlns:edc="http://crownking/edc" xmlns:ltx="http://crownking/ltx" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://crownking/edc edc/PIC.xsd" edc:name="ATtiny167" edc:arch="avr8" edc:procid="0x0000" atdf:architecture="AVR8" atdf:family="tinyAVR" edc:hasFreeze="false">
  <edc:Properties>
    <edc:Property edc:propkey="file.registers.are.odd.address.accessible" edc:propvalue="true"/>
  </edc:Properties>
  <edc:Power>
    <edc:VDD edc:minvoltage="1.8" edc:maxvoltage="5.5" edc:nominalvoltage="5.000"/>
  </edc:Power>
  <edc:Programming edc:haslvp2="true" edc:haschecksum="false">
    <edc:ProgrammingRowSize edc:progop="pgm" edc:nzsize="128"/>
    <edc:ProgrammingRowSize edc:progop="cfg" edc:nzsize="1"/>
    <edc:ProgrammingRowSize edc:progop="eedata" edc:nzsize="4"/>
  </edc:Programming>
  <edc:ArchDef edc:name="avr8" edc:desc="avr8">
    <edc:MemTraits>
      <edc:ProgramMemTraits edc:addrinc="0x1" edc:locsize="0x2" edc:wordimpl="0xFFFF" edc:wordinit="0xFFFF" edc:wordsafe="0xFFFF" edc:wordsize="0xFFFF"/>
      <edc:DataMemTraits edc:addrinc="0x1" edc:locsize="0x1" edc:wordimpl="0xFF" edc:wordinit="0xFF" edc:wordsafe="0xFF" edc:wordsize="0x1"/>
      <edc:EEDataMemTraits edc:magicoffset="0x810000"/>
    </edc:MemTraits>
  </edc:ArchDef>
  <edc:InstructionSet edc:instructionsetid="avr8">
    <edc:InstructionSet edc:instructionsetid="avr8base"/>
    <edc:InstructionSet edc:instructionsetid="avr8brk"/>
    <edc:InstructionSet edc:instructionsetid="avr8movw"/>
    <edc:InstructionSet edc:instructionsetid="avr8lpm"/>
    <edc:InstructionSet edc:instructionsetid="avr8lpmx"/>
    <edc:InstructionSet edc:instructionsetid="avr8mega"/>
    <edc:InstructionSet edc:instructionsetid="avr8sram"/>
    <edc:InstructionSet edc:instructionsetid="avr8spm"/>
  </edc:InstructionSet>
  <edc:InterruptList>
    <edc:Interrupt edc:irq="0" edc:cname="RESET" edc:desc="External Reset, Power-on Reset and Watchdog Reset"/>
    <edc:Interrupt edc:irq="1" edc:cname="INT0" edc:desc="External Interrupt Request 0"/>
    <edc:Interrupt edc:irq="2" edc:cname="INT1" edc:desc="External Interrupt Request 1"/>
    <edc:Interrupt edc:irq="3" edc:cname="PCINT0" edc:desc="Pin Change Interrupt Request 0"/>
    <edc:Interrupt edc:irq="4" edc:cname="PCINT1" edc:desc="Pin Change Interrupt Request 1"/>
    <edc:Interrupt edc:irq="5" edc:cname="WDT" edc:desc="Watchdog Time-Out Interrupt"/>
    <edc:Interrupt edc:irq="6" edc:cname="TIMER1_CAPT" edc:desc="Timer/Counter1 Capture Event"/>
    <edc:Interrupt edc:irq="7" edc:cname="TIMER1_COMPA" edc:desc="Timer/Counter1 Compare Match 1A"/>
    <edc:Interrupt edc:irq="8" edc:cname="TIMER1_COMPB" edc:desc="Timer/Counter1 Compare Match 1B"/>
    <edc:Interrupt edc:irq="9" edc:cname="TIMER1_OVF" edc:desc="Timer/Counter1 Overflow"/>
    <edc:Interrupt edc:irq="10" edc:cname="TIMER0_COMPA" edc:desc="Timer/Counter0 Compare Match 0A"/>
    <edc:Interrupt edc:irq="11" edc:cname="TIMER0_OVF" edc:desc="Timer/Counter0 Overflow"/>
    <edc:Interrupt edc:irq="12" edc:cname="LIN_TC" edc:desc="LIN Transfer Complete"/>
    <edc:Interrupt edc:irq="13" edc:cname="LIN_ERR" edc:desc="LIN Error"/>
    <edc:Interrupt edc:irq="14" edc:cname="SPI_STC" edc:desc="SPI Serial Transfer Complete"/>
    <edc:Interrupt edc:irq="15" edc:cname="ADC" edc:desc="ADC Conversion Complete"/>
    <edc:Interrupt edc:irq="16" edc:cname="EE_RDY" edc:desc="EEPROM Ready"/>
    <edc:Interrupt edc:irq="17" edc:cname="ANA_COMP" edc:desc="Analog Comparator"/>
    <edc:Interrupt edc:irq="18" edc:cname="USI_START" edc:desc="USI Start Condition Detection"/>
    <edc:Interrupt edc:irq="19" edc:cname="USI_OVF" edc:desc="USI Counter Overflow"/>
  </edc:InterruptList>
  <edc:PeripheralList>
    <edc:Peripheral edc:cname="PORTA" edc:desc="I/O Port"/>
    <edc:Peripheral edc:cname="PORTB" edc:desc="I/O Port"/>
    <edc:Peripheral edc:cname="LINUART" edc:desc="Local Interconnect Network"/>
    <edc:Peripheral edc:cname="USI" edc:desc="Universal Serial Interface"/>
    <edc:Peripheral edc:cname="TC0" edc:desc="Timer/Counter, 8-bit Async"/>
    <edc:Peripheral edc:cname="TC1" edc:desc="Timer/Counter, 16-bit"/>
    <edc:Peripheral edc:cname="WDT" edc:desc="Watchdog Timer"/>
    <edc:Peripheral edc:cname="EEPROM" edc:desc="EEPROM"/>
    <edc:Peripheral edc:cname="SPI" edc:desc="Serial Peripheral Interface"/>
    <edc:Peripheral edc:cname="ADC" edc:desc="Analog-to-Digital Converter"/>
    <edc:Peripheral edc:cname="CURRENT_SOURCE" edc:desc="Current Source"/>
    <edc:Peripheral edc:cname="AC" edc:desc="Analog Comparator"/>
    <edc:Peripheral edc:cname="EXINT" edc:desc="External Interrupts"/>
    <edc:Peripheral edc:cname="BOOT_LOAD" edc:desc="Bootloader"/>
    <edc:Peripheral edc:cname="CPU" edc:desc="CPU Registers"/>
    <edc:Peripheral edc:cname="FUSE" edc:desc="Fuses"/>
    <edc:Peripheral edc:cname="LOCKBIT" edc:desc="Lockbits"/>
  </edc:PeripheralList>
  <edc:ProgramSpace>
    <edc:CodeSector edc:regionid="IFLASH" edc:beginaddr="0x0" edc:endaddr="0x2000" atdf:pagesize="0x80" edc:rw="rw"/>
  </edc:ProgramSpace>
  <edc:DataSpace edc:magicoffset="0x800000">
    <edc:RegardlessOfMode>
      <edc:NMMRPlace edc:regionid="corenmmrs">
        <edc:SFRDef edc:nzwidth="0x10" edc:cname="PC" edc:impl="0xFFFF" edc:access="nnnnnnnnnnnnnnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:desc="Program Counter" edc:nmmrid="60"/>
      </edc:NMMRPlace>
      <edc:SFRDataSector edc:regionid="REGISTERS" edc:beginaddr="0x0" edc:endaddr="0x20">
        <edc:SFRDef edc:nzwidth="0x8" edc:cname="R0" edc:impl="0xFF" edc:access="nnnnnnnn" edc:por="xxxxxxxx" edc:mclr="xxxxxxxx" edc:desc="General-Purpose Register" edc:_addr="0x0"/>
        <edc:SFRDef edc:nzwidth="0x8" edc:cname="R1" edc:impl="0xFF" edc:access="nnnnnnnn" edc:por="xxxxxxxx" edc:mclr="xxxxxxxx" edc:desc="General-Purpose Register" edc:_addr="0x1"/>
        <edc:SFRDef edc:nzwidth="0x8" edc:cname="R2" edc:impl="0xFF" edc:access="nnnnnnnn" edc:por="xxxxxxxx" edc:mclr="xxxxxxxx" edc:desc="General-Purpose Register" edc:_addr="0x2"/>
        <edc:SFRDef edc:nzwidth="0x8" edc:cname="R3" edc:impl="0xFF" edc:access="nnnnnnnn" edc:por="xxxxxxxx" edc:mclr="xxxxxxxx" edc:desc="General-Purpose Register" edc:_addr="0x3"/>
        <edc:SFRDef edc:nzwidth="0x8" edc:cname="R4" edc:impl="0xFF" edc:access="nnnnnnnn" edc:por="xxxxxxxx" edc:mclr="xxxxxxxx" edc:desc="General-Purpose Register" edc:_addr="0x4"/>
        <edc:SFRDef edc:nzwidth="0x8" edc:cname="R5" edc:impl="0xFF" edc:access="nnnnnnnn" edc:por="xxxxxxxx" edc:mclr="xxxxxxxx" edc:desc="General-Purpose Register" edc:_addr="0x5"/>
        <edc:SFRDef edc:nzwidth="0x8" edc:cname="R6" edc:impl="0xFF" edc:access="nnnnnnnn" edc:por="xxxxxxxx" edc:mclr="xxxxxxxx" edc:desc="General-Purpose Register" edc:_addr="0x6"/>
        <edc:SFRDef edc:nzwidth="0x8" edc:cname="R7" edc:impl="0xFF" edc:access="nnnnnnnn" edc:por="xxxxxxxx" edc:mclr="xxxxxxxx" edc:desc="General-Purpose Register" edc:_addr="0x7"/>
        <edc:SFRDef edc:nzwidth="0x8" edc:cname="R8" edc:impl="0xFF" edc:access="nnnnnnnn" edc:por="xxxxxxxx" edc:mclr="xxxxxxxx" edc:desc="General-Purpose Register" edc:_addr="0x8"/>
        <edc:SFRDef edc:nzwidth="0x8" edc:cname="R9" edc:impl="0xFF" edc:access="nnnnnnnn" edc:por="xxxxxxxx" edc:mclr="xxxxxxxx" edc:desc="General-Purpose Register" edc:_addr="0x9"/>
        <edc:SFRDef edc:nzwidth="0x8" edc:cname="R10" edc:impl="0xFF" edc:access="nnnnnnnn" edc:por="xxxxxxxx" edc:mclr="xxxxxxxx" edc:desc="General-Purpose Register" edc:_addr="0xA"/>
        <edc:SFRDef edc:nzwidth="0x8" edc:cname="R11" edc:impl="0xFF" edc:access="nnnnnnnn" edc:por="xxxxxxxx" edc:mclr="xxxxxxxx" edc:desc="General-Purpose Register" edc:_addr="0xB"/>
        <edc:SFRDef edc:nzwidth="0x8" edc:cname="R12" edc:impl="0xFF" edc:access="nnnnnnnn" edc:por="xxxxxxxx" edc:mclr="xxxxxxxx" edc:desc="General-Purpose Register" edc:_addr="0xC"/>
        <edc:SFRDef edc:nzwidth="0x8" edc:cname="R13" edc:impl="0xFF" edc:access="nnnnnnnn" edc:por="xxxxxxxx" edc:mclr="xxxxxxxx" edc:desc="General-Purpose Register" edc:_addr="0xD"/>
        <edc:SFRDef edc:nzwidth="0x8" edc:cname="R14" edc:impl="0xFF" edc:access="nnnnnnnn" edc:por="xxxxxxxx" edc:mclr="xxxxxxxx" edc:desc="General-Purpose Register" edc:_addr="0xE"/>
        <edc:SFRDef edc:nzwidth="0x8" edc:cname="R15" edc:impl="0xFF" edc:access="nnnnnnnn" edc:por="xxxxxxxx" edc:mclr="xxxxxxxx" edc:desc="General-Purpose Register" edc:_addr="0xF"/>
        <edc:SFRDef edc:nzwidth="0x8" edc:cname="R16" edc:impl="0xFF" edc:access="nnnnnnnn" edc:por="xxxxxxxx" edc:mclr="xxxxxxxx" edc:desc="General-Purpose Register" edc:_addr="0x10"/>
        <edc:SFRDef edc:nzwidth="0x8" edc:cname="R17" edc:impl="0xFF" edc:access="nnnnnnnn" edc:por="xxxxxxxx" edc:mclr="xxxxxxxx" edc:desc="General-Purpose Register" edc:_addr="0x11"/>
        <edc:SFRDef edc:nzwidth="0x8" edc:cname="R18" edc:impl="0xFF" edc:access="nnnnnnnn" edc:por="xxxxxxxx" edc:mclr="xxxxxxxx" edc:desc="General-Purpose Register" edc:_addr="0x12"/>
        <edc:SFRDef edc:nzwidth="0x8" edc:cname="R19" edc:impl="0xFF" edc:access="nnnnnnnn" edc:por="xxxxxxxx" edc:mclr="xxxxxxxx" edc:desc="General-Purpose Register" edc:_addr="0x13"/>
        <edc:SFRDef edc:nzwidth="0x8" edc:cname="R20" edc:impl="0xFF" edc:access="nnnnnnnn" edc:por="xxxxxxxx" edc:mclr="xxxxxxxx" edc:desc="General-Purpose Register" edc:_addr="0x14"/>
        <edc:SFRDef edc:nzwidth="0x8" edc:cname="R21" edc:impl="0xFF" edc:access="nnnnnnnn" edc:por="xxxxxxxx" edc:mclr="xxxxxxxx" edc:desc="General-Purpose Register" edc:_addr="0x15"/>
        <edc:SFRDef edc:nzwidth="0x8" edc:cname="R22" edc:impl="0xFF" edc:access="nnnnnnnn" edc:por="xxxxxxxx" edc:mclr="xxxxxxxx" edc:desc="General-Purpose Register" edc:_addr="0x16"/>
        <edc:SFRDef edc:nzwidth="0x8" edc:cname="R23" edc:impl="0xFF" edc:access="nnnnnnnn" edc:por="xxxxxxxx" edc:mclr="xxxxxxxx" edc:desc="General-Purpose Register" edc:_addr="0x17"/>
        <edc:SFRDef edc:nzwidth="0x8" edc:cname="R24" edc:impl="0xFF" edc:access="nnnnnnnn" edc:por="xxxxxxxx" edc:mclr="xxxxxxxx" edc:desc="General-Purpose Register" edc:_addr="0x18"/>
        <edc:SFRDef edc:nzwidth="0x8" edc:cname="R25" edc:impl="0xFF" edc:access="nnnnnnnn" edc:por="xxxxxxxx" edc:mclr="xxxxxxxx" edc:desc="General-Purpose Register" edc:_addr="0x19"/>
        <edc:SFRDef edc:nzwidth="0x8" edc:cname="R26" edc:impl="0xFF" edc:access="nnnnnnnn" edc:por="xxxxxxxx" edc:mclr="xxxxxxxx" edc:desc="General-Purpose Register" edc:_addr="0x1A"/>
        <edc:SFRDef edc:nzwidth="0x8" edc:cname="R27" edc:impl="0xFF" edc:access="nnnnnnnn" edc:por="xxxxxxxx" edc:mclr="xxxxxxxx" edc:desc="General-Purpose Register" edc:_addr="0x1B"/>
        <edc:SFRDef edc:nzwidth="0x8" edc:cname="R28" edc:impl="0xFF" edc:access="nnnnnnnn" edc:por="xxxxxxxx" edc:mclr="xxxxxxxx" edc:desc="General-Purpose Register" edc:_addr="0x1C"/>
        <edc:SFRDef edc:nzwidth="0x8" edc:cname="R29" edc:impl="0xFF" edc:access="nnnnnnnn" edc:por="xxxxxxxx" edc:mclr="xxxxxxxx" edc:desc="General-Purpose Register" edc:_addr="0x1D"/>
        <edc:SFRDef edc:nzwidth="0x8" edc:cname="R30" edc:impl="0xFF" edc:access="nnnnnnnn" edc:por="xxxxxxxx" edc:mclr="xxxxxxxx" edc:desc="General-Purpose Register" edc:_addr="0x1E"/>
        <edc:SFRDef edc:nzwidth="0x8" edc:cname="R31" edc:impl="0xFF" edc:access="nnnnnnnn" edc:por="xxxxxxxx" edc:mclr="xxxxxxxx" edc:desc="General-Purpose Register" edc:_addr="0x1F"/>
      </edc:SFRDataSector>
      <edc:SFRDataSector edc:regionid="MAPPED_IO" edc:beginaddr="0x20" edc:endaddr="0xD3">
        <edc:SFRDef ltx:memberofperipheral="PORTA" edc:cname="PINA" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x20"/>
        <edc:SFRDef ltx:memberofperipheral="PORTA" edc:cname="DDRA" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x21"/>
        <edc:SFRDef ltx:memberofperipheral="PORTA" edc:cname="PORTA" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x22"/>
        <edc:SFRDef ltx:memberofperipheral="PORTB" edc:cname="PINB" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x23"/>
        <edc:SFRDef ltx:memberofperipheral="PORTB" edc:cname="DDRB" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x24"/>
        <edc:SFRDef ltx:memberofperipheral="PORTB" edc:cname="PORTB" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x25"/>
        <edc:AdjustPoint edc:offset="0xC" edc:_addr="0x26"/>
        <edc:SFRDef ltx:memberofperipheral="CPU" edc:cname="PORTCR" edc:nzwidth="0x8" edc:access="--nn--nn" edc:impl="0x33" edc:_addr="0x32">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="CPU">
              <edc:SFRFieldDef edc:cname="PUDA" edc:nzwidth="0x1"/>
              <edc:SFRFieldDef edc:cname="PUDB" edc:nzwidth="0x1"/>
              <edc:AdjustPoint edc:offset="0x2"/>
              <edc:SFRFieldDef edc:cname="BBMA" edc:nzwidth="0x1"/>
              <edc:SFRFieldDef edc:cname="BBMB" edc:nzwidth="0x1"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:AdjustPoint edc:offset="0x2" edc:_addr="0x33"/>
        <edc:SFRDef ltx:memberofperipheral="TC0" edc:cname="TIFR0" edc:nzwidth="0x8" edc:access="------nn" edc:impl="0x3" edc:_addr="0x35">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC0">
              <edc:SFRFieldDef edc:cname="TOV0" edc:nzwidth="0x1" edc:desc="Timer/Counter0 Overflow Flag"/>
              <edc:SFRFieldDef edc:cname="OCF0A" edc:nzwidth="0x1" edc:desc="Output Compare Flag 0A"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="TC1" edc:cname="TIFR1" edc:nzwidth="0x8" edc:access="--n--nnn" edc:impl="0x27" edc:_addr="0x36">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC1">
              <edc:SFRFieldDef edc:cname="TOV1" edc:nzwidth="0x1" edc:desc="Timer/Counter1 Overflow Flag"/>
              <edc:SFRFieldDef edc:cname="OCF1A" edc:nzwidth="0x1" edc:desc="Timer/Counter1 Output Compare A Match Flag"/>
              <edc:SFRFieldDef edc:cname="OCF1B" edc:nzwidth="0x1" edc:desc="Timer/Counter1 Output Compare B Match Flag"/>
              <edc:AdjustPoint edc:offset="0x2"/>
              <edc:SFRFieldDef edc:cname="ICF1" edc:nzwidth="0x1" edc:desc="Timer/Counter1 Input Capture Flag"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:AdjustPoint edc:offset="0x4" edc:_addr="0x37"/>
        <edc:SFRDef ltx:memberofperipheral="EXINT" edc:cname="PCIFR" edc:nzwidth="0x8" edc:access="------nn" edc:impl="0x3" edc:_addr="0x3B">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EXINT">
              <edc:SFRFieldDef edc:cname="PCIF" edc:nzwidth="0x2" edc:desc="Pin Change Interrupt Flags"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="EXINT" edc:cname="EIFR" edc:nzwidth="0x8" edc:access="------nn" edc:impl="0x3" edc:_addr="0x3C">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EXINT">
              <edc:SFRFieldDef edc:cname="INTF" edc:nzwidth="0x2" edc:desc="External Interrupt Flags"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="EXINT" edc:cname="EIMSK" edc:nzwidth="0x8" edc:access="------nn" edc:impl="0x3" edc:_addr="0x3D">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EXINT">
              <edc:SFRFieldDef edc:cname="INT" edc:nzwidth="0x2" edc:desc="External Interrupt Request 1 Enable"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="CPU" edc:cname="GPIOR0" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x3E"/>
        <edc:SFRDef ltx:memberofperipheral="EEPROM" edc:cname="EECR" edc:nzwidth="0x8" edc:access="--nnnnnn" edc:impl="0x3F" edc:_addr="0x3F">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EEPROM">
              <edc:SFRFieldDef edc:cname="EERE" edc:nzwidth="0x1" edc:desc="EEPROM Read Enable"/>
              <edc:SFRFieldDef edc:cname="EEPE" edc:nzwidth="0x1" edc:desc="EEPROM Write Enable"/>
              <edc:SFRFieldDef edc:cname="EEMPE" edc:nzwidth="0x1" edc:desc="EEPROM Master Write Enable"/>
              <edc:SFRFieldDef edc:cname="EERIE" edc:nzwidth="0x1" edc:desc="EEPROM Ready Interrupt Enable"/>
              <edc:SFRFieldDef edc:cname="EEPM" edc:nzwidth="0x2" edc:desc="EEPROM Programming Mode Bits">
                <edc:SFRFieldSemantic edc:cname="ERASE_AND_WRITE_IN_ONE_OPERATION" edc:desc="Erase and Write in one operation" edc:when="(field &amp; 0x3) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="ERASE_ONLY" edc:desc="Erase Only" edc:when="(field &amp; 0x3) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="WRITE_ONLY" edc:desc="Write Only" edc:when="(field &amp; 0x3) == 0x02"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="EEPROM" edc:cname="EEDR" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x40"/>
        <edc:SFRDef ltx:memberofperipheral="EEPROM" edc:cname="EEAR" edc:nzwidth="0x10" edc:access="nnnnnnnnnnnnnnnn" edc:_addr="0x41"/>
        <edc:SFRDef ltx:memberofperipheral="TC0" edc:cname="GTCCR" edc:nzwidth="0x8" edc:access="n-----nn" edc:impl="0x83" edc:_addr="0x43">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC0">
              <edc:SFRFieldDef edc:cname="PSR1" edc:nzwidth="0x1" edc:desc="Prescaler Reset Synchronous 16-bit Timer/Counter1"/>
              <edc:SFRFieldDef edc:cname="PSR0" edc:nzwidth="0x1" edc:desc="Prescaler Reset Asynchronous 8-bit Timer/Counter0"/>
              <edc:AdjustPoint edc:offset="0x5"/>
              <edc:SFRFieldDef edc:cname="TSM" edc:nzwidth="0x1" edc:desc="Timer/Counter Synchronization Mode"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:AdjustPoint edc:offset="0x1" edc:_addr="0x44"/>
        <edc:SFRDef ltx:memberofperipheral="TC0" edc:cname="TCCR0A" edc:nzwidth="0x8" edc:access="nn----nn" edc:impl="0xC3" edc:_addr="0x45">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC0">
              <edc:SFRFieldDef edc:cname="WGM0" edc:nzwidth="0x2" edc:desc="Waveform Generation Mode bits"/>
              <edc:AdjustPoint edc:offset="0x4"/>
              <edc:SFRFieldDef edc:cname="COM0A" edc:nzwidth="0x2" edc:desc="Compare Output Mode bits"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="TC0" edc:cname="TCCR0B" edc:nzwidth="0x8" edc:access="n----nnn" edc:impl="0x87" edc:_addr="0x46">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC0">
              <edc:SFRFieldDef edc:cname="CS0" edc:nzwidth="0x3" edc:desc="Clock Select bits">
                <edc:SFRFieldSemantic edc:cname="NO_CLOCK_SOURCE_STOPPED" edc:desc="No Clock Source (Stopped)" edc:when="(field &amp; 0x7) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="RUNNING_NO_PRESCALING" edc:desc="Running, No Prescaling" edc:when="(field &amp; 0x7) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="RUNNING_CLK_8" edc:desc="Running, CLK/8" edc:when="(field &amp; 0x7) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="RUNNING_CLK_32" edc:desc="Running, CLK/32" edc:when="(field &amp; 0x7) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="RUNNING_CLK_64" edc:desc="Running, CLK/64" edc:when="(field &amp; 0x7) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="RUNNING_CLK_128" edc:desc="Running, CLK/128" edc:when="(field &amp; 0x7) == 0x05"/>
                <edc:SFRFieldSemantic edc:cname="RUNNING_CLK_256" edc:desc="Running, CLK/256" edc:when="(field &amp; 0x7) == 0x06"/>
                <edc:SFRFieldSemantic edc:cname="RUNNING_CLK_1024" edc:desc="Running, CLK/1024" edc:when="(field &amp; 0x7) == 0x07"/>
              </edc:SFRFieldDef>
              <edc:AdjustPoint edc:offset="0x4"/>
              <edc:SFRFieldDef edc:cname="FOC0A" edc:nzwidth="0x1" edc:desc="Force Output Compare A"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="TC0" edc:cname="TCNT0" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x47"/>
        <edc:SFRDef ltx:memberofperipheral="TC0" edc:cname="OCR0A" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x48"/>
        <edc:AdjustPoint edc:offset="0x1" edc:_addr="0x49"/>
        <edc:SFRDef ltx:memberofperipheral="CPU" edc:cname="GPIOR1" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x4A"/>
        <edc:SFRDef ltx:memberofperipheral="CPU" edc:cname="GPIOR2" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x4B"/>
        <edc:SFRDef ltx:memberofperipheral="SPI" edc:cname="SPCR" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x4C">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPI">
              <edc:SFRFieldDef edc:cname="SPR" edc:nzwidth="0x2" edc:desc="SPI Clock Rate Selects">
                <edc:SFRFieldSemantic edc:cname="FOSC_4" edc:desc="fosc/4" edc:when="(field &amp; 0x3) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="FOSC_16" edc:desc="fosc/16" edc:when="(field &amp; 0x3) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="FOSC_64" edc:desc="fosc/64" edc:when="(field &amp; 0x3) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="FOSC_128" edc:desc="fosc/128" edc:when="(field &amp; 0x3) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="FOSC_2" edc:desc="fosc/2" edc:when="(field &amp; 0x3) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="FOSC_8" edc:desc="fosc/8" edc:when="(field &amp; 0x3) == 0x05"/>
                <edc:SFRFieldSemantic edc:cname="FOSC_32" edc:desc="fosc/32" edc:when="(field &amp; 0x3) == 0x06"/>
                <edc:SFRFieldSemantic edc:cname="FOSC_64" edc:desc="fosc/64" edc:when="(field &amp; 0x3) == 0x07"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="CPHA" edc:nzwidth="0x1" edc:desc="Clock Phase"/>
              <edc:SFRFieldDef edc:cname="CPOL" edc:nzwidth="0x1" edc:desc="Clock polarity"/>
              <edc:SFRFieldDef edc:cname="MSTR" edc:nzwidth="0x1" edc:desc="Master/Slave Select"/>
              <edc:SFRFieldDef edc:cname="DORD" edc:nzwidth="0x1" edc:desc="Data Order"/>
              <edc:SFRFieldDef edc:cname="SPE" edc:nzwidth="0x1" edc:desc="SPI Enable"/>
              <edc:SFRFieldDef edc:cname="SPIE" edc:nzwidth="0x1" edc:desc="SPI Interrupt Enable"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="SPI" edc:cname="SPSR" edc:nzwidth="0x8" edc:access="nn-----n" edc:impl="0xC1" edc:_addr="0x4D">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPI">
              <edc:SFRFieldDef edc:cname="SPI2X" edc:nzwidth="0x1" edc:desc="Double SPI Speed Bit"/>
              <edc:AdjustPoint edc:offset="0x5"/>
              <edc:SFRFieldDef edc:cname="WCOL" edc:nzwidth="0x1" edc:desc="Write Collision Flag"/>
              <edc:SFRFieldDef edc:cname="SPIF" edc:nzwidth="0x1" edc:desc="SPI Interrupt Flag"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="SPI" edc:cname="SPDR" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x4E"/>
        <edc:AdjustPoint edc:offset="0x1" edc:_addr="0x4F"/>
        <edc:SFRDef ltx:memberofperipheral="AC" edc:cname="ACSR" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x50">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="AC">
              <edc:SFRFieldDef edc:cname="ACIS" edc:nzwidth="0x2" edc:desc="Analog Comparator Interrupt Mode Select bits">
                <edc:SFRFieldSemantic edc:cname="INTERRUPT_ON_TOGGLE" edc:desc="Interrupt on Toggle" edc:when="(field &amp; 0x3) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="RESERVED" edc:desc="Reserved" edc:when="(field &amp; 0x3) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="INTERRUPT_ON_FALLING_EDGE" edc:desc="Interrupt on Falling Edge" edc:when="(field &amp; 0x3) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="INTERRUPT_ON_RISING_EDGE" edc:desc="Interrupt on Rising Edge" edc:when="(field &amp; 0x3) == 0x03"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="ACIC" edc:nzwidth="0x1" edc:desc="Analog Comparator Input Capture Enable"/>
              <edc:SFRFieldDef edc:cname="ACIE" edc:nzwidth="0x1" edc:desc="Analog Comparator Interrupt Enable"/>
              <edc:SFRFieldDef edc:cname="ACI" edc:nzwidth="0x1" edc:desc="Analog Comparator Interrupt Flag"/>
              <edc:SFRFieldDef edc:cname="ACO" edc:nzwidth="0x1" edc:desc="Analog Compare Output"/>
              <edc:SFRFieldDef edc:cname="ACIRS" edc:nzwidth="0x1" edc:desc="Analog Comparator Internal Reference Select"/>
              <edc:SFRFieldDef edc:cname="ACD" edc:nzwidth="0x1" edc:desc="Analog Comparator Disable"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="CPU" edc:cname="DWDR" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x51"/>
        <edc:AdjustPoint edc:offset="0x1" edc:_addr="0x52"/>
        <edc:SFRDef ltx:memberofperipheral="CPU" edc:cname="SMCR" edc:nzwidth="0x8" edc:access="-----nnn" edc:impl="0x7" edc:_addr="0x53">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="CPU">
              <edc:SFRFieldDef edc:cname="SE" edc:nzwidth="0x1" edc:desc="Sleep Enable"/>
              <edc:SFRFieldDef edc:cname="SM" edc:nzwidth="0x2" edc:desc="Sleep Mode Select Bits">
                <edc:SFRFieldSemantic edc:cname="IDLE" edc:desc="Idle" edc:when="(field &amp; 0x3) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="ADC" edc:desc="ADC Noise Reduction (If Available)" edc:when="(field &amp; 0x3) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="PDOWN" edc:desc="Power-down" edc:when="(field &amp; 0x3) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="PSAVE" edc:desc="Power-save" edc:when="(field &amp; 0x3) == 0x03"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="CPU" edc:cname="MCUSR" edc:nzwidth="0x8" edc:access="----nnnn" edc:impl="0xF" edc:_addr="0x54">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="CPU">
              <edc:SFRFieldDef edc:cname="PORF" edc:nzwidth="0x1" edc:desc="Power-On Reset Flag"/>
              <edc:SFRFieldDef edc:cname="EXTRF" edc:nzwidth="0x1" edc:desc="External Reset Flag"/>
              <edc:SFRFieldDef edc:cname="BORF" edc:nzwidth="0x1" edc:desc="Brown-out Reset Flag"/>
              <edc:SFRFieldDef edc:cname="WDRF" edc:nzwidth="0x1" edc:desc="Watchdog Reset Flag"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="CPU" edc:cname="MCUCR" edc:nzwidth="0x8" edc:access="-nnn----" edc:impl="0x70" edc:_addr="0x55">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="CPU">
              <edc:AdjustPoint edc:offset="0x4"/>
              <edc:SFRFieldDef edc:cname="PUD" edc:nzwidth="0x1" edc:desc="Pull-up Disable"/>
              <edc:SFRFieldDef edc:cname="BODSE" edc:nzwidth="0x1" edc:desc="BOD Sleep Enable"/>
              <edc:SFRFieldDef edc:cname="BODS" edc:nzwidth="0x1" edc:desc="BOD Sleep"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:AdjustPoint edc:offset="0x1" edc:_addr="0x56"/>
        <edc:SFRDef ltx:memberofperipheral="BOOT_LOAD" edc:cname="SPMCSR" edc:nzwidth="0x8" edc:access="-nnnnnnn" edc:impl="0x7F" edc:_addr="0x57">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="BOOT_LOAD">
              <edc:SFRFieldDef edc:cname="SPMEN" edc:nzwidth="0x1" edc:desc="Store Program Memory Enable"/>
              <edc:SFRFieldDef edc:cname="PGERS" edc:nzwidth="0x1" edc:desc="Page Erase"/>
              <edc:SFRFieldDef edc:cname="PGWRT" edc:nzwidth="0x1" edc:desc="Page Write"/>
              <edc:SFRFieldDef edc:cname="RFLB" edc:nzwidth="0x1" edc:desc="Read Fuse and Lock Bits"/>
              <edc:SFRFieldDef edc:cname="CTPB" edc:nzwidth="0x1" edc:desc="Clear Temporary Page Buffer"/>
              <edc:SFRFieldDef edc:cname="SIGRD" edc:nzwidth="0x1" edc:desc="Signature Row Read"/>
              <edc:SFRFieldDef edc:cname="RWWSB" edc:nzwidth="0x1" edc:desc="Read While Write Section Busy"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:AdjustPoint edc:offset="0x5" edc:_addr="0x58"/>
        <edc:SFRDef ltx:memberofperipheral="CPU" edc:cname="SP" edc:nzwidth="0x10" edc:access="nnnnnnnnnnnnnnnn" edc:_addr="0x5D"/>
        <edc:SFRDef ltx:memberofperipheral="CPU" edc:cname="SREG" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x5F">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="CPU">
              <edc:SFRFieldDef edc:cname="C" edc:nzwidth="0x1" edc:desc="Carry Flag"/>
              <edc:SFRFieldDef edc:cname="Z" edc:nzwidth="0x1" edc:desc="Zero Flag"/>
              <edc:SFRFieldDef edc:cname="N" edc:nzwidth="0x1" edc:desc="Negative Flag"/>
              <edc:SFRFieldDef edc:cname="V" edc:nzwidth="0x1" edc:desc="Two's Complement Overflow Flag"/>
              <edc:SFRFieldDef edc:cname="S" edc:nzwidth="0x1" edc:desc="Sign Bit"/>
              <edc:SFRFieldDef edc:cname="H" edc:nzwidth="0x1" edc:desc="Half Carry Flag"/>
              <edc:SFRFieldDef edc:cname="T" edc:nzwidth="0x1" edc:desc="Bit Copy Storage"/>
              <edc:SFRFieldDef edc:cname="I" edc:nzwidth="0x1" edc:desc="Global Interrupt Enable"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="WDT" edc:cname="WDTCR" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x60">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="WDT">
              <edc:SFRFieldDef edc:cname="WDP" edc:nzwidth="0x6" edc:mask="0x27" edc:desc="Watchdog Timer Prescaler Bits">
                <edc:SFRFieldSemantic edc:cname="OSCILLATOR_CYCLES_2K" edc:desc="Oscillator Cycles 2K" edc:when="(field &amp; 0x27) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="OSCILLATOR_CYCLES_4K" edc:desc="Oscillator Cycles 4K" edc:when="(field &amp; 0x27) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="OSCILLATOR_CYCLES_8K" edc:desc="Oscillator Cycles 8K" edc:when="(field &amp; 0x27) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="OSCILLATOR_CYCLES_16K" edc:desc="Oscillator Cycles 16K" edc:when="(field &amp; 0x27) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="OSCILLATOR_CYCLES_32K" edc:desc="Oscillator Cycles 32K" edc:when="(field &amp; 0x27) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="OSCILLATOR_CYCLES_64K" edc:desc="Oscillator Cycles 64K" edc:when="(field &amp; 0x27) == 0x05"/>
                <edc:SFRFieldSemantic edc:cname="OSCILLATOR_CYCLES_128K" edc:desc="Oscillator Cycles 128K" edc:when="(field &amp; 0x27) == 0x06"/>
                <edc:SFRFieldSemantic edc:cname="OSCILLATOR_CYCLES_256K" edc:desc="Oscillator Cycles 256K" edc:when="(field &amp; 0x27) == 0x07"/>
                <edc:SFRFieldSemantic edc:cname="OSCILLATOR_CYCLES_512K" edc:desc="Oscillator Cycles 512K" edc:when="(field &amp; 0x27) == 0x08"/>
                <edc:SFRFieldSemantic edc:cname="OSCILLATOR_CYCLES_1024K" edc:desc="Oscillator Cycles 1024K" edc:when="(field &amp; 0x27) == 0x09"/>
              </edc:SFRFieldDef>
              <edc:AdjustPoint edc:offset="-3"/>
              <edc:SFRFieldDef edc:cname="WDE" edc:nzwidth="0x1" edc:desc="Watch Dog Enable"/>
              <edc:SFRFieldDef edc:cname="WDCE" edc:nzwidth="0x1" edc:desc="Watchdog Change Enable"/>
              <edc:AdjustPoint edc:offset="0x1"/>
              <edc:SFRFieldDef edc:cname="WDIE" edc:nzwidth="0x1" edc:desc="Watchdog Timeout Interrupt Enable"/>
              <edc:SFRFieldDef edc:cname="WDIF" edc:nzwidth="0x1" edc:desc="Watchdog Timeout Interrupt Flag"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="CPU" edc:cname="CLKPR" edc:nzwidth="0x8" edc:access="n---nnnn" edc:impl="0x8F" edc:_addr="0x61">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="CPU">
              <edc:SFRFieldDef edc:cname="CLKPS" edc:nzwidth="0x4" edc:desc="Clock Prescaler Select Bits">
                <edc:SFRFieldSemantic edc:cname="1" edc:desc="1" edc:when="(field &amp; 0xF) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="2" edc:desc="2" edc:when="(field &amp; 0xF) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="4" edc:desc="4" edc:when="(field &amp; 0xF) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="8" edc:desc="8" edc:when="(field &amp; 0xF) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="16" edc:desc="16" edc:when="(field &amp; 0xF) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="32" edc:desc="32" edc:when="(field &amp; 0xF) == 0x05"/>
                <edc:SFRFieldSemantic edc:cname="64" edc:desc="64" edc:when="(field &amp; 0xF) == 0x06"/>
                <edc:SFRFieldSemantic edc:cname="128" edc:desc="128" edc:when="(field &amp; 0xF) == 0x07"/>
                <edc:SFRFieldSemantic edc:cname="256" edc:desc="256" edc:when="(field &amp; 0xF) == 0x08"/>
              </edc:SFRFieldDef>
              <edc:AdjustPoint edc:offset="0x3"/>
              <edc:SFRFieldDef edc:cname="CLKPCE" edc:nzwidth="0x1" edc:desc="Clock Prescaler Change Enable"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="CPU" edc:cname="CLKCSR" edc:nzwidth="0x8" edc:access="n--nnnnn" edc:impl="0x9F" edc:_addr="0x62">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="CPU">
              <edc:SFRFieldDef edc:cname="CLKC" edc:nzwidth="0x4" edc:desc="Clock Control bits">
                <edc:SFRFieldSemantic edc:cname="NO_COMMAND" edc:desc="No Command" edc:when="(field &amp; 0xF) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="DISABLE_CLOCK_SOURCE" edc:desc="Disable Clock Source" edc:when="(field &amp; 0xF) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="ENABLE_CLOCK_SOURCE" edc:desc="Enable Clock Source" edc:when="(field &amp; 0xF) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="REQUEST_FOR_CLOCK_AVAILABILITY" edc:desc="Request for Clock Availability" edc:when="(field &amp; 0xF) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="CLOCK_SOURCE_SWITCH" edc:desc="Clock Source Switch" edc:when="(field &amp; 0xF) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="RECOVERY_SYSTEM_CLOCK_SOURCE_CODE" edc:desc="Recovery System Clock Source Code" edc:when="(field &amp; 0xF) == 0x05"/>
                <edc:SFRFieldSemantic edc:cname="ENABLE_WATCHDOG_IN_AUTOMATIC_RELOAD_MODE" edc:desc="Enable Watchdog in Automatic Reload Mode" edc:when="(field &amp; 0xF) == 0x06"/>
                <edc:SFRFieldSemantic edc:cname="CKOUT_COMMAND" edc:desc="CKOUT Command" edc:when="(field &amp; 0xF) == 0x07"/>
                <edc:SFRFieldSemantic edc:cname="FROM_0X08_UP_TO_0X0F_NO_COMMAND" edc:desc="From 0x08 up to 0x0F: No command" edc:when="(field &amp; 0xF) == 0x08"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="CLKRDY" edc:nzwidth="0x1" edc:desc="Clock Ready Flag"/>
              <edc:AdjustPoint edc:offset="0x2"/>
              <edc:SFRFieldDef edc:cname="CLKCCE" edc:nzwidth="0x1" edc:desc="Clock Control Change Enable"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="CPU" edc:cname="CLKSELR" edc:nzwidth="0x8" edc:access="-nnnnnnn" edc:impl="0x7F" edc:_addr="0x63">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="CPU">
              <edc:SFRFieldDef edc:cname="CSEL" edc:nzwidth="0x4" edc:desc="Clock Source Select bit 3 - CKSEL3 fuse substitution"/>
              <edc:SFRFieldDef edc:cname="CSUT" edc:nzwidth="0x2" edc:desc="Clock Start-up Time bit 1 - SUT1 fuse substitution"/>
              <edc:SFRFieldDef edc:cname="COUT" edc:nzwidth="0x1" edc:desc="Clock Out - CKOUT fuse substitution"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="CPU" edc:cname="PRR" edc:nzwidth="0x8" edc:access="--nnnnnn" edc:impl="0x3F" edc:_addr="0x64">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="CPU">
              <edc:SFRFieldDef edc:cname="PRADC" edc:nzwidth="0x1" edc:desc="Power Reduction ADC"/>
              <edc:SFRFieldDef edc:cname="PRUSI" edc:nzwidth="0x1" edc:desc="Power Reduction USI"/>
              <edc:SFRFieldDef edc:cname="PRTIM0" edc:nzwidth="0x1" edc:desc="Power Reduction Timer/Counter0"/>
              <edc:SFRFieldDef edc:cname="PRTIM1" edc:nzwidth="0x1" edc:desc="Power Reduction Timer/Counter1"/>
              <edc:SFRFieldDef edc:cname="PRSPI" edc:nzwidth="0x1" edc:desc="Power Reduction SPI"/>
              <edc:SFRFieldDef edc:cname="PRLIN" edc:nzwidth="0x1" edc:desc="Power Reduction LINUART"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:AdjustPoint edc:offset="0x1" edc:_addr="0x65"/>
        <edc:SFRDef ltx:memberofperipheral="CPU" edc:cname="OSCCAL" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x66">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="CPU">
              <edc:SFRFieldDef edc:cname="OSCCAL" edc:nzwidth="0x8" edc:desc="Oscillator Calibration "/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:AdjustPoint edc:offset="0x1" edc:_addr="0x67"/>
        <edc:SFRDef ltx:memberofperipheral="EXINT" edc:cname="PCICR" edc:nzwidth="0x8" edc:access="------nn" edc:impl="0x3" edc:_addr="0x68">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EXINT">
              <edc:SFRFieldDef edc:cname="PCIE" edc:nzwidth="0x2" edc:desc="Pin Change Interrupt Enable  on any PCINT14..8 pin"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="EXINT" edc:cname="EICRA" edc:nzwidth="0x8" edc:access="----nnnn" edc:impl="0xF" edc:_addr="0x69">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EXINT">
              <edc:SFRFieldDef edc:cname="ISC0" edc:nzwidth="0x2" edc:desc="External Interrupt Sense Control 0 Bits">
                <edc:SFRFieldSemantic edc:cname="LOW_LEVEL_OF_INTX" edc:desc="Low Level of INTX" edc:when="(field &amp; 0x3) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="ANY_LOGICAL_CHANGE_IN_INTX" edc:desc="Any Logical Change in INTX" edc:when="(field &amp; 0x3) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="FALLING_EDGE_OF_INTX" edc:desc="Falling Edge of INTX" edc:when="(field &amp; 0x3) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="RISING_EDGE_OF_INTX" edc:desc="Rising Edge of INTX" edc:when="(field &amp; 0x3) == 0x03"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="ISC1" edc:nzwidth="0x2" edc:desc="External Interrupt Sense Control 1 Bits">
                <edc:SFRFieldSemantic edc:cname="LOW_LEVEL_OF_INTX" edc:desc="Low Level of INTX" edc:when="(field &amp; 0x3) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="ANY_LOGICAL_CHANGE_IN_INTX" edc:desc="Any Logical Change in INTX" edc:when="(field &amp; 0x3) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="FALLING_EDGE_OF_INTX" edc:desc="Falling Edge of INTX" edc:when="(field &amp; 0x3) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="RISING_EDGE_OF_INTX" edc:desc="Rising Edge of INTX" edc:when="(field &amp; 0x3) == 0x03"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:AdjustPoint edc:offset="0x1" edc:_addr="0x6A"/>
        <edc:SFRDef ltx:memberofperipheral="EXINT" edc:cname="PCMSK0" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x6B">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EXINT">
              <edc:SFRFieldDef edc:cname="PCINT" edc:nzwidth="0x8" edc:desc="Pin Change Enable Masks"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="EXINT" edc:cname="PCMSK1" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x6C">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EXINT">
              <edc:SFRFieldDef edc:cname="PCINT" edc:nzwidth="0x8" edc:desc="Pin Change Enable Masks"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:AdjustPoint edc:offset="0x1" edc:_addr="0x6D"/>
        <edc:SFRDef ltx:memberofperipheral="TC0" edc:cname="TIMSK0" edc:nzwidth="0x8" edc:access="------nn" edc:impl="0x3" edc:_addr="0x6E">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC0">
              <edc:SFRFieldDef edc:cname="TOIE0" edc:nzwidth="0x1" edc:desc="Timer/Counter0 Overflow Interrupt Enable"/>
              <edc:SFRFieldDef edc:cname="OCIE0A" edc:nzwidth="0x1" edc:desc="Timer/Counter0 Output Compare Match A Interrupt Enable"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="TC1" edc:cname="TIMSK1" edc:nzwidth="0x8" edc:access="--n--nnn" edc:impl="0x27" edc:_addr="0x6F">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC1">
              <edc:SFRFieldDef edc:cname="TOIE1" edc:nzwidth="0x1" edc:desc="Timer/Counter1 Overflow Interrupt Enable"/>
              <edc:SFRFieldDef edc:cname="OCIE1A" edc:nzwidth="0x1" edc:desc="Timer/Counter1 Output Compare A Match Interrupt Enable"/>
              <edc:SFRFieldDef edc:cname="OCIE1B" edc:nzwidth="0x1" edc:desc="Timer/Counter1 Output Compare B Match Interrupt Enable"/>
              <edc:AdjustPoint edc:offset="0x2"/>
              <edc:SFRFieldDef edc:cname="ICIE1" edc:nzwidth="0x1" edc:desc="Timer/Counter1 Input Capture Interrupt Enable"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:AdjustPoint edc:offset="0x7" edc:_addr="0x70"/>
        <edc:SFRDef ltx:memberofperipheral="ADC CURRENT_SOURCE" edc:cname="AMISCR" edc:nzwidth="0x8" edc:access="-----nnn" edc:impl="0x7" edc:_addr="0x77">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="ADC">
              <edc:AdjustPoint edc:offset="0x1"/>
              <edc:SFRFieldDef edc:cname="XREFEN" edc:nzwidth="0x1" edc:desc="Internal Voltage Reference Output Enable"/>
              <edc:SFRFieldDef edc:cname="AREFEN" edc:nzwidth="0x1" edc:desc="External Voltage Reference Input Enable"/>
            </edc:SFRMode>
            <edc:SFRMode edc:id="DS.1" ltx:memberofperipheral="CURRENT_SOURCE">
              <edc:SFRFieldDef edc:cname="ISRCEN" edc:nzwidth="0x1" edc:desc="Current Source Enable"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="ADC" edc:cname="ADC" edc:nzwidth="0x10" edc:access="nnnnnnnnnnnnnnnn" edc:_addr="0x78"/>
        <edc:SFRDef ltx:memberofperipheral="ADC" edc:cname="ADCSRA" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x7A">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="ADC">
              <edc:SFRFieldDef edc:cname="ADPS" edc:nzwidth="0x3" edc:desc="ADC  Prescaler Select Bits">
                <edc:SFRFieldSemantic edc:cname="2" edc:desc="2" edc:when="(field &amp; 0x7) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="2" edc:desc="2" edc:when="(field &amp; 0x7) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="4" edc:desc="4" edc:when="(field &amp; 0x7) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="8" edc:desc="8" edc:when="(field &amp; 0x7) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="16" edc:desc="16" edc:when="(field &amp; 0x7) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="32" edc:desc="32" edc:when="(field &amp; 0x7) == 0x05"/>
                <edc:SFRFieldSemantic edc:cname="64" edc:desc="64" edc:when="(field &amp; 0x7) == 0x06"/>
                <edc:SFRFieldSemantic edc:cname="128" edc:desc="128" edc:when="(field &amp; 0x7) == 0x07"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="ADIE" edc:nzwidth="0x1" edc:desc="ADC Interrupt Enable"/>
              <edc:SFRFieldDef edc:cname="ADIF" edc:nzwidth="0x1" edc:desc="ADC Interrupt Flag"/>
              <edc:SFRFieldDef edc:cname="ADATE" edc:nzwidth="0x1" edc:desc="ADC  Auto Trigger Enable"/>
              <edc:SFRFieldDef edc:cname="ADSC" edc:nzwidth="0x1" edc:desc="ADC Start Conversion"/>
              <edc:SFRFieldDef edc:cname="ADEN" edc:nzwidth="0x1" edc:desc="ADC Enable"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="ADC AC" edc:cname="ADCSRB" edc:nzwidth="0x8" edc:access="nnnn-nnn" edc:impl="0xF7" edc:_addr="0x7B">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="ADC">
              <edc:SFRFieldDef edc:cname="ADTS" edc:nzwidth="0x3" edc:desc="ADC Auto Trigger Source bits">
                <edc:SFRFieldSemantic edc:cname="FREE_RUNNING_MODE" edc:desc="Free Running mode" edc:when="(field &amp; 0x7) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="ANALOG_COMPARATOR" edc:desc="Analog Comparator" edc:when="(field &amp; 0x7) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="EXTERNAL_INTERRUPT_REQUEST_0" edc:desc="External Interrupt Request 0" edc:when="(field &amp; 0x7) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="TIMER_COUNTER1_COMPARE_MATCH_A" edc:desc="Timer/Counter1 Compare Match A" edc:when="(field &amp; 0x7) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="TIMER_COUNTER1_OVERFLOW" edc:desc="Timer/Counter1 Overflow" edc:when="(field &amp; 0x7) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="TIMER_COUNTER1_COMPARE_MATCH_B" edc:desc="Timer/Counter1 Compare Match B" edc:when="(field &amp; 0x7) == 0x05"/>
                <edc:SFRFieldSemantic edc:cname="TIMER_COUNTER1_CAPTURE_EVENT" edc:desc="Timer/Counter1 Capture Event" edc:when="(field &amp; 0x7) == 0x06"/>
                <edc:SFRFieldSemantic edc:cname="WATCHDOG_INTERRUPT_REQUEST" edc:desc="Watchdog Interrupt Request" edc:when="(field &amp; 0x7) == 0x07"/>
              </edc:SFRFieldDef>
              <edc:AdjustPoint edc:offset="0x4"/>
              <edc:SFRFieldDef edc:cname="BIN" edc:nzwidth="0x1" edc:desc="Bipolar Input Mode"/>
            </edc:SFRMode>
            <edc:SFRMode edc:id="DS.1" ltx:memberofperipheral="AC">
              <edc:AdjustPoint edc:offset="0x4"/>
              <edc:SFRFieldDef edc:cname="ACIR" edc:nzwidth="0x2" edc:desc="Analog Comparator Internal Voltage Reference Select Bits"/>
              <edc:SFRFieldDef edc:cname="ACME" edc:nzwidth="0x1" edc:desc="Analog Comparator Multiplexer Enable"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="ADC" edc:cname="ADMUX" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x7C">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="ADC">
              <edc:SFRFieldDef edc:cname="MUX" edc:nzwidth="0x5" edc:desc="Analog Channel and Gain Selection Bits"/>
              <edc:SFRFieldDef edc:cname="ADLAR" edc:nzwidth="0x1" edc:desc="Left Adjust Result"/>
              <edc:SFRFieldDef edc:cname="REFS" edc:nzwidth="0x2" edc:desc="Reference Selection Bits">
                <edc:SFRFieldSemantic edc:cname="IF_AREFEN_0_THEN_INTERNAL_AVCC_AS_VOLTAGE_REFERENCE_IF_AREFEN_1_THEN_AREF_PIN_AS_VOLTAGE_REFERENCE" edc:desc="If AREFEN==0 then Internal AVCC as Voltage Reference. If AREFEN==1 then AREF pin as Voltage Reference.  " edc:when="(field &amp; 0x3) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="IF_AREFEN_0_THEN_INTERNAL_1_1V_AS_VOLTAGE_REFERENCE_WITHOUT_EXTERNAL_CAPACITOR_IF_AREFEN_1_THEN_INTERNAL_1_1V_AS_VOLTAGE_REFERENCE_WITH_EXTERNAL_CAPACITOR_AT_AREF_PIN" edc:desc="If AREFEN==0 then Internal 1.1V as Voltage Reference without external capacitor. If AREFEN==1 then Internal 1.1V as Voltage Reference with external capacitor at AREF pin." edc:when="(field &amp; 0x3) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="IF_AREFEN_0_THEN_INTERNAL_AVCC_AS_VOLTAGE_REFERENCE_IF_AREFEN_1_THEN_AREF_PIN_AS_VOLTAGE_REFERENCE" edc:desc="If AREFEN==0 then Internal AVCC as Voltage Reference. If AREFEN==1 then AREF pin as Voltage Reference.  " edc:when="(field &amp; 0x3) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="IF_AREFEN_0_THEN_INTERNAL_2_56V_AS_VOLTAGE_REFERENCE_WITHOUT_EXTERNAL_CAPACITOR_IF_AREFEN_1_THEN_INTERNAL_2_56V_AS_VOLTAGE_REFERENCE_WITH_EXTERNAL_CAPACITOR_AT_AREF_PIN" edc:desc="If AREFEN==0 then Internal 2.56V as Voltage Reference without external capacitor. If AREFEN==1 then Internal 2.56V as Voltage Reference with external capacitor at AREF pin." edc:when="(field &amp; 0x3) == 0x03"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:AdjustPoint edc:offset="0x1" edc:_addr="0x7D"/>
        <edc:SFRDef ltx:memberofperipheral="ADC" edc:cname="DIDR0" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x7E">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="ADC">
              <edc:SFRFieldDef edc:cname="ADC0D" edc:nzwidth="0x1"/>
              <edc:SFRFieldDef edc:cname="ADC1D" edc:nzwidth="0x1"/>
              <edc:SFRFieldDef edc:cname="ADC2D" edc:nzwidth="0x1"/>
              <edc:SFRFieldDef edc:cname="ADC3D" edc:nzwidth="0x1"/>
              <edc:SFRFieldDef edc:cname="ADC4D" edc:nzwidth="0x1"/>
              <edc:SFRFieldDef edc:cname="ADC5D" edc:nzwidth="0x1"/>
              <edc:SFRFieldDef edc:cname="ADC6D" edc:nzwidth="0x1"/>
              <edc:SFRFieldDef edc:cname="ADC7D" edc:nzwidth="0x1"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="ADC" edc:cname="DIDR1" edc:nzwidth="0x8" edc:access="-nnn----" edc:impl="0x70" edc:_addr="0x7F">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="ADC">
              <edc:AdjustPoint edc:offset="0x4"/>
              <edc:SFRFieldDef edc:cname="ADC8D" edc:nzwidth="0x1"/>
              <edc:SFRFieldDef edc:cname="ADC9D" edc:nzwidth="0x1"/>
              <edc:SFRFieldDef edc:cname="ADC10D" edc:nzwidth="0x1"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="TC1" edc:cname="TCCR1A" edc:nzwidth="0x8" edc:access="nnnn--nn" edc:impl="0xF3" edc:_addr="0x80">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC1">
              <edc:SFRFieldDef edc:cname="WGM1" edc:nzwidth="0x2" edc:desc="Pulse Width Modulator Select Bits"/>
              <edc:AdjustPoint edc:offset="0x2"/>
              <edc:SFRFieldDef edc:cname="COM1B" edc:nzwidth="0x2" edc:desc="Compare Output Mode 1B, bits"/>
              <edc:SFRFieldDef edc:cname="COM1A" edc:nzwidth="0x2" edc:desc="Compare Output Mode 1A, bits"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="TC1" edc:cname="TCCR1B" edc:nzwidth="0x8" edc:access="nn-nnnnn" edc:impl="0xDF" edc:_addr="0x81">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC1">
              <edc:SFRFieldDef edc:cname="CS1" edc:nzwidth="0x3" edc:desc="Timer/Counter1 Clock Select bits">
                <edc:SFRFieldSemantic edc:cname="NO_CLOCK_SOURCE_STOPPED" edc:desc="No Clock Source (Stopped)" edc:when="(field &amp; 0x7) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="RUNNING_NO_PRESCALING" edc:desc="Running, No Prescaling" edc:when="(field &amp; 0x7) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="RUNNING_CLK_8" edc:desc="Running, CLK/8" edc:when="(field &amp; 0x7) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="RUNNING_CLK_64" edc:desc="Running, CLK/64" edc:when="(field &amp; 0x7) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="RUNNING_CLK_256" edc:desc="Running, CLK/256" edc:when="(field &amp; 0x7) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="RUNNING_CLK_1024" edc:desc="Running, CLK/1024" edc:when="(field &amp; 0x7) == 0x05"/>
                <edc:SFRFieldSemantic edc:cname="RUNNING_EXTCLK_TN_FALLING_EDGE" edc:desc="Running, ExtClk Tn Falling Edge" edc:when="(field &amp; 0x7) == 0x06"/>
                <edc:SFRFieldSemantic edc:cname="RUNNING_EXTCLK_TN_RISING_EDGE" edc:desc="Running, ExtClk Tn Rising Edge" edc:when="(field &amp; 0x7) == 0x07"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="WGM1" edc:nzwidth="0x2" edc:desc="Waveform Generation Mode Bits"/>
              <edc:AdjustPoint edc:offset="0x1"/>
              <edc:SFRFieldDef edc:cname="ICES1" edc:nzwidth="0x1" edc:desc="Input Capture 1 Edge Select"/>
              <edc:SFRFieldDef edc:cname="ICNC1" edc:nzwidth="0x1" edc:desc="Input Capture 1 Noise Canceler"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="TC1" edc:cname="TCCR1C" edc:nzwidth="0x8" edc:access="nn------" edc:impl="0xC0" edc:_addr="0x82">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC1">
              <edc:AdjustPoint edc:offset="0x6"/>
              <edc:SFRFieldDef edc:cname="FOC1B" edc:nzwidth="0x1" edc:desc="Timer/Counter1 Force Output Compare for Channel B"/>
              <edc:SFRFieldDef edc:cname="FOC1A" edc:nzwidth="0x1" edc:desc="Timer/Counter1 Force Output Compare for Channel A"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="TC1" edc:cname="TCCR1D" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x83">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC1">
              <edc:SFRFieldDef edc:cname="OC1AU" edc:nzwidth="0x1" edc:desc="Timer/Counter1 Output Compare U-pin Enable for Channel A"/>
              <edc:SFRFieldDef edc:cname="OC1AV" edc:nzwidth="0x1" edc:desc="Timer/Counter1 Output Compare V-pin Enable for Channel A"/>
              <edc:SFRFieldDef edc:cname="OC1AW" edc:nzwidth="0x1" edc:desc="Timer/Counter1 Output Compare W-pin Enable for Channel A"/>
              <edc:SFRFieldDef edc:cname="OC1AX" edc:nzwidth="0x1" edc:desc="Timer/Counter1 Output Compare X-pin Enable for Channel A"/>
              <edc:SFRFieldDef edc:cname="OC1BU" edc:nzwidth="0x1" edc:desc="Timer/Counter1 Output Compare U-pin Enable for Channel B"/>
              <edc:SFRFieldDef edc:cname="OC1BV" edc:nzwidth="0x1" edc:desc="Timer/Counter1 Output Compare V-pin Enable for Channel B"/>
              <edc:SFRFieldDef edc:cname="OC1BW" edc:nzwidth="0x1" edc:desc="Timer/Counter1 Output Compare W-pin Enable for Channel B"/>
              <edc:SFRFieldDef edc:cname="OC1BX" edc:nzwidth="0x1" edc:desc="Timer/Counter1 Output Compare X-pin Enable for Channel B"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="TC1" edc:cname="TCNT1" edc:nzwidth="0x10" edc:access="nnnnnnnnnnnnnnnn" edc:_addr="0x84"/>
        <edc:SFRDef ltx:memberofperipheral="TC1" edc:cname="ICR1" edc:nzwidth="0x10" edc:access="nnnnnnnnnnnnnnnn" edc:_addr="0x86"/>
        <edc:SFRDef ltx:memberofperipheral="TC1" edc:cname="OCR1A" edc:nzwidth="0x10" edc:access="nnnnnnnnnnnnnnnn" edc:_addr="0x88"/>
        <edc:SFRDef ltx:memberofperipheral="TC1" edc:cname="OCR1B" edc:nzwidth="0x10" edc:access="nnnnnnnnnnnnnnnn" edc:_addr="0x8A"/>
        <edc:AdjustPoint edc:offset="0x2A" edc:_addr="0x8C"/>
        <edc:SFRDef ltx:memberofperipheral="TC0" edc:cname="ASSR" edc:nzwidth="0x8" edc:access="-nnnn-nn" edc:impl="0x7B" edc:_addr="0xB6">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC0">
              <edc:SFRFieldDef edc:cname="TCR0BUB" edc:nzwidth="0x1" edc:desc="Timer/Counter0 Control Register B Update Busy"/>
              <edc:SFRFieldDef edc:cname="TCR0AUB" edc:nzwidth="0x1" edc:desc="Timer/Counter0 Control Register A Update Busy"/>
              <edc:AdjustPoint edc:offset="0x1"/>
              <edc:SFRFieldDef edc:cname="OCR0AUB" edc:nzwidth="0x1" edc:desc="Output Compare Register 0A  Update Busy"/>
              <edc:SFRFieldDef edc:cname="TCN0UB" edc:nzwidth="0x1" edc:desc="Timer/Counter0 Update Busy"/>
              <edc:SFRFieldDef edc:cname="AS0" edc:nzwidth="0x1" edc:desc="Asynchronous Timer/Counter0"/>
              <edc:SFRFieldDef edc:cname="EXCLK" edc:nzwidth="0x1" edc:desc="Enable External Clock Input"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:AdjustPoint edc:offset="0x1" edc:_addr="0xB7"/>
        <edc:SFRDef ltx:memberofperipheral="USI" edc:cname="USICR" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0xB8">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="USI">
              <edc:SFRFieldDef edc:cname="USITC" edc:nzwidth="0x1" edc:desc="Toggle Clock Port Pin"/>
              <edc:SFRFieldDef edc:cname="USICLK" edc:nzwidth="0x1" edc:desc="Clock Strobe"/>
              <edc:SFRFieldDef edc:cname="USICS" edc:nzwidth="0x2" edc:desc="USI Clock Source Select Bits"/>
              <edc:SFRFieldDef edc:cname="USIWM" edc:nzwidth="0x2" edc:desc="USI Wire Mode Bits">
                <edc:SFRFieldSemantic edc:cname="NORMAL_OPERATION" edc:desc="Normal Operation" edc:when="(field &amp; 0x3) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="THREE_WIRE_MODE" edc:desc="Three-Wire Mode" edc:when="(field &amp; 0x3) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="TWO_WIRE_MODE" edc:desc="Two-Wire Mode" edc:when="(field &amp; 0x3) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="TWO_WIRE_MODE_HELD_LOW" edc:desc="Two-Wire Mode Held Low" edc:when="(field &amp; 0x3) == 0x03"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="USIOIE" edc:nzwidth="0x1" edc:desc="Counter Overflow Interrupt Enable"/>
              <edc:SFRFieldDef edc:cname="USISIE" edc:nzwidth="0x1" edc:desc="Start Condition Interrupt Enable"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="USI" edc:cname="USISR" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0xB9">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="USI">
              <edc:SFRFieldDef edc:cname="USICNT" edc:nzwidth="0x4" edc:desc="USI Counter Value Bits"/>
              <edc:SFRFieldDef edc:cname="USIDC" edc:nzwidth="0x1" edc:desc="Data Output Collision"/>
              <edc:SFRFieldDef edc:cname="USIPF" edc:nzwidth="0x1" edc:desc="Stop Condition Flag"/>
              <edc:SFRFieldDef edc:cname="USIOIF" edc:nzwidth="0x1" edc:desc="Counter Overflow Interrupt Flag"/>
              <edc:SFRFieldDef edc:cname="USISIF" edc:nzwidth="0x1" edc:desc="Start Condition Interrupt Flag"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="USI" edc:cname="USIDR" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0xBA"/>
        <edc:SFRDef ltx:memberofperipheral="USI" edc:cname="USIBR" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0xBB"/>
        <edc:SFRDef ltx:memberofperipheral="USI" edc:cname="USIPP" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0xBC"/>
        <edc:AdjustPoint edc:offset="0xB" edc:_addr="0xBD"/>
        <edc:SFRDef ltx:memberofperipheral="LINUART" edc:cname="LINCR" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0xC8">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="LINUART">
              <edc:SFRFieldDef edc:cname="LCMD" edc:nzwidth="0x3" edc:desc="LIN Command and Mode bits"/>
              <edc:SFRFieldDef edc:cname="LENA" edc:nzwidth="0x1" edc:desc="LIN or UART Enable"/>
              <edc:SFRFieldDef edc:cname="LCONF" edc:nzwidth="0x2" edc:desc="LIN Configuration bits"/>
              <edc:SFRFieldDef edc:cname="LIN13" edc:nzwidth="0x1" edc:desc="LIN Standard"/>
              <edc:SFRFieldDef edc:cname="LSWRES" edc:nzwidth="0x1" edc:desc="Software Reset"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="LINUART" edc:cname="LINSIR" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0xC9">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="LINUART">
              <edc:SFRFieldDef edc:cname="LRXOK" edc:nzwidth="0x1" edc:desc="Receive Performed Interrupt"/>
              <edc:SFRFieldDef edc:cname="LTXOK" edc:nzwidth="0x1" edc:desc="Transmit Performed Interrupt"/>
              <edc:SFRFieldDef edc:cname="LIDOK" edc:nzwidth="0x1" edc:desc="Identifier Interrupt"/>
              <edc:SFRFieldDef edc:cname="LERR" edc:nzwidth="0x1" edc:desc="Error Interrupt"/>
              <edc:SFRFieldDef edc:cname="LBUSY" edc:nzwidth="0x1" edc:desc="Busy Signal"/>
              <edc:SFRFieldDef edc:cname="LIDST" edc:nzwidth="0x3" edc:desc="Identifier Status bits"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="LINUART" edc:cname="LINENIR" edc:nzwidth="0x8" edc:access="----nnnn" edc:impl="0xF" edc:_addr="0xCA">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="LINUART">
              <edc:SFRFieldDef edc:cname="LENRXOK" edc:nzwidth="0x1" edc:desc="Enable Receive Performed Interrupt"/>
              <edc:SFRFieldDef edc:cname="LENTXOK" edc:nzwidth="0x1" edc:desc="Enable Transmit Performed Interrupt"/>
              <edc:SFRFieldDef edc:cname="LENIDOK" edc:nzwidth="0x1" edc:desc="Enable Identifier Interrupt"/>
              <edc:SFRFieldDef edc:cname="LENERR" edc:nzwidth="0x1" edc:desc="Enable Error Interrupt"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="LINUART" edc:cname="LINERR" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0xCB">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="LINUART">
              <edc:SFRFieldDef edc:cname="LBERR" edc:nzwidth="0x1" edc:desc="Bit Error Flag"/>
              <edc:SFRFieldDef edc:cname="LCERR" edc:nzwidth="0x1" edc:desc="Checksum Error Flag"/>
              <edc:SFRFieldDef edc:cname="LPERR" edc:nzwidth="0x1" edc:desc="Parity Error Flag"/>
              <edc:SFRFieldDef edc:cname="LSERR" edc:nzwidth="0x1" edc:desc="Synchronization Error Flag"/>
              <edc:SFRFieldDef edc:cname="LFERR" edc:nzwidth="0x1" edc:desc="Framing Error Flag"/>
              <edc:SFRFieldDef edc:cname="LOVERR" edc:nzwidth="0x1" edc:desc="Overrun Error Flag"/>
              <edc:SFRFieldDef edc:cname="LTOERR" edc:nzwidth="0x1" edc:desc="Frame Time Out Error Flag"/>
              <edc:SFRFieldDef edc:cname="LABORT" edc:nzwidth="0x1" edc:desc="Abort Flag"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="LINUART" edc:cname="LINBTR" edc:nzwidth="0x8" edc:access="n-nnnnnn" edc:impl="0xBF" edc:_addr="0xCC">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="LINUART">
              <edc:SFRFieldDef edc:cname="LBT" edc:nzwidth="0x6" edc:desc="LIN Bit Timing bits"/>
              <edc:AdjustPoint edc:offset="0x1"/>
              <edc:SFRFieldDef edc:cname="LDISR" edc:nzwidth="0x1" edc:desc="Disable Bit Timing Resynchronization"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="LINUART" edc:cname="LINBRRL" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0xCD">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="LINUART">
              <edc:SFRFieldDef edc:cname="LDIV" edc:nzwidth="0x8"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="LINUART" edc:cname="LINBRRH" edc:nzwidth="0x8" edc:access="----nnnn" edc:impl="0xF" edc:_addr="0xCE">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="LINUART">
              <edc:SFRFieldDef edc:cname="LDIV" edc:nzwidth="0x4"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="LINUART" edc:cname="LINDLR" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0xCF">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="LINUART">
              <edc:SFRFieldDef edc:cname="LRXDL" edc:nzwidth="0x4" edc:desc="LIN Receive Data Length bits"/>
              <edc:SFRFieldDef edc:cname="LTXDL" edc:nzwidth="0x4" edc:desc="LIN Transmit Data Length bits"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="LINUART" edc:cname="LINIDR" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0xD0">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="LINUART">
              <edc:SFRFieldDef edc:cname="LID" edc:nzwidth="0x6" edc:desc="Identifier bit 5 or Data Length bits"/>
              <edc:SFRFieldDef edc:cname="LP" edc:nzwidth="0x2" edc:desc="Parity bits"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="LINUART" edc:cname="LINSEL" edc:nzwidth="0x8" edc:access="----nnnn" edc:impl="0xF" edc:_addr="0xD1">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="LINUART">
              <edc:SFRFieldDef edc:cname="LINDX" edc:nzwidth="0x3" edc:desc="FIFO LIN Data Buffer Index bits"/>
              <edc:SFRFieldDef edc:cname="LAINC" edc:nzwidth="0x1" edc:desc="Auto Increment of Data Buffer Index (Active Low)"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="LINUART" edc:cname="LINDAT" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0xD2">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="LINUART">
              <edc:SFRFieldDef edc:cname="LDATA" edc:nzwidth="0x8"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
      </edc:SFRDataSector>
      <edc:GPRDataSector edc:regionid="IRAM" edc:beginaddr="0x100" edc:endaddr="0x300"/>
    </edc:RegardlessOfMode>
  </edc:DataSpace>
  <edc:DataFlashSpace edc:endaddr="0x200" edc:magicoffset="0x810000"/>
  <edc:SignaturesSpace edc:magicoffset="0x840000">
    <edc:DeviceIDSector edc:regionid="SIGNATURES" edc:beginaddr="0x0" edc:endaddr="0x3" edc:value="0x1E9487" edc:mask="0xffffff" edc:rw="r"/>
  </edc:SignaturesSpace>
  <edc:FusesSpace edc:magicoffset="0x820000">
    <edc:ConfigFuseSector edc:regionid="FUSES" edc:beginaddr="0x0" edc:endaddr="0x3" edc:magicoffset="0x820000" edc:rw="rw">
      <edc:DCRDef ltx:memberofperipheral="FUSE" edc:cname="LOW" edc:nzwidth="0x8" edc:impl="0xFF" edc:unused="0x0" edc:useinchecksum="0xFF" edc:factorydefault="0x62" edc:access="nnnnnnnn" edc:_addr="0x0">
        <edc:DCRModeList>
          <edc:DCRMode edc:id="DS.0" ltx:memberofperipheral="FUSE">
            <edc:DCRFieldDef edc:cname="SUT_CKSEL" edc:nzwidth="0x6" edc:desc="Select Clock source">
              <edc:DCRFieldSemantic edc:cname="EXTCLK_6CK_14CK_0MS" edc:desc="Ext. Clock; Start-up time PWRDWN/RESET: 6 CK/14 CK + 0 ms" edc:when="(field &amp; 0x3F) == 0x00"/>
              <edc:DCRFieldSemantic edc:cname="EXTCLK_6CK_14CK_4MS" edc:desc="Ext. Clock; Start-up time PWRDWN/RESET: 6 CK/14 CK + 4 ms" edc:when="(field &amp; 0x3F) == 0x10"/>
              <edc:DCRFieldSemantic edc:cname="EXTCLK_6CK_14CK_64MS" edc:desc="Ext. Clock; Start-up time PWRDWN/RESET: 6 CK/14 CK + 64 ms" edc:when="(field &amp; 0x3F) == 0x20"/>
              <edc:DCRFieldSemantic edc:cname="INTRCOSC_8MHZ_6CK_14CK_0MS" edc:desc="Int. RC Osc. 8 MHz; Start-up time PWRDWN/RESET: 6 CK/14 CK + 0 ms" edc:when="(field &amp; 0x3F) == 0x02"/>
              <edc:DCRFieldSemantic edc:cname="INTRCOSC_8MHZ_6CK_14CK_4MS" edc:desc="Int. RC Osc. 8 MHz; Start-up time PWRDWN/RESET: 6 CK/14 CK + 4 ms" edc:when="(field &amp; 0x3F) == 0x12"/>
              <edc:DCRFieldSemantic edc:cname="INTRCOSC_8MHZ_6CK_14CK_64MS" edc:desc="Int. RC Osc. 8 MHz; Start-up time PWRDWN/RESET: 6 CK/14 CK + 64 ms" edc:when="(field &amp; 0x3F) == 0x22"/>
              <edc:DCRFieldSemantic edc:cname="WDOSC_128KHZ_6CK_14CK_0MS" edc:desc="WD. Osc. 128 kHz; Start-up time PWRDWN/RESET: 6 CK/14 CK + 0 ms" edc:when="(field &amp; 0x3F) == 0x03"/>
              <edc:DCRFieldSemantic edc:cname="WDOSC_128KHZ_6CK_14CK_4MS" edc:desc="WD. Osc. 128 kHz; Start-up time PWRDWN/RESET: 6 CK/14 CK + 4 ms" edc:when="(field &amp; 0x3F) == 0x13"/>
              <edc:DCRFieldSemantic edc:cname="WDOSC_128KHZ_6CK_14CK_64MS" edc:desc="WD. Osc. 128 kHz; Start-up time PWRDWN/RESET: 6 CK/14 CK + 64 ms" edc:when="(field &amp; 0x3F) == 0x23"/>
              <edc:DCRFieldSemantic edc:cname="EXTLOFXTAL_1KCK_4MS" edc:desc="Ext. Low-Freq. Crystal; Start-up time PWRDWN/RESET: 1024 CK 4 ms" edc:when="(field &amp; 0x3F) == 0x04"/>
              <edc:DCRFieldSemantic edc:cname="EXTLOFXTAL_1KCK_64MS" edc:desc="Ext. Low-Freq. Crystal; Start-up time PWRDWN/RESET: 1024 CK + 64 ms" edc:when="(field &amp; 0x3F) == 0x14"/>
              <edc:DCRFieldSemantic edc:cname="EXTLOFXTAL_32KCK_64MS" edc:desc="Ext. Low-Freq. Crystal; Start-up time PWRDWN/RESET: 32768 CK + 64 ms" edc:when="(field &amp; 0x3F) == 0x24"/>
              <edc:DCRFieldSemantic edc:cname="EXTCRES_0MHZ4_0MHZ9_258CK_14CK_4MS1" edc:desc="Ext. Ceramic Res. 0.4-0.9 MHz; Start-up time PWRDWN/RESET: 258 CK/14 CK + 4.1 ms" edc:when="(field &amp; 0x3F) == 0x08"/>
              <edc:DCRFieldSemantic edc:cname="EXTCRES_0MHZ4_0MHZ9_258CK_14CK_65MS" edc:desc="Ext. Ceramic Res. 0.4-0.9 MHz; Start-up time PWRDWN/RESET: 258 CK/14 CK + 65 ms" edc:when="(field &amp; 0x3F) == 0x18"/>
              <edc:DCRFieldSemantic edc:cname="EXTCRES_0MHZ4_0MHZ9_1KCK_14CK_0MS" edc:desc="Ext. Ceramic Res. 0.4-0.9 MHz; Start-up time PWRDWN/RESET: 1024 CK /14 CK + 0 ms" edc:when="(field &amp; 0x3F) == 0x28"/>
              <edc:DCRFieldSemantic edc:cname="EXTCRES_0MHZ4_0MHZ9_1KCK_14CK_4MS1" edc:desc="Ext. Ceramic Res. 0.4-0.9 MHz; Start-up time PWRDWN/RESET: 1024 CK /14 CK + 4.1 ms" edc:when="(field &amp; 0x3F) == 0x38"/>
              <edc:DCRFieldSemantic edc:cname="EXTCRES_0MHZ4_0MHZ9_1KCK_14CK_65MS" edc:desc="Ext. Ceramic Res. 0.4-0.9 MHz; Start-up time PWRDWN/RESET: 1024 CK /14 CK + 65 ms" edc:when="(field &amp; 0x3F) == 0x09"/>
              <edc:DCRFieldSemantic edc:cname="EXTXOSC_0MHZ4_0MHZ9_16KCK_14CK_0MS" edc:desc="Ext. Crystal Osc. 0.4-0.9 MHz; Start-up time PWRDWN/RESET: 16384 CK/14 CK + 0 ms" edc:when="(field &amp; 0x3F) == 0x19"/>
              <edc:DCRFieldSemantic edc:cname="EXTXOSC_0MHZ4_0MHZ9_16KCK_14CK_4MS1" edc:desc="Ext. Crystal Osc. 0.4-0.9 MHz; Start-up time PWRDWN/RESET: 16384 CK/14 CK + 4.1 ms" edc:when="(field &amp; 0x3F) == 0x29"/>
              <edc:DCRFieldSemantic edc:cname="EXTXOSC_0MHZ4_0MHZ9_16KCK_14CK_65MS" edc:desc="Ext. Crystal Osc. 0.4-0.9 MHz; Start-up time PWRDWN/RESET: 16384 CK/14 CK + 65 ms" edc:when="(field &amp; 0x3F) == 0x39"/>
              <edc:DCRFieldSemantic edc:cname="EXTCRES_0MHZ9_3MHZ_258CK_14CK_4MS1" edc:desc="Ext. Ceramic Res. 0.9-3.0 MHz; Start-up time PWRDWN/RESET: 258 CK/14 CK + 4.1 ms" edc:when="(field &amp; 0x3F) == 0x0A"/>
              <edc:DCRFieldSemantic edc:cname="EXTCRES_0MHZ9_3MHZ_258CK_14CK_65MS" edc:desc="Ext. Ceramic Res. 0.9-3.0 MHz; Start-up time PWRDWN/RESET: 258 CK/14 CK + 65 ms" edc:when="(field &amp; 0x3F) == 0x1A"/>
              <edc:DCRFieldSemantic edc:cname="EXTCRES_0MHZ9_3MHZ_1KCK_14CK_0MS" edc:desc="Ext. Ceramic Res. 0.9-3.0 MHz; Start-up time PWRDWN/RESET: 1024 CK /14 CK + 0 ms" edc:when="(field &amp; 0x3F) == 0x2A"/>
              <edc:DCRFieldSemantic edc:cname="EXTCRES_0MHZ9_3MHZ_1KCK_14CK_4MS1" edc:desc="Ext. Ceramic Res. 0.9-3.0 MHz; Start-up time PWRDWN/RESET: 1024 CK /14 CK + 4.1 ms" edc:when="(field &amp; 0x3F) == 0x3A"/>
              <edc:DCRFieldSemantic edc:cname="EXTCRES_0MHZ9_3MHZ_1KCK_14CK_65MS" edc:desc="Ext. Ceramic Res. 0.9-3.0 MHz; Start-up time PWRDWN/RESET: 1024 CK /14 CK + 65 ms" edc:when="(field &amp; 0x3F) == 0x0B"/>
              <edc:DCRFieldSemantic edc:cname="EXTXOSC_0MHZ9_3MHZ_16KCK_14CK_0MS" edc:desc="Ext. Crystal Osc. 0.9-3.0 MHz; Start-up time PWRDWN/RESET: 16384 CK/14 CK + 0 ms" edc:when="(field &amp; 0x3F) == 0x1B"/>
              <edc:DCRFieldSemantic edc:cname="EXTXOSC_0MHZ9_3MHZ_16KCK_14CK_4MS1" edc:desc="Ext. Crystal Osc. 0.9-3.0 MHz; Start-up time PWRDWN/RESET: 16384 CK/14 CK + 4.1 ms" edc:when="(field &amp; 0x3F) == 0x2B"/>
              <edc:DCRFieldSemantic edc:cname="EXTXOSC_0MHZ9_3MHZ_16KCK_14CK_65MS" edc:desc="Ext. Crystal Osc. 0.9-3.0 MHz; Start-up time PWRDWN/RESET: 16384 CK/14 CK + 65 ms" edc:when="(field &amp; 0x3F) == 0x3B"/>
              <edc:DCRFieldSemantic edc:cname="EXTCRES_3MHZ_8MHZ_258CK_14CK_4MS1" edc:desc="Ext. Ceramic Res. 3.0-8.0 MHz; Start-up time PWRDWN/RESET: 258 CK/14 CK + 4.1 ms" edc:when="(field &amp; 0x3F) == 0x0C"/>
              <edc:DCRFieldSemantic edc:cname="EXTCRES_3MHZ_8MHZ_258CK_14CK_65MS" edc:desc="Ext. Ceramic Res. 3.0-8.0 MHz; Start-up time PWRDWN/RESET: 258 CK/14 CK + 65 ms" edc:when="(field &amp; 0x3F) == 0x1C"/>
              <edc:DCRFieldSemantic edc:cname="EXTCRES_3MHZ_8MHZ_1KCK_14CK_0MS" edc:desc="Ext. Ceramic Res. 3.0-8.0 MHz; Start-up time PWRDWN/RESET: 1024 CK /14 CK + 0 ms" edc:when="(field &amp; 0x3F) == 0x2C"/>
              <edc:DCRFieldSemantic edc:cname="EXTCRES_3MHZ_8MHZ_1KCK_14CK_4MS1" edc:desc="Ext. Ceramic Res. 3.0-8.0 MHz; Start-up time PWRDWN/RESET: 1024 CK /14 CK + 4.1 ms" edc:when="(field &amp; 0x3F) == 0x3C"/>
              <edc:DCRFieldSemantic edc:cname="EXTCRES_3MHZ_8MHZ_1KCK_14CK_65MS" edc:desc="Ext. Ceramic Res. 3.0-8.0 MHz; Start-up time PWRDWN/RESET: 1024 CK /14 CK + 65 ms" edc:when="(field &amp; 0x3F) == 0x0D"/>
              <edc:DCRFieldSemantic edc:cname="EXTXOSC_3MHZ_8MHZ_16KCK_14CK_0MS" edc:desc="Ext. Crystal Osc. 3.0-8.0 MHz; Start-up time PWRDWN/RESET: 16384 CK/14 CK + 0 ms" edc:when="(field &amp; 0x3F) == 0x1D"/>
              <edc:DCRFieldSemantic edc:cname="EXTXOSC_3MHZ_8MHZ_16KCK_14CK_4MS1" edc:desc="Ext. Crystal Osc. 3.0-8.0 MHz; Start-up time PWRDWN/RESET: 16384 CK/14 CK + 4.1 ms" edc:when="(field &amp; 0x3F) == 0x2D"/>
              <edc:DCRFieldSemantic edc:cname="EXTXOSC_3MHZ_8MHZ_16KCK_14CK_65MS" edc:desc="Ext. Crystal Osc. 3.0-8.0 MHz; Start-up time PWRDWN/RESET: 16384 CK/14 CK + 65 ms" edc:when="(field &amp; 0x3F) == 0x3D"/>
              <edc:DCRFieldSemantic edc:cname="EXTCRES_8MHZ_16MHZ_258CK_14CK_4MS1" edc:desc="Ext. Ceramic Res. 8.0-16.0 MHz; Start-up time PWRDWN/RESET: 258 CK/14 CK + 4.1 ms" edc:when="(field &amp; 0x3F) == 0x0E"/>
              <edc:DCRFieldSemantic edc:cname="EXTCRES_8MHZ_16MHZ_258CK_14CK_65MS" edc:desc="Ext. Ceramic Res. 8.0-16.0 MHz; Start-up time PWRDWN/RESET: 258 CK/14 CK + 65 ms" edc:when="(field &amp; 0x3F) == 0x1E"/>
              <edc:DCRFieldSemantic edc:cname="EXTCRES_8MHZ_16MHZ_1KCK_14CK_0MS" edc:desc="Ext. Ceramic Res. 8.0-16.0 MHz; Start-up time PWRDWN/RESET: 1024 CK /14 CK + 0 ms" edc:when="(field &amp; 0x3F) == 0x2E"/>
              <edc:DCRFieldSemantic edc:cname="EXTCRES_8MHZ_16MHZ_1KCK_14CK_4MS1" edc:desc="Ext. Ceramic Res. 8.0-16.0 MHz; Start-up time PWRDWN/RESET: 1024 CK /14 CK + 4.1 ms" edc:when="(field &amp; 0x3F) == 0x3E"/>
              <edc:DCRFieldSemantic edc:cname="EXTCRES_8MHZ_16MHZ_1KCK_14CK_65MS" edc:desc="Ext. Ceramic Res. 8.0-16.0 MHz; Start-up time PWRDWN/RESET: 1024 CK /14 CK + 65 ms" edc:when="(field &amp; 0x3F) == 0x0F"/>
              <edc:DCRFieldSemantic edc:cname="EXTXOSC_8MHZ_16MHZ_16KCK_14CK_0MS" edc:desc="Ext. Crystal Osc. 8.0-16.0 MHz; Start-up time PWRDWN/RESET: 16384 CK/14 CK + 0 ms" edc:when="(field &amp; 0x3F) == 0x1F"/>
              <edc:DCRFieldSemantic edc:cname="EXTXOSC_8MHZ_16MHZ_16KCK_14CK_4MS1" edc:desc="Ext. Crystal Osc. 8.0-16.0 MHz; Start-up time PWRDWN/RESET: 16384 CK/14 CK + 4.1 ms" edc:when="(field &amp; 0x3F) == 0x2F"/>
              <edc:DCRFieldSemantic edc:cname="EXTXOSC_8MHZ_16MHZ_16KCK_14CK_65MS" edc:desc="Ext. Crystal Osc. 8.0-16.0 MHz; Start-up time PWRDWN/RESET: 16384 CK/14 CK + 65 ms" edc:when="(field &amp; 0x3F) == 0x3F"/>
            </edc:DCRFieldDef>
            <edc:DCRFieldDef edc:cname="CKOUT" edc:nzwidth="0x1" edc:desc="Clock output on PORTB5">
              <edc:DCRFieldSemantic edc:cname="SET" edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:DCRFieldSemantic edc:cname="CLEAR" edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:DCRFieldDef>
            <edc:DCRFieldDef edc:cname="CKDIV8" edc:nzwidth="0x1" edc:desc="Divide clock by 8 internally">
              <edc:DCRFieldSemantic edc:cname="SET" edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:DCRFieldSemantic edc:cname="CLEAR" edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:DCRFieldDef>
          </edc:DCRMode>
        </edc:DCRModeList>
      </edc:DCRDef>
      <edc:DCRDef ltx:memberofperipheral="FUSE" edc:cname="HIGH" edc:nzwidth="0x8" edc:impl="0xFF" edc:unused="0x0" edc:useinchecksum="0xFF" edc:factorydefault="0xDF" edc:access="nnnnnnnn" edc:_addr="0x1">
        <edc:DCRModeList>
          <edc:DCRMode edc:id="DS.0" ltx:memberofperipheral="FUSE">
            <edc:DCRFieldDef edc:cname="BODLEVEL" edc:nzwidth="0x3" edc:desc="Brown-out Detector trigger level">
              <edc:DCRFieldSemantic edc:cname="4V3" edc:desc="Brown-out detection at VCC=4.3 V" edc:when="(field &amp; 0x7) == 0x04"/>
              <edc:DCRFieldSemantic edc:cname="2V7" edc:desc="Brown-out detection at VCC=2.7 V" edc:when="(field &amp; 0x7) == 0x05"/>
              <edc:DCRFieldSemantic edc:cname="1V8" edc:desc="Brown-out detection at VCC=1.8 V" edc:when="(field &amp; 0x7) == 0x06"/>
              <edc:DCRFieldSemantic edc:cname="2V3" edc:desc="Brown-out detection at VCC=2.3 V" edc:when="(field &amp; 0x7) == 0x03"/>
              <edc:DCRFieldSemantic edc:cname="2V2" edc:desc="Brown-out detection at VCC=2.2 V" edc:when="(field &amp; 0x7) == 0x02"/>
              <edc:DCRFieldSemantic edc:cname="1V9" edc:desc="Brown-out detection at VCC=1.9 V" edc:when="(field &amp; 0x7) == 0x01"/>
              <edc:DCRFieldSemantic edc:cname="2V0" edc:desc="Brown-out detection at VCC=2.0 V" edc:when="(field &amp; 0x7) == 0x00"/>
              <edc:DCRFieldSemantic edc:cname="DISABLED" edc:desc="Brown-out detection disabled" edc:when="(field &amp; 0x7) == 0x07"/>
            </edc:DCRFieldDef>
            <edc:DCRFieldDef edc:cname="EESAVE" edc:nzwidth="0x1" edc:desc="Preserve EEPROM through the Chip Erase cycle">
              <edc:DCRFieldSemantic edc:cname="SET" edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:DCRFieldSemantic edc:cname="CLEAR" edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:DCRFieldDef>
            <edc:DCRFieldDef edc:cname="WDTON" edc:nzwidth="0x1" edc:desc="Watch-dog Timer always ON">
              <edc:DCRFieldSemantic edc:cname="SET" edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:DCRFieldSemantic edc:cname="CLEAR" edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:DCRFieldDef>
            <edc:DCRFieldDef edc:cname="SPIEN" edc:nzwidth="0x1" edc:desc="Serial program downloading (SPI) enabled">
              <edc:DCRFieldSemantic edc:cname="SET" edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:DCRFieldSemantic edc:cname="CLEAR" edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:DCRFieldDef>
            <edc:DCRFieldDef edc:cname="DWEN" edc:nzwidth="0x1" edc:desc="Debug Wire enable">
              <edc:DCRFieldSemantic edc:cname="SET" edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:DCRFieldSemantic edc:cname="CLEAR" edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:DCRFieldDef>
            <edc:DCRFieldDef edc:cname="RSTDISBL" edc:nzwidth="0x1" edc:desc="Reset Disabled (Enable PB7 as i/o pin)">
              <edc:DCRFieldSemantic edc:cname="SET" edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:DCRFieldSemantic edc:cname="CLEAR" edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:DCRFieldDef>
          </edc:DCRMode>
        </edc:DCRModeList>
      </edc:DCRDef>
      <edc:DCRDef ltx:memberofperipheral="FUSE" edc:cname="EXTENDED" edc:nzwidth="0x8" edc:impl="0x1" edc:unused="0x0" edc:useinchecksum="0xFF" edc:factorydefault="0xFF" edc:access="-------n" edc:_addr="0x2">
        <edc:DCRModeList>
          <edc:DCRMode edc:id="DS.0" ltx:memberofperipheral="FUSE">
            <edc:DCRFieldDef edc:cname="SELFPRGEN" edc:nzwidth="0x1" edc:desc="Self Programming enable">
              <edc:DCRFieldSemantic edc:cname="SET" edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:DCRFieldSemantic edc:cname="CLEAR" edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:DCRFieldDef>
          </edc:DCRMode>
        </edc:DCRModeList>
      </edc:DCRDef>
    </edc:ConfigFuseSector>
  </edc:FusesSpace>
  <edc:LockbitsSpace edc:magicoffset="0x830000">
    <edc:ConfigFuseSector edc:regionid="LOCKBITS" edc:beginaddr="0x0" edc:endaddr="0x1" edc:magicoffset="0x830000" edc:rw="rw">
      <edc:DCRDef ltx:memberofperipheral="LOCKBIT" edc:cname="LOCKBIT" edc:nzwidth="0x8" edc:impl="0x3" edc:unused="0x0" edc:useinchecksum="0xFF" edc:factorydefault="0xFF" edc:access="------nn" edc:_addr="0x0">
        <edc:DCRModeList>
          <edc:DCRMode edc:id="DS.0" ltx:memberofperipheral="LOCKBIT">
            <edc:DCRFieldDef edc:cname="LB" edc:nzwidth="0x2" edc:desc="Memory Lock">
              <edc:DCRFieldSemantic edc:cname="PROG_VER_DISABLED" edc:desc="Further programming and verification disabled" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:DCRFieldSemantic edc:cname="PROG_DISABLED" edc:desc="Further programming disabled" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:DCRFieldSemantic edc:cname="NO_LOCK" edc:desc="No memory lock features enabled" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:DCRFieldDef>
          </edc:DCRMode>
        </edc:DCRModeList>
      </edc:DCRDef>
    </edc:ConfigFuseSector>
  </edc:LockbitsSpace>
</edc:PIC>
