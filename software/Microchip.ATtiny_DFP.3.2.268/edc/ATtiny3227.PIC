<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<edc:PIC xmlns:atdf="http://crownking/atdf" xmlns:edc="http://crownking/edc" xmlns:ltx="http://crownking/ltx" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://crownking/edc edc/PIC.xsd" edc:name="ATtiny3227" edc:arch="avr8" edc:procid="0x0000" atdf:architecture="AVR8X" atdf:family="tinyAVR 2" edc:hasFreeze="false">
  <edc:Properties>
    <edc:Property edc:propkey="file.registers.are.odd.address.accessible" edc:propvalue="true"/>
  </edc:Properties>
  <edc:Power>
    <edc:VDD edc:minvoltage="1.8" edc:maxvoltage="5.5" edc:nominalvoltage="5.000"/>
  </edc:Power>
  <edc:Programming edc:haslvp2="true" edc:haschecksum="false">
    <edc:ProgrammingRowSize edc:progop="cfg" edc:nzsize="1"/>
    <edc:ProgrammingRowSize edc:progop="eedata" edc:nzsize="64"/>
    <edc:ProgrammingRowSize edc:progop="pgm" edc:nzsize="128"/>
  </edc:Programming>
  <edc:ArchDef edc:name="avr8" edc:desc="avr8">
    <edc:MemTraits>
      <edc:ProgramMemTraits edc:addrinc="0x1" edc:locsize="0x2" edc:wordimpl="0xFFFF" edc:wordinit="0xFFFF" edc:wordsafe="0xFFFF" edc:wordsize="0xFFFF"/>
      <edc:DataMemTraits edc:addrinc="0x1" edc:locsize="0x1" edc:wordimpl="0xFF" edc:wordinit="0xFF" edc:wordsafe="0xFF" edc:wordsize="0x1"/>
      <edc:EEDataMemTraits edc:magicoffset="0x810000"/>
    </edc:MemTraits>
  </edc:ArchDef>
  <edc:InstructionSet edc:instructionsetid="avr8">
    <edc:InstructionSet edc:instructionsetid="avr8base"/>
    <edc:InstructionSet edc:instructionsetid="avr8brk"/>
    <edc:InstructionSet edc:instructionsetid="avr8elpm"/>
    <edc:InstructionSet edc:instructionsetid="avr8movw"/>
    <edc:InstructionSet edc:instructionsetid="avr8des"/>
    <edc:InstructionSet edc:instructionsetid="avr8lpm"/>
    <edc:InstructionSet edc:instructionsetid="avr8lpmx"/>
    <edc:InstructionSet edc:instructionsetid="avr8mega"/>
    <edc:InstructionSet edc:instructionsetid="avr8sram"/>
    <edc:InstructionSet edc:instructionsetid="avr8spmx"/>
    <edc:InstructionSet edc:instructionsetid="avr8mul"/>
    <edc:InstructionSet edc:instructionsetid="avr8spm"/>
    <edc:InstructionSet edc:instructionsetid="avr8eind"/>
    <edc:InstructionSet edc:instructionsetid="avr8elpmx"/>
  </edc:InstructionSet>
  <edc:InterruptList>
    <edc:Interrupt edc:irq="1" edc:cname="NMI" edc:desc="" ltx:memberofperipheral="CRCSCAN"/>
    <edc:Interrupt edc:irq="2" edc:cname="VLM" edc:desc="" ltx:memberofperipheral="BOD"/>
    <edc:Interrupt edc:irq="3" edc:cname="CNT" edc:desc="" ltx:memberofperipheral="RTC"/>
    <edc:Interrupt edc:irq="4" edc:cname="PIT" edc:desc="" ltx:memberofperipheral="RTC"/>
    <edc:Interrupt edc:irq="5" edc:cname="CCL" edc:desc="" ltx:memberofperipheral="CCL"/>
    <edc:Interrupt edc:irq="6" edc:cname="PORT" edc:desc="" ltx:memberofperipheral="PORTA"/>
    <edc:Interrupt edc:irq="7" edc:cname="PORT" edc:desc="" ltx:memberofperipheral="PORTB"/>
    <edc:Interrupt edc:irq="8" edc:cname="LUNF" edc:desc="" ltx:memberofperipheral="TCA0"/>
    <edc:Interrupt edc:irq="8" edc:cname="OVF" edc:desc="" ltx:memberofperipheral="TCA0"/>
    <edc:Interrupt edc:irq="9" edc:cname="HUNF" edc:desc="" ltx:memberofperipheral="TCA0"/>
    <edc:Interrupt edc:irq="10" edc:cname="CMP0" edc:desc="" ltx:memberofperipheral="TCA0"/>
    <edc:Interrupt edc:irq="10" edc:cname="LCMP0" edc:desc="" ltx:memberofperipheral="TCA0"/>
    <edc:Interrupt edc:irq="11" edc:cname="CMP1" edc:desc="" ltx:memberofperipheral="TCA0"/>
    <edc:Interrupt edc:irq="11" edc:cname="LCMP1" edc:desc="" ltx:memberofperipheral="TCA0"/>
    <edc:Interrupt edc:irq="12" edc:cname="CMP2" edc:desc="" ltx:memberofperipheral="TCA0"/>
    <edc:Interrupt edc:irq="12" edc:cname="LCMP2" edc:desc="" ltx:memberofperipheral="TCA0"/>
    <edc:Interrupt edc:irq="13" edc:cname="INT" edc:desc="" ltx:memberofperipheral="TCB0"/>
    <edc:Interrupt edc:irq="14" edc:cname="TWIS" edc:desc="" ltx:memberofperipheral="TWI0"/>
    <edc:Interrupt edc:irq="15" edc:cname="TWIM" edc:desc="" ltx:memberofperipheral="TWI0"/>
    <edc:Interrupt edc:irq="16" edc:cname="INT" edc:desc="" ltx:memberofperipheral="SPI0"/>
    <edc:Interrupt edc:irq="17" edc:cname="RXC" edc:desc="" ltx:memberofperipheral="USART0"/>
    <edc:Interrupt edc:irq="18" edc:cname="DRE" edc:desc="" ltx:memberofperipheral="USART0"/>
    <edc:Interrupt edc:irq="19" edc:cname="TXC" edc:desc="" ltx:memberofperipheral="USART0"/>
    <edc:Interrupt edc:irq="20" edc:cname="AC" edc:desc="" ltx:memberofperipheral="AC0"/>
    <edc:Interrupt edc:irq="21" edc:cname="ERROR" edc:desc="" ltx:memberofperipheral="ADC0"/>
    <edc:Interrupt edc:irq="22" edc:cname="RESRDY" edc:desc="" ltx:memberofperipheral="ADC0"/>
    <edc:Interrupt edc:irq="23" edc:cname="SAMPRDY" edc:desc="" ltx:memberofperipheral="ADC0"/>
    <edc:Interrupt edc:irq="24" edc:cname="PORT" edc:desc="" ltx:memberofperipheral="PORTC"/>
    <edc:Interrupt edc:irq="25" edc:cname="INT" edc:desc="" ltx:memberofperipheral="TCB1"/>
    <edc:Interrupt edc:irq="26" edc:cname="RXC" edc:desc="" ltx:memberofperipheral="USART1"/>
    <edc:Interrupt edc:irq="27" edc:cname="DRE" edc:desc="" ltx:memberofperipheral="USART1"/>
    <edc:Interrupt edc:irq="28" edc:cname="TXC" edc:desc="" ltx:memberofperipheral="USART1"/>
    <edc:Interrupt edc:irq="29" edc:cname="EE" edc:desc="" ltx:memberofperipheral="NVMCTRL"/>
  </edc:InterruptList>
  <edc:PeripheralList>
    <edc:Peripheral edc:cname="AC0" edc:desc=""/>
    <edc:Peripheral edc:cname="ADC0" edc:desc=""/>
    <edc:Peripheral edc:cname="BOD" edc:desc=""/>
    <edc:Peripheral edc:cname="CCL" edc:desc=""/>
    <edc:Peripheral edc:cname="CLKCTRL" edc:desc=""/>
    <edc:Peripheral edc:cname="CPU" edc:desc=""/>
    <edc:Peripheral edc:cname="CPUINT" edc:desc=""/>
    <edc:Peripheral edc:cname="CRCSCAN" edc:desc=""/>
    <edc:Peripheral edc:cname="EVSYS" edc:desc=""/>
    <edc:Peripheral edc:cname="FUSE" edc:desc=""/>
    <edc:Peripheral edc:cname="GPIO" edc:desc=""/>
    <edc:Peripheral edc:cname="LOCKBIT" edc:desc=""/>
    <edc:Peripheral edc:cname="NVMCTRL" edc:desc=""/>
    <edc:Peripheral edc:cname="PORTA" edc:desc=""/>
    <edc:Peripheral edc:cname="PORTB" edc:desc=""/>
    <edc:Peripheral edc:cname="PORTC" edc:desc=""/>
    <edc:Peripheral edc:cname="PORTMUX" edc:desc=""/>
    <edc:Peripheral edc:cname="RSTCTRL" edc:desc=""/>
    <edc:Peripheral edc:cname="RTC" edc:desc=""/>
    <edc:Peripheral edc:cname="SIGROW" edc:desc=""/>
    <edc:Peripheral edc:cname="SLPCTRL" edc:desc=""/>
    <edc:Peripheral edc:cname="SPI0" edc:desc=""/>
    <edc:Peripheral edc:cname="SYSCFG" edc:desc=""/>
    <edc:Peripheral edc:cname="TCA0" edc:desc=""/>
    <edc:Peripheral edc:cname="TCB0" edc:desc=""/>
    <edc:Peripheral edc:cname="TCB1" edc:desc=""/>
    <edc:Peripheral edc:cname="TWI0" edc:desc=""/>
    <edc:Peripheral edc:cname="USART0" edc:desc=""/>
    <edc:Peripheral edc:cname="USART1" edc:desc=""/>
    <edc:Peripheral edc:cname="USERROW" edc:desc=""/>
    <edc:Peripheral edc:cname="VPORTA" edc:desc=""/>
    <edc:Peripheral edc:cname="VPORTB" edc:desc=""/>
    <edc:Peripheral edc:cname="VPORTC" edc:desc=""/>
    <edc:Peripheral edc:cname="VREF" edc:desc=""/>
    <edc:Peripheral edc:cname="WDT" edc:desc=""/>
  </edc:PeripheralList>
  <edc:ProgramSpace>
    <edc:CodeSector edc:regionid="PROGMEM" edc:beginaddr="0x0" edc:endaddr="0x4000" atdf:pagesize="0x80" edc:rw="rw"/>
  </edc:ProgramSpace>
  <edc:DataSpace edc:magicoffset="0x800000">
    <edc:RegardlessOfMode>
      <edc:NMMRPlace edc:regionid="corenmmrs">
        <edc:SFRDef edc:nzwidth="0x10" edc:cname="PC" edc:impl="0xFFFF" edc:access="nnnnnnnnnnnnnnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:desc="Program Counter" edc:nmmrid="60"/>
        <edc:SFRDef edc:nzwidth="0x8" edc:cname="R0" edc:impl="0xFF" edc:access="nnnnnnnn" edc:por="xxxxxxxx" edc:mclr="xxxxxxxx" edc:desc="General-Purpose Register" edc:nmmrid="0"/>
        <edc:SFRDef edc:nzwidth="0x8" edc:cname="R1" edc:impl="0xFF" edc:access="nnnnnnnn" edc:por="xxxxxxxx" edc:mclr="xxxxxxxx" edc:desc="General-Purpose Register" edc:nmmrid="1"/>
        <edc:SFRDef edc:nzwidth="0x8" edc:cname="R2" edc:impl="0xFF" edc:access="nnnnnnnn" edc:por="xxxxxxxx" edc:mclr="xxxxxxxx" edc:desc="General-Purpose Register" edc:nmmrid="2"/>
        <edc:SFRDef edc:nzwidth="0x8" edc:cname="R3" edc:impl="0xFF" edc:access="nnnnnnnn" edc:por="xxxxxxxx" edc:mclr="xxxxxxxx" edc:desc="General-Purpose Register" edc:nmmrid="3"/>
        <edc:SFRDef edc:nzwidth="0x8" edc:cname="R4" edc:impl="0xFF" edc:access="nnnnnnnn" edc:por="xxxxxxxx" edc:mclr="xxxxxxxx" edc:desc="General-Purpose Register" edc:nmmrid="4"/>
        <edc:SFRDef edc:nzwidth="0x8" edc:cname="R5" edc:impl="0xFF" edc:access="nnnnnnnn" edc:por="xxxxxxxx" edc:mclr="xxxxxxxx" edc:desc="General-Purpose Register" edc:nmmrid="5"/>
        <edc:SFRDef edc:nzwidth="0x8" edc:cname="R6" edc:impl="0xFF" edc:access="nnnnnnnn" edc:por="xxxxxxxx" edc:mclr="xxxxxxxx" edc:desc="General-Purpose Register" edc:nmmrid="6"/>
        <edc:SFRDef edc:nzwidth="0x8" edc:cname="R7" edc:impl="0xFF" edc:access="nnnnnnnn" edc:por="xxxxxxxx" edc:mclr="xxxxxxxx" edc:desc="General-Purpose Register" edc:nmmrid="7"/>
        <edc:SFRDef edc:nzwidth="0x8" edc:cname="R8" edc:impl="0xFF" edc:access="nnnnnnnn" edc:por="xxxxxxxx" edc:mclr="xxxxxxxx" edc:desc="General-Purpose Register" edc:nmmrid="8"/>
        <edc:SFRDef edc:nzwidth="0x8" edc:cname="R9" edc:impl="0xFF" edc:access="nnnnnnnn" edc:por="xxxxxxxx" edc:mclr="xxxxxxxx" edc:desc="General-Purpose Register" edc:nmmrid="9"/>
        <edc:SFRDef edc:nzwidth="0x8" edc:cname="R10" edc:impl="0xFF" edc:access="nnnnnnnn" edc:por="xxxxxxxx" edc:mclr="xxxxxxxx" edc:desc="General-Purpose Register" edc:nmmrid="10"/>
        <edc:SFRDef edc:nzwidth="0x8" edc:cname="R11" edc:impl="0xFF" edc:access="nnnnnnnn" edc:por="xxxxxxxx" edc:mclr="xxxxxxxx" edc:desc="General-Purpose Register" edc:nmmrid="11"/>
        <edc:SFRDef edc:nzwidth="0x8" edc:cname="R12" edc:impl="0xFF" edc:access="nnnnnnnn" edc:por="xxxxxxxx" edc:mclr="xxxxxxxx" edc:desc="General-Purpose Register" edc:nmmrid="12"/>
        <edc:SFRDef edc:nzwidth="0x8" edc:cname="R13" edc:impl="0xFF" edc:access="nnnnnnnn" edc:por="xxxxxxxx" edc:mclr="xxxxxxxx" edc:desc="General-Purpose Register" edc:nmmrid="13"/>
        <edc:SFRDef edc:nzwidth="0x8" edc:cname="R14" edc:impl="0xFF" edc:access="nnnnnnnn" edc:por="xxxxxxxx" edc:mclr="xxxxxxxx" edc:desc="General-Purpose Register" edc:nmmrid="14"/>
        <edc:SFRDef edc:nzwidth="0x8" edc:cname="R15" edc:impl="0xFF" edc:access="nnnnnnnn" edc:por="xxxxxxxx" edc:mclr="xxxxxxxx" edc:desc="General-Purpose Register" edc:nmmrid="15"/>
        <edc:SFRDef edc:nzwidth="0x8" edc:cname="R16" edc:impl="0xFF" edc:access="nnnnnnnn" edc:por="xxxxxxxx" edc:mclr="xxxxxxxx" edc:desc="General-Purpose Register" edc:nmmrid="16"/>
        <edc:SFRDef edc:nzwidth="0x8" edc:cname="R17" edc:impl="0xFF" edc:access="nnnnnnnn" edc:por="xxxxxxxx" edc:mclr="xxxxxxxx" edc:desc="General-Purpose Register" edc:nmmrid="17"/>
        <edc:SFRDef edc:nzwidth="0x8" edc:cname="R18" edc:impl="0xFF" edc:access="nnnnnnnn" edc:por="xxxxxxxx" edc:mclr="xxxxxxxx" edc:desc="General-Purpose Register" edc:nmmrid="18"/>
        <edc:SFRDef edc:nzwidth="0x8" edc:cname="R19" edc:impl="0xFF" edc:access="nnnnnnnn" edc:por="xxxxxxxx" edc:mclr="xxxxxxxx" edc:desc="General-Purpose Register" edc:nmmrid="19"/>
        <edc:SFRDef edc:nzwidth="0x8" edc:cname="R20" edc:impl="0xFF" edc:access="nnnnnnnn" edc:por="xxxxxxxx" edc:mclr="xxxxxxxx" edc:desc="General-Purpose Register" edc:nmmrid="20"/>
        <edc:SFRDef edc:nzwidth="0x8" edc:cname="R21" edc:impl="0xFF" edc:access="nnnnnnnn" edc:por="xxxxxxxx" edc:mclr="xxxxxxxx" edc:desc="General-Purpose Register" edc:nmmrid="21"/>
        <edc:SFRDef edc:nzwidth="0x8" edc:cname="R22" edc:impl="0xFF" edc:access="nnnnnnnn" edc:por="xxxxxxxx" edc:mclr="xxxxxxxx" edc:desc="General-Purpose Register" edc:nmmrid="22"/>
        <edc:SFRDef edc:nzwidth="0x8" edc:cname="R23" edc:impl="0xFF" edc:access="nnnnnnnn" edc:por="xxxxxxxx" edc:mclr="xxxxxxxx" edc:desc="General-Purpose Register" edc:nmmrid="23"/>
        <edc:SFRDef edc:nzwidth="0x8" edc:cname="R24" edc:impl="0xFF" edc:access="nnnnnnnn" edc:por="xxxxxxxx" edc:mclr="xxxxxxxx" edc:desc="General-Purpose Register" edc:nmmrid="24"/>
        <edc:SFRDef edc:nzwidth="0x8" edc:cname="R25" edc:impl="0xFF" edc:access="nnnnnnnn" edc:por="xxxxxxxx" edc:mclr="xxxxxxxx" edc:desc="General-Purpose Register" edc:nmmrid="25"/>
        <edc:SFRDef edc:nzwidth="0x8" edc:cname="R26" edc:impl="0xFF" edc:access="nnnnnnnn" edc:por="xxxxxxxx" edc:mclr="xxxxxxxx" edc:desc="General-Purpose Register" edc:nmmrid="26"/>
        <edc:SFRDef edc:nzwidth="0x8" edc:cname="R27" edc:impl="0xFF" edc:access="nnnnnnnn" edc:por="xxxxxxxx" edc:mclr="xxxxxxxx" edc:desc="General-Purpose Register" edc:nmmrid="27"/>
        <edc:SFRDef edc:nzwidth="0x8" edc:cname="R28" edc:impl="0xFF" edc:access="nnnnnnnn" edc:por="xxxxxxxx" edc:mclr="xxxxxxxx" edc:desc="General-Purpose Register" edc:nmmrid="28"/>
        <edc:SFRDef edc:nzwidth="0x8" edc:cname="R29" edc:impl="0xFF" edc:access="nnnnnnnn" edc:por="xxxxxxxx" edc:mclr="xxxxxxxx" edc:desc="General-Purpose Register" edc:nmmrid="29"/>
        <edc:SFRDef edc:nzwidth="0x8" edc:cname="R30" edc:impl="0xFF" edc:access="nnnnnnnn" edc:por="xxxxxxxx" edc:mclr="xxxxxxxx" edc:desc="General-Purpose Register" edc:nmmrid="30"/>
        <edc:SFRDef edc:nzwidth="0x8" edc:cname="R31" edc:impl="0xFF" edc:access="nnnnnnnn" edc:por="xxxxxxxx" edc:mclr="xxxxxxxx" edc:desc="General-Purpose Register" edc:nmmrid="31"/>
      </edc:NMMRPlace>
      <edc:SFRDataSector edc:regionid="IO" edc:beginaddr="0x0" edc:endaddr="0x100A" edc:rw="rw">
        <edc:SFRDef ltx:memberofperipheral="VPORTA" edc:cname="DIR" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x0"/>
        <edc:SFRDef ltx:memberofperipheral="VPORTA" edc:cname="OUT" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1"/>
        <edc:SFRDef ltx:memberofperipheral="VPORTA" edc:cname="IN" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x2"/>
        <edc:SFRDef ltx:memberofperipheral="VPORTA" edc:cname="INTFLAGS" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x3">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="VPORTA">
              <edc:SFRFieldDef edc:cname="INT" edc:nzwidth="0x8" edc:desc="Pin Interrupt"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="VPORTB" edc:cname="DIR" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x4"/>
        <edc:SFRDef ltx:memberofperipheral="VPORTB" edc:cname="OUT" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x5"/>
        <edc:SFRDef ltx:memberofperipheral="VPORTB" edc:cname="IN" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x6"/>
        <edc:SFRDef ltx:memberofperipheral="VPORTB" edc:cname="INTFLAGS" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x7">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="VPORTB">
              <edc:SFRFieldDef edc:cname="INT" edc:nzwidth="0x8" edc:desc="Pin Interrupt"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="VPORTC" edc:cname="DIR" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x8"/>
        <edc:SFRDef ltx:memberofperipheral="VPORTC" edc:cname="OUT" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x9"/>
        <edc:SFRDef ltx:memberofperipheral="VPORTC" edc:cname="IN" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0xA"/>
        <edc:SFRDef ltx:memberofperipheral="VPORTC" edc:cname="INTFLAGS" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0xB">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="VPORTC">
              <edc:SFRFieldDef edc:cname="INT" edc:nzwidth="0x8" edc:desc="Pin Interrupt"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:AdjustPoint edc:offset="0x10" edc:_addr="0xC"/>
        <edc:SFRDef ltx:memberofperipheral="GPIO" edc:cname="GPIOR0" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1C"/>
        <edc:SFRDef ltx:memberofperipheral="GPIO" edc:cname="GPIOR1" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1D"/>
        <edc:SFRDef ltx:memberofperipheral="GPIO" edc:cname="GPIOR2" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1E"/>
        <edc:SFRDef ltx:memberofperipheral="GPIO" edc:cname="GPIOR3" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1F"/>
        <edc:AdjustPoint edc:offset="0x14" edc:_addr="0x20"/>
        <edc:SFRDef ltx:memberofperipheral="CPU" edc:cname="CCP" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x34">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="CPU">
              <edc:SFRFieldDef edc:cname="CCP" edc:nzwidth="0x8" edc:desc="CCP signature">
                <edc:SFRFieldSemantic edc:cname="SPM" edc:desc="SPM Instruction Protection" edc:when="(field &amp; 0xFF) == 0x9D"/>
                <edc:SFRFieldSemantic edc:cname="IOREG" edc:desc="IO Register Protection" edc:when="(field &amp; 0xFF) == 0xD8"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:AdjustPoint edc:offset="0x8" edc:_addr="0x35"/>
        <edc:SFRDef ltx:memberofperipheral="CPU" edc:cname="SP" edc:nzwidth="0x10" edc:access="nnnnnnnnnnnnnnnn" edc:_addr="0x3D"/>
        <edc:SFRDef ltx:memberofperipheral="CPU" edc:cname="SREG" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x3F">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="CPU">
              <edc:SFRFieldDef edc:cname="C" edc:nzwidth="0x1" edc:desc="Carry Flag"/>
              <edc:SFRFieldDef edc:cname="Z" edc:nzwidth="0x1" edc:desc="Zero Flag"/>
              <edc:SFRFieldDef edc:cname="N" edc:nzwidth="0x1" edc:desc="Negative Flag"/>
              <edc:SFRFieldDef edc:cname="V" edc:nzwidth="0x1" edc:desc="Two's Complement Overflow Flag"/>
              <edc:SFRFieldDef edc:cname="S" edc:nzwidth="0x1" edc:desc="N Exclusive Or V Flag"/>
              <edc:SFRFieldDef edc:cname="H" edc:nzwidth="0x1" edc:desc="Half Carry Flag"/>
              <edc:SFRFieldDef edc:cname="T" edc:nzwidth="0x1" edc:desc="Transfer Bit"/>
              <edc:SFRFieldDef edc:cname="I" edc:nzwidth="0x1" edc:desc="Global Interrupt Enable Flag"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="RSTCTRL" edc:cname="RSTFR" edc:nzwidth="0x8" edc:access="--nnnnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3F" edc:_addr="0x40">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="RSTCTRL">
              <edc:SFRFieldDef edc:cname="PORF" edc:nzwidth="0x1" edc:desc="Power on Reset flag"/>
              <edc:SFRFieldDef edc:cname="BORF" edc:nzwidth="0x1" edc:desc="Brown out detector Reset flag"/>
              <edc:SFRFieldDef edc:cname="EXTRF" edc:nzwidth="0x1" edc:desc="External Reset flag"/>
              <edc:SFRFieldDef edc:cname="WDRF" edc:nzwidth="0x1" edc:desc="Watch dog Reset flag"/>
              <edc:SFRFieldDef edc:cname="SWRF" edc:nzwidth="0x1" edc:desc="Software Reset flag"/>
              <edc:SFRFieldDef edc:cname="UPDIRF" edc:nzwidth="0x1" edc:desc="UPDI Reset flag"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="RSTCTRL" edc:cname="SWRR" edc:nzwidth="0x8" edc:access="-------n" edc:por="00000000" edc:mclr="00000000" edc:impl="0x1" edc:_addr="0x41">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="RSTCTRL">
              <edc:SFRFieldDef edc:cname="SWRE" edc:nzwidth="0x1" edc:desc="Software reset enable"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:AdjustPoint edc:offset="0xE" edc:_addr="0x42"/>
        <edc:SFRDef ltx:memberofperipheral="SLPCTRL" edc:cname="CTRLA" edc:nzwidth="0x8" edc:access="-----nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x7" edc:_addr="0x50">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SLPCTRL">
              <edc:SFRFieldDef edc:cname="SEN" edc:nzwidth="0x1" edc:desc="Sleep enable"/>
              <edc:SFRFieldDef edc:cname="SMODE" edc:nzwidth="0x2" edc:desc="Sleep mode">
                <edc:SFRFieldSemantic edc:cname="IDLE" edc:desc="Idle mode" edc:when="(field &amp; 0x3) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="STDBY" edc:desc="Standby Mode" edc:when="(field &amp; 0x3) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="PDOWN" edc:desc="Power-down Mode" edc:when="(field &amp; 0x3) == 0x02"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:AdjustPoint edc:offset="0xF" edc:_addr="0x51"/>
        <edc:SFRDef ltx:memberofperipheral="CLKCTRL" edc:cname="MCLKCTRLA" edc:nzwidth="0x8" edc:access="n-----nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x83" edc:_addr="0x60">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="CLKCTRL">
              <edc:SFRFieldDef edc:cname="CLKSEL" edc:nzwidth="0x2" edc:desc="Clock">
                <edc:SFRFieldSemantic edc:cname="OSC20M" edc:desc="20MHz oscillator" edc:when="(field &amp; 0x3) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="OSCULP32K" edc:desc="32KHz oscillator" edc:when="(field &amp; 0x3) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="XOSC32K" edc:desc="32.768kHz crystal oscillator" edc:when="(field &amp; 0x3) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="EXTCLK" edc:desc="External clock" edc:when="(field &amp; 0x3) == 0x03"/>
              </edc:SFRFieldDef>
              <edc:AdjustPoint edc:offset="0x5"/>
              <edc:SFRFieldDef edc:cname="CLKOUT" edc:nzwidth="0x1" edc:desc="System clock out"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="CLKCTRL" edc:cname="MCLKCTRLB" edc:nzwidth="0x8" edc:access="---nnnnn" edc:por="00010001" edc:mclr="00010001" edc:impl="0x1F" edc:_addr="0x61">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="CLKCTRL">
              <edc:SFRFieldDef edc:cname="PEN" edc:nzwidth="0x1" edc:desc="Prescaler enable"/>
              <edc:SFRFieldDef edc:cname="PDIV" edc:nzwidth="0x4" edc:desc="Prescaler division">
                <edc:SFRFieldSemantic edc:cname="2X" edc:desc="2X" edc:when="(field &amp; 0xF) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="4X" edc:desc="4X" edc:when="(field &amp; 0xF) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="8X" edc:desc="8X" edc:when="(field &amp; 0xF) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="16X" edc:desc="16X" edc:when="(field &amp; 0xF) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="32X" edc:desc="32X" edc:when="(field &amp; 0xF) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="64X" edc:desc="64X" edc:when="(field &amp; 0xF) == 0x05"/>
                <edc:SFRFieldSemantic edc:cname="6X" edc:desc="6X" edc:when="(field &amp; 0xF) == 0x08"/>
                <edc:SFRFieldSemantic edc:cname="10X" edc:desc="10X" edc:when="(field &amp; 0xF) == 0x09"/>
                <edc:SFRFieldSemantic edc:cname="12X" edc:desc="12X" edc:when="(field &amp; 0xF) == 0x0A"/>
                <edc:SFRFieldSemantic edc:cname="24X" edc:desc="24X" edc:when="(field &amp; 0xF) == 0x0B"/>
                <edc:SFRFieldSemantic edc:cname="48X" edc:desc="48X" edc:when="(field &amp; 0xF) == 0x0C"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="CLKCTRL" edc:cname="MCLKLOCK" edc:nzwidth="0x8" edc:access="-------n" edc:impl="0x1" edc:_addr="0x62">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="CLKCTRL">
              <edc:SFRFieldDef edc:cname="LOCKEN" edc:nzwidth="0x1" edc:desc="lock ebable"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="CLKCTRL" edc:cname="MCLKSTATUS" edc:nzwidth="0x8" edc:access="rrrr---r" edc:impl="0xF1" edc:_addr="0x63">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="CLKCTRL">
              <edc:SFRFieldDef edc:cname="SOSC" edc:nzwidth="0x1" edc:desc="System Oscillator changing"/>
              <edc:AdjustPoint edc:offset="0x3"/>
              <edc:SFRFieldDef edc:cname="OSC20MS" edc:nzwidth="0x1" edc:desc="20MHz oscillator status"/>
              <edc:SFRFieldDef edc:cname="OSC32KS" edc:nzwidth="0x1" edc:desc="32KHz oscillator status"/>
              <edc:SFRFieldDef edc:cname="XOSC32KS" edc:nzwidth="0x1" edc:desc="32.768 kHz Crystal Oscillator status"/>
              <edc:SFRFieldDef edc:cname="EXTS" edc:nzwidth="0x1" edc:desc="External Clock status"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:AdjustPoint edc:offset="0xC" edc:_addr="0x64"/>
        <edc:SFRDef ltx:memberofperipheral="CLKCTRL" edc:cname="OSC20MCTRLA" edc:nzwidth="0x8" edc:access="------n-" edc:impl="0x2" edc:_addr="0x70">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="CLKCTRL">
              <edc:AdjustPoint edc:offset="0x1"/>
              <edc:SFRFieldDef edc:cname="RUNSTDBY" edc:nzwidth="0x1" edc:desc="Run standby"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="CLKCTRL" edc:cname="OSC20MCALIBA" edc:nzwidth="0x8" edc:access="-nnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x7F" edc:_addr="0x71">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="CLKCTRL">
              <edc:SFRFieldDef edc:cname="CAL20M" edc:nzwidth="0x7" edc:desc="Calibration"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="CLKCTRL" edc:cname="OSC20MCALIBB" edc:nzwidth="0x8" edc:access="n---nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x8F" edc:_addr="0x72">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="CLKCTRL">
              <edc:SFRFieldDef edc:cname="TEMPCAL20M" edc:nzwidth="0x4" edc:desc="Oscillator temperature coefficient"/>
              <edc:AdjustPoint edc:offset="0x3"/>
              <edc:SFRFieldDef edc:cname="LOCK" edc:nzwidth="0x1" edc:desc="Lock"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:AdjustPoint edc:offset="0x5" edc:_addr="0x73"/>
        <edc:SFRDef ltx:memberofperipheral="CLKCTRL" edc:cname="OSC32KCTRLA" edc:nzwidth="0x8" edc:access="------n-" edc:por="00000000" edc:mclr="00000000" edc:impl="0x2" edc:_addr="0x78">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="CLKCTRL">
              <edc:AdjustPoint edc:offset="0x1"/>
              <edc:SFRFieldDef edc:cname="RUNSTDBY" edc:nzwidth="0x1" edc:desc="Run standby"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:AdjustPoint edc:offset="0x3" edc:_addr="0x79"/>
        <edc:SFRDef ltx:memberofperipheral="CLKCTRL" edc:cname="XOSC32KCTRLA" edc:nzwidth="0x8" edc:access="--nn-nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x37" edc:_addr="0x7C">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="CLKCTRL">
              <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="Enable"/>
              <edc:SFRFieldDef edc:cname="RUNSTDBY" edc:nzwidth="0x1" edc:desc="Run standby"/>
              <edc:SFRFieldDef edc:cname="SEL" edc:nzwidth="0x1" edc:desc="Select"/>
              <edc:AdjustPoint edc:offset="0x1"/>
              <edc:SFRFieldDef edc:cname="CSUT" edc:nzwidth="0x2" edc:desc="Crystal startup time">
                <edc:SFRFieldSemantic edc:cname="1K" edc:desc="1k cycles" edc:when="(field &amp; 0x3) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="16K" edc:desc="16k cycles" edc:when="(field &amp; 0x3) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="32K" edc:desc="32k cycles" edc:when="(field &amp; 0x3) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="64K" edc:desc="64k cycles" edc:when="(field &amp; 0x3) == 0x03"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:AdjustPoint edc:offset="0x3" edc:_addr="0x7D"/>
        <edc:SFRDef ltx:memberofperipheral="BOD" edc:cname="CTRLA" edc:nzwidth="0x8" edc:access="---rrrnn" edc:por="00000101" edc:mclr="00000101" edc:impl="0x1F" edc:_addr="0x80">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="BOD">
              <edc:SFRFieldDef edc:cname="SLEEP" edc:nzwidth="0x2" edc:desc="Operation in sleep mode">
                <edc:SFRFieldSemantic edc:cname="DIS" edc:desc="Disabled" edc:when="(field &amp; 0x3) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Enabled" edc:when="(field &amp; 0x3) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="SAMPLED" edc:desc="Sampled" edc:when="(field &amp; 0x3) == 0x02"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="ACTIVE" edc:nzwidth="0x2" edc:desc="Operation in active mode">
                <edc:SFRFieldSemantic edc:cname="DIS" edc:desc="Disabled" edc:when="(field &amp; 0x3) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="ENABLED" edc:desc="Enabled" edc:when="(field &amp; 0x3) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="SAMPLED" edc:desc="Sampled" edc:when="(field &amp; 0x3) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="ENWAKE" edc:desc="Enabled with wake-up halted until BOD is ready" edc:when="(field &amp; 0x3) == 0x03"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="SAMPFREQ" edc:nzwidth="0x1" edc:desc="Sample frequency">
                <edc:SFRFieldSemantic edc:cname="1KHZ" edc:desc="1kHz sampling frequency" edc:when="(field &amp; 0x1) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="125HZ" edc:desc="125Hz sampling frequency" edc:when="(field &amp; 0x1) == 0x01"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="BOD" edc:cname="CTRLB" edc:nzwidth="0x8" edc:access="-----rrr" edc:por="00000000" edc:mclr="00000000" edc:impl="0x7" edc:_addr="0x81">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="BOD">
              <edc:SFRFieldDef edc:cname="LVL" edc:nzwidth="0x3" edc:desc="Bod level">
                <edc:SFRFieldSemantic edc:cname="BODLEVEL0" edc:desc="1.8 V" edc:when="(field &amp; 0x7) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="BODLEVEL2" edc:desc="2.6 V" edc:when="(field &amp; 0x7) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="BODLEVEL7" edc:desc="4.2 V" edc:when="(field &amp; 0x7) == 0x07"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:AdjustPoint edc:offset="0x6" edc:_addr="0x82"/>
        <edc:SFRDef ltx:memberofperipheral="BOD" edc:cname="VLMCTRLA" edc:nzwidth="0x8" edc:access="------nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3" edc:_addr="0x88">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="BOD">
              <edc:SFRFieldDef edc:cname="VLMLVL" edc:nzwidth="0x2" edc:desc="voltage level monitor level">
                <edc:SFRFieldSemantic edc:cname="5ABOVE" edc:desc="VLM threshold 5% above BOD level" edc:when="(field &amp; 0x3) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="15ABOVE" edc:desc="VLM threshold 15% above BOD level" edc:when="(field &amp; 0x3) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="25ABOVE" edc:desc="VLM threshold 25% above BOD level" edc:when="(field &amp; 0x3) == 0x02"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="BOD" edc:cname="INTCTRL" edc:nzwidth="0x8" edc:access="-----nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x7" edc:_addr="0x89">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="BOD">
              <edc:SFRFieldDef edc:cname="VLMIE" edc:nzwidth="0x1" edc:desc="voltage level monitor interrrupt enable"/>
              <edc:SFRFieldDef edc:cname="VLMCFG" edc:nzwidth="0x2" edc:desc="Configuration">
                <edc:SFRFieldSemantic edc:cname="BELOW" edc:desc="Interrupt when supply goes below VLM level" edc:when="(field &amp; 0x3) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="ABOVE" edc:desc="Interrupt when supply goes above VLM level" edc:when="(field &amp; 0x3) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="CROSS" edc:desc="Interrupt when supply crosses VLM level" edc:when="(field &amp; 0x3) == 0x02"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="BOD" edc:cname="INTFLAGS" edc:nzwidth="0x8" edc:access="-------n" edc:por="00000000" edc:mclr="00000000" edc:impl="0x1" edc:_addr="0x8A">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="BOD">
              <edc:SFRFieldDef edc:cname="VLMIF" edc:nzwidth="0x1" edc:desc="Voltage level monitor interrupt flag"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="BOD" edc:cname="STATUS" edc:nzwidth="0x8" edc:access="-------r" edc:por="00000000" edc:mclr="00000000" edc:impl="0x1" edc:_addr="0x8B">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="BOD">
              <edc:SFRFieldDef edc:cname="VLMS" edc:nzwidth="0x1" edc:desc="Voltage level monitor status"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:AdjustPoint edc:offset="0x14" edc:_addr="0x8C"/>
        <edc:SFRDef ltx:memberofperipheral="VREF" edc:cname="CTRLA" edc:nzwidth="0x8" edc:access="-----nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x7" edc:_addr="0xA0">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="VREF">
              <edc:SFRFieldDef edc:cname="AC0REFSEL" edc:nzwidth="0x3" edc:desc="AC0 reference select">
                <edc:SFRFieldSemantic edc:cname="1V024" edc:desc="Voltage reference at 1.024V" edc:when="(field &amp; 0x7) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="2V048" edc:desc="Voltage reference at 2.048V" edc:when="(field &amp; 0x7) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="2V5" edc:desc="Voltage reference at 2.5V" edc:when="(field &amp; 0x7) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="4V096" edc:desc="Voltage reference at 4.096V" edc:when="(field &amp; 0x7) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="AVDD" edc:desc="voltage reference at supply" edc:when="(field &amp; 0x7) == 0x07"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="VREF" edc:cname="CTRLB" edc:nzwidth="0x8" edc:access="-----nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x7" edc:_addr="0xA1">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="VREF">
              <edc:SFRFieldDef edc:cname="AC0REFEN" edc:nzwidth="0x1" edc:desc="AC0 DACREF reference enable"/>
              <edc:SFRFieldDef edc:cname="ADC0REFEN" edc:nzwidth="0x1" edc:desc="ADC0 reference enable"/>
              <edc:SFRFieldDef edc:cname="NVMREFEN" edc:nzwidth="0x1" edc:desc="NVM reference enable"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:AdjustPoint edc:offset="0x5E" edc:_addr="0xA2"/>
        <edc:SFRDef ltx:memberofperipheral="WDT" edc:cname="CTRLA" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x100">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="WDT">
              <edc:SFRFieldDef edc:cname="PERIOD" edc:nzwidth="0x4" edc:desc="Period">
                <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="Off" edc:when="(field &amp; 0xF) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="8CLK" edc:desc="8 cycles (8ms)" edc:when="(field &amp; 0xF) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="16CLK" edc:desc="16 cycles (16ms)" edc:when="(field &amp; 0xF) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="32CLK" edc:desc="32 cycles (32ms)" edc:when="(field &amp; 0xF) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="64CLK" edc:desc="64 cycles (64ms)" edc:when="(field &amp; 0xF) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="128CLK" edc:desc="128 cycles (0.128s)" edc:when="(field &amp; 0xF) == 0x05"/>
                <edc:SFRFieldSemantic edc:cname="256CLK" edc:desc="256 cycles (0.256s)" edc:when="(field &amp; 0xF) == 0x06"/>
                <edc:SFRFieldSemantic edc:cname="512CLK" edc:desc="512 cycles (0.512s)" edc:when="(field &amp; 0xF) == 0x07"/>
                <edc:SFRFieldSemantic edc:cname="1KCLK" edc:desc="1K cycles (1.0s)" edc:when="(field &amp; 0xF) == 0x08"/>
                <edc:SFRFieldSemantic edc:cname="2KCLK" edc:desc="2K cycles (2.0s)" edc:when="(field &amp; 0xF) == 0x09"/>
                <edc:SFRFieldSemantic edc:cname="4KCLK" edc:desc="4K cycles (4.1s)" edc:when="(field &amp; 0xF) == 0x0A"/>
                <edc:SFRFieldSemantic edc:cname="8KCLK" edc:desc="8K cycles (8.2s)" edc:when="(field &amp; 0xF) == 0x0B"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="WINDOW" edc:nzwidth="0x4" edc:desc="Window">
                <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="Off" edc:when="(field &amp; 0xF) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="8CLK" edc:desc="8 cycles (8ms)" edc:when="(field &amp; 0xF) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="16CLK" edc:desc="16 cycles (16ms)" edc:when="(field &amp; 0xF) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="32CLK" edc:desc="32 cycles (32ms)" edc:when="(field &amp; 0xF) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="64CLK" edc:desc="64 cycles (64ms)" edc:when="(field &amp; 0xF) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="128CLK" edc:desc="128 cycles (0.128s)" edc:when="(field &amp; 0xF) == 0x05"/>
                <edc:SFRFieldSemantic edc:cname="256CLK" edc:desc="256 cycles (0.256s)" edc:when="(field &amp; 0xF) == 0x06"/>
                <edc:SFRFieldSemantic edc:cname="512CLK" edc:desc="512 cycles (0.512s)" edc:when="(field &amp; 0xF) == 0x07"/>
                <edc:SFRFieldSemantic edc:cname="1KCLK" edc:desc="1K cycles (1.0s)" edc:when="(field &amp; 0xF) == 0x08"/>
                <edc:SFRFieldSemantic edc:cname="2KCLK" edc:desc="2K cycles (2.0s)" edc:when="(field &amp; 0xF) == 0x09"/>
                <edc:SFRFieldSemantic edc:cname="4KCLK" edc:desc="4K cycles (4.1s)" edc:when="(field &amp; 0xF) == 0x0A"/>
                <edc:SFRFieldSemantic edc:cname="8KCLK" edc:desc="8K cycles (8.2s)" edc:when="(field &amp; 0xF) == 0x0B"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="WDT" edc:cname="STATUS" edc:nzwidth="0x8" edc:access="n------r" edc:por="00000000" edc:mclr="00000000" edc:impl="0x81" edc:_addr="0x101">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="WDT">
              <edc:SFRFieldDef edc:cname="SYNCBUSY" edc:nzwidth="0x1" edc:desc="Syncronization busy"/>
              <edc:AdjustPoint edc:offset="0x6"/>
              <edc:SFRFieldDef edc:cname="LOCK" edc:nzwidth="0x1" edc:desc="Lock enable"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:AdjustPoint edc:offset="0xE" edc:_addr="0x102"/>
        <edc:SFRDef ltx:memberofperipheral="CPUINT" edc:cname="CTRLA" edc:nzwidth="0x8" edc:access="-nn----n" edc:por="00000000" edc:mclr="00000000" edc:impl="0x61" edc:_addr="0x110">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="CPUINT">
              <edc:SFRFieldDef edc:cname="LVL0RR" edc:nzwidth="0x1" edc:desc="Round-robin Scheduling Enable"/>
              <edc:AdjustPoint edc:offset="0x4"/>
              <edc:SFRFieldDef edc:cname="CVT" edc:nzwidth="0x1" edc:desc="Compact Vector Table"/>
              <edc:SFRFieldDef edc:cname="IVSEL" edc:nzwidth="0x1" edc:desc="Interrupt Vector Select"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="CPUINT" edc:cname="STATUS" edc:nzwidth="0x8" edc:access="r-----rr" edc:por="00000000" edc:mclr="00000000" edc:impl="0x83" edc:_addr="0x111">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="CPUINT">
              <edc:SFRFieldDef edc:cname="LVL0EX" edc:nzwidth="0x1" edc:desc="Level 0 Interrupt Executing"/>
              <edc:SFRFieldDef edc:cname="LVL1EX" edc:nzwidth="0x1" edc:desc="Level 1 Interrupt Executing"/>
              <edc:AdjustPoint edc:offset="0x5"/>
              <edc:SFRFieldDef edc:cname="NMIEX" edc:nzwidth="0x1" edc:desc="Non-maskable Interrupt Executing"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="CPUINT" edc:cname="LVL0PRI" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x112">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="CPUINT">
              <edc:SFRFieldDef edc:cname="LVL0PRI" edc:nzwidth="0x8" edc:desc="Interrupt Level Priority"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="CPUINT" edc:cname="LVL1VEC" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x113">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="CPUINT">
              <edc:SFRFieldDef edc:cname="LVL1VEC" edc:nzwidth="0x8" edc:desc="Interrupt Vector with High Priority"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:AdjustPoint edc:offset="0xC" edc:_addr="0x114"/>
        <edc:SFRDef ltx:memberofperipheral="CRCSCAN" edc:cname="CTRLA" edc:nzwidth="0x8" edc:access="n-----nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x83" edc:_addr="0x120">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="CRCSCAN">
              <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="Enable CRC scan"/>
              <edc:SFRFieldDef edc:cname="NMIEN" edc:nzwidth="0x1" edc:desc="Enable NMI Trigger"/>
              <edc:AdjustPoint edc:offset="0x5"/>
              <edc:SFRFieldDef edc:cname="RESET" edc:nzwidth="0x1" edc:desc="Reset CRC scan"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="CRCSCAN" edc:cname="CTRLB" edc:nzwidth="0x8" edc:access="--nn--nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x33" edc:_addr="0x121">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="CRCSCAN">
              <edc:SFRFieldDef edc:cname="SRC" edc:nzwidth="0x2" edc:desc="CRC Source">
                <edc:SFRFieldSemantic edc:cname="FLASH" edc:desc="CRC on entire flash" edc:when="(field &amp; 0x3) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="APPLICATION" edc:desc="CRC on boot and appl section of flash" edc:when="(field &amp; 0x3) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="BOOT" edc:desc="CRC on boot section of flash" edc:when="(field &amp; 0x3) == 0x02"/>
              </edc:SFRFieldDef>
              <edc:AdjustPoint edc:offset="0x2"/>
              <edc:SFRFieldDef edc:cname="MODE" edc:nzwidth="0x2" edc:desc="CRC Flash Access Mode">
                <edc:SFRFieldSemantic edc:cname="PRIORITY" edc:desc="Priority to flash" edc:when="(field &amp; 0x3) == 0x00"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="CRCSCAN" edc:cname="STATUS" edc:nzwidth="0x8" edc:access="------rr" edc:por="00000010" edc:mclr="00000010" edc:impl="0x3" edc:_addr="0x122">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="CRCSCAN">
              <edc:SFRFieldDef edc:cname="BUSY" edc:nzwidth="0x1" edc:desc="CRC Busy"/>
              <edc:SFRFieldDef edc:cname="OK" edc:nzwidth="0x1" edc:desc="CRC Ok"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:AdjustPoint edc:offset="0x1D" edc:_addr="0x123"/>
        <edc:SFRDef ltx:memberofperipheral="RTC" edc:cname="CTRLA" edc:nzwidth="0x8" edc:access="nnnnnn-n" edc:por="00000000" edc:mclr="00000000" edc:impl="0xFD" edc:_addr="0x140">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="RTC">
              <edc:SFRFieldDef edc:cname="RTCEN" edc:nzwidth="0x1" edc:desc="Enable"/>
              <edc:AdjustPoint edc:offset="0x1"/>
              <edc:SFRFieldDef edc:cname="CORREN" edc:nzwidth="0x1" edc:desc="Correction enable"/>
              <edc:SFRFieldDef edc:cname="PRESCALER" edc:nzwidth="0x4" edc:desc="Prescaling Factor">
                <edc:SFRFieldSemantic edc:cname="DIV1" edc:desc="RTC Clock / 1" edc:when="(field &amp; 0xF) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="DIV2" edc:desc="RTC Clock / 2" edc:when="(field &amp; 0xF) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="DIV4" edc:desc="RTC Clock / 4" edc:when="(field &amp; 0xF) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="DIV8" edc:desc="RTC Clock / 8" edc:when="(field &amp; 0xF) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="DIV16" edc:desc="RTC Clock / 16" edc:when="(field &amp; 0xF) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="DIV32" edc:desc="RTC Clock / 32" edc:when="(field &amp; 0xF) == 0x05"/>
                <edc:SFRFieldSemantic edc:cname="DIV64" edc:desc="RTC Clock / 64" edc:when="(field &amp; 0xF) == 0x06"/>
                <edc:SFRFieldSemantic edc:cname="DIV128" edc:desc="RTC Clock / 128" edc:when="(field &amp; 0xF) == 0x07"/>
                <edc:SFRFieldSemantic edc:cname="DIV256" edc:desc="RTC Clock / 256" edc:when="(field &amp; 0xF) == 0x08"/>
                <edc:SFRFieldSemantic edc:cname="DIV512" edc:desc="RTC Clock / 512" edc:when="(field &amp; 0xF) == 0x09"/>
                <edc:SFRFieldSemantic edc:cname="DIV1024" edc:desc="RTC Clock / 1024" edc:when="(field &amp; 0xF) == 0x0A"/>
                <edc:SFRFieldSemantic edc:cname="DIV2048" edc:desc="RTC Clock / 2048" edc:when="(field &amp; 0xF) == 0x0B"/>
                <edc:SFRFieldSemantic edc:cname="DIV4096" edc:desc="RTC Clock / 4096" edc:when="(field &amp; 0xF) == 0x0C"/>
                <edc:SFRFieldSemantic edc:cname="DIV8192" edc:desc="RTC Clock / 8192" edc:when="(field &amp; 0xF) == 0x0D"/>
                <edc:SFRFieldSemantic edc:cname="DIV16384" edc:desc="RTC Clock / 16384" edc:when="(field &amp; 0xF) == 0x0E"/>
                <edc:SFRFieldSemantic edc:cname="DIV32768" edc:desc="RTC Clock / 32768" edc:when="(field &amp; 0xF) == 0x0F"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="RUNSTDBY" edc:nzwidth="0x1" edc:desc="Run In Standby"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="RTC" edc:cname="STATUS" edc:nzwidth="0x8" edc:access="----rrrr" edc:por="00000000" edc:mclr="00000000" edc:impl="0xF" edc:_addr="0x141">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="RTC">
              <edc:SFRFieldDef edc:cname="CTRLABUSY" edc:nzwidth="0x1" edc:desc="CTRLA Synchronization Busy Flag"/>
              <edc:SFRFieldDef edc:cname="CNTBUSY" edc:nzwidth="0x1" edc:desc="Count Synchronization Busy Flag"/>
              <edc:SFRFieldDef edc:cname="PERBUSY" edc:nzwidth="0x1" edc:desc="Period Synchronization Busy Flag"/>
              <edc:SFRFieldDef edc:cname="CMPBUSY" edc:nzwidth="0x1" edc:desc="Comparator Synchronization Busy Flag"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="RTC" edc:cname="INTCTRL" edc:nzwidth="0x8" edc:access="------nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3" edc:_addr="0x142">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="RTC">
              <edc:SFRFieldDef edc:cname="OVF" edc:nzwidth="0x1" edc:desc="Overflow Interrupt enable"/>
              <edc:SFRFieldDef edc:cname="CMP" edc:nzwidth="0x1" edc:desc="Compare Match Interrupt enable"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="RTC" edc:cname="INTFLAGS" edc:nzwidth="0x8" edc:access="------nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3" edc:_addr="0x143">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="RTC">
              <edc:SFRFieldDef edc:cname="OVF" edc:nzwidth="0x1" edc:desc="Overflow Interrupt Flag"/>
              <edc:SFRFieldDef edc:cname="CMP" edc:nzwidth="0x1" edc:desc="Compare Match Interrupt"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="RTC" edc:cname="TEMP" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x144"/>
        <edc:SFRDef ltx:memberofperipheral="RTC" edc:cname="DBGCTRL" edc:nzwidth="0x8" edc:access="-------n" edc:por="00000000" edc:mclr="00000000" edc:impl="0x1" edc:_addr="0x145">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="RTC">
              <edc:SFRFieldDef edc:cname="DBGRUN" edc:nzwidth="0x1" edc:desc="Run in debug"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="RTC" edc:cname="CALIB" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x146">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="RTC">
              <edc:SFRFieldDef edc:cname="ERROR" edc:nzwidth="0x7" edc:desc="Error Correction Value"/>
              <edc:SFRFieldDef edc:cname="SIGN" edc:nzwidth="0x1" edc:desc="Error Correction Sign Bit"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="RTC" edc:cname="CLKSEL" edc:nzwidth="0x8" edc:access="------nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3" edc:_addr="0x147">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="RTC">
              <edc:SFRFieldDef edc:cname="CLKSEL" edc:nzwidth="0x2" edc:desc="Clock Select">
                <edc:SFRFieldSemantic edc:cname="INT32K" edc:desc="Internal 32kHz OSC" edc:when="(field &amp; 0x3) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="INT1K" edc:desc="Internal 1kHz OSC" edc:when="(field &amp; 0x3) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="TOSC32K" edc:desc="32KHz Crystal OSC" edc:when="(field &amp; 0x3) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="EXTCLK" edc:desc="External Clock" edc:when="(field &amp; 0x3) == 0x03"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="RTC" edc:cname="CNT" edc:nzwidth="0x10" edc:access="nnnnnnnnnnnnnnnn" edc:_addr="0x148"/>
        <edc:SFRDef ltx:memberofperipheral="RTC" edc:cname="PER" edc:nzwidth="0x10" edc:access="nnnnnnnnnnnnnnnn" edc:por="1111111111111111" edc:mclr="1111111111111111" edc:_addr="0x14A"/>
        <edc:SFRDef ltx:memberofperipheral="RTC" edc:cname="CMP" edc:nzwidth="0x10" edc:access="nnnnnnnnnnnnnnnn" edc:_addr="0x14C"/>
        <edc:AdjustPoint edc:offset="0x2" edc:_addr="0x14E"/>
        <edc:SFRDef ltx:memberofperipheral="RTC" edc:cname="PITCTRLA" edc:nzwidth="0x8" edc:access="-nnnn--n" edc:por="00000000" edc:mclr="00000000" edc:impl="0x79" edc:_addr="0x150">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="RTC">
              <edc:SFRFieldDef edc:cname="PITEN" edc:nzwidth="0x1" edc:desc="Enable"/>
              <edc:AdjustPoint edc:offset="0x2"/>
              <edc:SFRFieldDef edc:cname="PERIOD" edc:nzwidth="0x4" edc:desc="Period">
                <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="Off" edc:when="(field &amp; 0xF) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="CYC4" edc:desc="RTC Clock Cycles 4" edc:when="(field &amp; 0xF) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="CYC8" edc:desc="RTC Clock Cycles 8" edc:when="(field &amp; 0xF) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="CYC16" edc:desc="RTC Clock Cycles 16" edc:when="(field &amp; 0xF) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="CYC32" edc:desc="RTC Clock Cycles 32" edc:when="(field &amp; 0xF) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="CYC64" edc:desc="RTC Clock Cycles 64" edc:when="(field &amp; 0xF) == 0x05"/>
                <edc:SFRFieldSemantic edc:cname="CYC128" edc:desc="RTC Clock Cycles 128" edc:when="(field &amp; 0xF) == 0x06"/>
                <edc:SFRFieldSemantic edc:cname="CYC256" edc:desc="RTC Clock Cycles 256" edc:when="(field &amp; 0xF) == 0x07"/>
                <edc:SFRFieldSemantic edc:cname="CYC512" edc:desc="RTC Clock Cycles 512" edc:when="(field &amp; 0xF) == 0x08"/>
                <edc:SFRFieldSemantic edc:cname="CYC1024" edc:desc="RTC Clock Cycles 1024" edc:when="(field &amp; 0xF) == 0x09"/>
                <edc:SFRFieldSemantic edc:cname="CYC2048" edc:desc="RTC Clock Cycles 2048" edc:when="(field &amp; 0xF) == 0x0A"/>
                <edc:SFRFieldSemantic edc:cname="CYC4096" edc:desc="RTC Clock Cycles 4096" edc:when="(field &amp; 0xF) == 0x0B"/>
                <edc:SFRFieldSemantic edc:cname="CYC8192" edc:desc="RTC Clock Cycles 8192" edc:when="(field &amp; 0xF) == 0x0C"/>
                <edc:SFRFieldSemantic edc:cname="CYC16384" edc:desc="RTC Clock Cycles 16384" edc:when="(field &amp; 0xF) == 0x0D"/>
                <edc:SFRFieldSemantic edc:cname="CYC32768" edc:desc="RTC Clock Cycles 32768" edc:when="(field &amp; 0xF) == 0x0E"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="RTC" edc:cname="PITSTATUS" edc:nzwidth="0x8" edc:access="-------r" edc:por="00000000" edc:mclr="00000000" edc:impl="0x1" edc:_addr="0x151">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="RTC">
              <edc:SFRFieldDef edc:cname="CTRLBUSY" edc:nzwidth="0x1" edc:desc="CTRLA Synchronization Busy Flag"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="RTC" edc:cname="PITINTCTRL" edc:nzwidth="0x8" edc:access="-------n" edc:por="00000000" edc:mclr="00000000" edc:impl="0x1" edc:_addr="0x152">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="RTC">
              <edc:SFRFieldDef edc:cname="PI" edc:nzwidth="0x1" edc:desc="Periodic Interrupt"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="RTC" edc:cname="PITINTFLAGS" edc:nzwidth="0x8" edc:access="-------n" edc:por="00000000" edc:mclr="00000000" edc:impl="0x1" edc:_addr="0x153">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="RTC">
              <edc:SFRFieldDef edc:cname="PI" edc:nzwidth="0x1" edc:desc="Periodic Interrupt"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:AdjustPoint edc:offset="0x1" edc:_addr="0x154"/>
        <edc:SFRDef ltx:memberofperipheral="RTC" edc:cname="PITDBGCTRL" edc:nzwidth="0x8" edc:access="-------n" edc:por="00000000" edc:mclr="00000000" edc:impl="0x1" edc:_addr="0x155">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="RTC">
              <edc:SFRFieldDef edc:cname="DBGRUN" edc:nzwidth="0x1" edc:desc="Run in debug"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:AdjustPoint edc:offset="0x2A" edc:_addr="0x156"/>
        <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="SWEVENTA" edc:nzwidth="0x8" edc:access="wwwwwwww" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x180">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
              <edc:SFRFieldDef edc:cname="SWEVENTA" edc:nzwidth="0x8" edc:desc="Software event on channel">
                <edc:SFRFieldSemantic edc:cname="CH0" edc:desc="Software event on channel 0" edc:when="(field &amp; 0xFF) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="CH1" edc:desc="Software event on channel 1" edc:when="(field &amp; 0xFF) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="CH2" edc:desc="Software event on channel 2" edc:when="(field &amp; 0xFF) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="CH3" edc:desc="Software event on channel 3" edc:when="(field &amp; 0xFF) == 0x08"/>
                <edc:SFRFieldSemantic edc:cname="CH4" edc:desc="Software event on channel 4" edc:when="(field &amp; 0xFF) == 0x10"/>
                <edc:SFRFieldSemantic edc:cname="CH5" edc:desc="Software event on channel 5" edc:when="(field &amp; 0xFF) == 0x20"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:AdjustPoint edc:offset="0xF" edc:_addr="0x181"/>
        <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="CHANNEL0" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x190">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
              <edc:SFRFieldDef edc:cname="CHANNEL0" edc:nzwidth="0x8" edc:desc="Channel 0 generator select">
                <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="Off" edc:when="(field &amp; 0xFF) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="UPDI" edc:desc="Unified Program and Debug Interface" edc:when="(field &amp; 0xFF) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="RTC_OVF" edc:desc="Real Time Counter overflow" edc:when="(field &amp; 0xFF) == 0x06"/>
                <edc:SFRFieldSemantic edc:cname="RTC_CMP" edc:desc="Real Time Counter compare" edc:when="(field &amp; 0xFF) == 0x07"/>
                <edc:SFRFieldSemantic edc:cname="RTC_PIT_DIV8192" edc:desc="Periodic Interrupt Timer output 0" edc:when="(field &amp; 0xFF) == 0x08"/>
                <edc:SFRFieldSemantic edc:cname="RTC_PIT_DIV4096" edc:desc="Periodic Interrupt Timer output 1" edc:when="(field &amp; 0xFF) == 0x09"/>
                <edc:SFRFieldSemantic edc:cname="RTC_PIT_DIV2048" edc:desc="Periodic Interrupt Timer output 2" edc:when="(field &amp; 0xFF) == 0x0A"/>
                <edc:SFRFieldSemantic edc:cname="RTC_PIT_DIV1024" edc:desc="Periodic Interrupt Timer output 3" edc:when="(field &amp; 0xFF) == 0x0B"/>
                <edc:SFRFieldSemantic edc:cname="CCL_LUT0" edc:desc="Configurable Custom Logic LUT0" edc:when="(field &amp; 0xFF) == 0x10"/>
                <edc:SFRFieldSemantic edc:cname="CCL_LUT1" edc:desc="Configurable Custom Logic LUT1" edc:when="(field &amp; 0xFF) == 0x11"/>
                <edc:SFRFieldSemantic edc:cname="CCL_LUT2" edc:desc="Configurable Custom Logic LUT2" edc:when="(field &amp; 0xFF) == 0x12"/>
                <edc:SFRFieldSemantic edc:cname="CCL_LUT3" edc:desc="Configurable Custom Logic LUT3" edc:when="(field &amp; 0xFF) == 0x13"/>
                <edc:SFRFieldSemantic edc:cname="AC0_OUT" edc:desc="Analog Comparator 0 out" edc:when="(field &amp; 0xFF) == 0x20"/>
                <edc:SFRFieldSemantic edc:cname="ADC0_RES" edc:desc="ADC 0 Result ready event" edc:when="(field &amp; 0xFF) == 0x24"/>
                <edc:SFRFieldSemantic edc:cname="ADC0_SAMP" edc:desc="ADC 0 Sample ready event" edc:when="(field &amp; 0xFF) == 0x25"/>
                <edc:SFRFieldSemantic edc:cname="ADC0_WCMP" edc:desc="ADC 0 Window compare match event" edc:when="(field &amp; 0xFF) == 0x26"/>
                <edc:SFRFieldSemantic edc:cname="PORTA_PIN0" edc:desc="Port A Pin 0" edc:when="(field &amp; 0xFF) == 0x40"/>
                <edc:SFRFieldSemantic edc:cname="PORTA_PIN1" edc:desc="Port A Pin 1" edc:when="(field &amp; 0xFF) == 0x41"/>
                <edc:SFRFieldSemantic edc:cname="PORTA_PIN2" edc:desc="Port A Pin 2" edc:when="(field &amp; 0xFF) == 0x42"/>
                <edc:SFRFieldSemantic edc:cname="PORTA_PIN3" edc:desc="Port A Pin 3" edc:when="(field &amp; 0xFF) == 0x43"/>
                <edc:SFRFieldSemantic edc:cname="PORTA_PIN4" edc:desc="Port A Pin 4" edc:when="(field &amp; 0xFF) == 0x44"/>
                <edc:SFRFieldSemantic edc:cname="PORTA_PIN5" edc:desc="Port A Pin 5" edc:when="(field &amp; 0xFF) == 0x45"/>
                <edc:SFRFieldSemantic edc:cname="PORTA_PIN6" edc:desc="Port A Pin 6" edc:when="(field &amp; 0xFF) == 0x46"/>
                <edc:SFRFieldSemantic edc:cname="PORTA_PIN7" edc:desc="Port A Pin 7" edc:when="(field &amp; 0xFF) == 0x47"/>
                <edc:SFRFieldSemantic edc:cname="PORTB_PIN0" edc:desc="Port B Pin 0" edc:when="(field &amp; 0xFF) == 0x48"/>
                <edc:SFRFieldSemantic edc:cname="PORTB_PIN1" edc:desc="Port B Pin 1" edc:when="(field &amp; 0xFF) == 0x49"/>
                <edc:SFRFieldSemantic edc:cname="PORTB_PIN2" edc:desc="Port B Pin 2" edc:when="(field &amp; 0xFF) == 0x4A"/>
                <edc:SFRFieldSemantic edc:cname="PORTB_PIN3" edc:desc="Port B Pin 3" edc:when="(field &amp; 0xFF) == 0x4B"/>
                <edc:SFRFieldSemantic edc:cname="PORTB_PIN4" edc:desc="Port B Pin 4" edc:when="(field &amp; 0xFF) == 0x4C"/>
                <edc:SFRFieldSemantic edc:cname="PORTB_PIN5" edc:desc="Port B Pin 5" edc:when="(field &amp; 0xFF) == 0x4D"/>
                <edc:SFRFieldSemantic edc:cname="PORTB_PIN6" edc:desc="Port B Pin 6" edc:when="(field &amp; 0xFF) == 0x4E"/>
                <edc:SFRFieldSemantic edc:cname="PORTB_PIN7" edc:desc="Port B Pin 7" edc:when="(field &amp; 0xFF) == 0x4F"/>
                <edc:SFRFieldSemantic edc:cname="USART0_XCK" edc:desc="USART 0 XCK" edc:when="(field &amp; 0xFF) == 0x60"/>
                <edc:SFRFieldSemantic edc:cname="USART1_XCK" edc:desc="USART 1 XCK" edc:when="(field &amp; 0xFF) == 0x61"/>
                <edc:SFRFieldSemantic edc:cname="SPI0_SCK" edc:desc="SPI 0 Sclock" edc:when="(field &amp; 0xFF) == 0x68"/>
                <edc:SFRFieldSemantic edc:cname="TCA0_OVF_LUNF" edc:desc="Timer/Counter A0 overflow / low byte underflow" edc:when="(field &amp; 0xFF) == 0x80"/>
                <edc:SFRFieldSemantic edc:cname="TCA0_HUNF" edc:desc="Timer/Counter A0 high byte underflow" edc:when="(field &amp; 0xFF) == 0x81"/>
                <edc:SFRFieldSemantic edc:cname="TCA0_CMP0_LCMP0" edc:desc="Timer/Counter A0 compare 0 / low byte timer compare 0" edc:when="(field &amp; 0xFF) == 0x84"/>
                <edc:SFRFieldSemantic edc:cname="TCA0_CMP1_LCMP1" edc:desc="Timer/Counter A0 compare 1 / low byte timer compare 1" edc:when="(field &amp; 0xFF) == 0x85"/>
                <edc:SFRFieldSemantic edc:cname="TCA0_CMP2_LCMP2" edc:desc="Timer/Counter A0 compare 2 / low byte timer compare 2" edc:when="(field &amp; 0xFF) == 0x86"/>
                <edc:SFRFieldSemantic edc:cname="TCB0_CAPT" edc:desc="Timer/Counter B0 capture" edc:when="(field &amp; 0xFF) == 0xA0"/>
                <edc:SFRFieldSemantic edc:cname="TCB0_OVF" edc:desc="Timer/Counter B0 overflow" edc:when="(field &amp; 0xFF) == 0xA1"/>
                <edc:SFRFieldSemantic edc:cname="TCB1_CAPT" edc:desc="Timer/Counter B1 capture" edc:when="(field &amp; 0xFF) == 0xA2"/>
                <edc:SFRFieldSemantic edc:cname="TCB1_OVF" edc:desc="Timer/Counter B1 overflow" edc:when="(field &amp; 0xFF) == 0xA3"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="CHANNEL1" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x191">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
              <edc:SFRFieldDef edc:cname="CHANNEL1" edc:nzwidth="0x8" edc:desc="Channel 1 generator select">
                <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="Off" edc:when="(field &amp; 0xFF) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="UPDI" edc:desc="Unified Program and Debug Interface" edc:when="(field &amp; 0xFF) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="RTC_OVF" edc:desc="Real Time Counter overflow" edc:when="(field &amp; 0xFF) == 0x06"/>
                <edc:SFRFieldSemantic edc:cname="RTC_CMP" edc:desc="Real Time Counter compare" edc:when="(field &amp; 0xFF) == 0x07"/>
                <edc:SFRFieldSemantic edc:cname="RTC_PIT_DIV512" edc:desc="Periodic Interrupt Timer output 0" edc:when="(field &amp; 0xFF) == 0x08"/>
                <edc:SFRFieldSemantic edc:cname="RTC_PIT_DIV256" edc:desc="Periodic Interrupt Timer output 1" edc:when="(field &amp; 0xFF) == 0x09"/>
                <edc:SFRFieldSemantic edc:cname="RTC_PIT_DIV128" edc:desc="Periodic Interrupt Timer output 2" edc:when="(field &amp; 0xFF) == 0x0A"/>
                <edc:SFRFieldSemantic edc:cname="RTC_PIT_DIV64" edc:desc="Periodic Interrupt Timer output 3" edc:when="(field &amp; 0xFF) == 0x0B"/>
                <edc:SFRFieldSemantic edc:cname="CCL_LUT0" edc:desc="Configurable Custom Logic LUT0" edc:when="(field &amp; 0xFF) == 0x10"/>
                <edc:SFRFieldSemantic edc:cname="CCL_LUT1" edc:desc="Configurable Custom Logic LUT1" edc:when="(field &amp; 0xFF) == 0x11"/>
                <edc:SFRFieldSemantic edc:cname="CCL_LUT2" edc:desc="Configurable Custom Logic LUT2" edc:when="(field &amp; 0xFF) == 0x12"/>
                <edc:SFRFieldSemantic edc:cname="CCL_LUT3" edc:desc="Configurable Custom Logic LUT3" edc:when="(field &amp; 0xFF) == 0x13"/>
                <edc:SFRFieldSemantic edc:cname="AC0_OUT" edc:desc="Analog Comparator 0 out" edc:when="(field &amp; 0xFF) == 0x20"/>
                <edc:SFRFieldSemantic edc:cname="ADC0_RES" edc:desc="ADC 0 Result ready event" edc:when="(field &amp; 0xFF) == 0x24"/>
                <edc:SFRFieldSemantic edc:cname="ADC0_SAMP" edc:desc="ADC 0 Sample ready event" edc:when="(field &amp; 0xFF) == 0x25"/>
                <edc:SFRFieldSemantic edc:cname="ADC0_WCMP" edc:desc="ADC 0 Window compare match event" edc:when="(field &amp; 0xFF) == 0x26"/>
                <edc:SFRFieldSemantic edc:cname="PORTA_PIN0" edc:desc="Port A Pin 0" edc:when="(field &amp; 0xFF) == 0x40"/>
                <edc:SFRFieldSemantic edc:cname="PORTA_PIN1" edc:desc="Port A Pin 1" edc:when="(field &amp; 0xFF) == 0x41"/>
                <edc:SFRFieldSemantic edc:cname="PORTA_PIN2" edc:desc="Port A Pin 2" edc:when="(field &amp; 0xFF) == 0x42"/>
                <edc:SFRFieldSemantic edc:cname="PORTA_PIN3" edc:desc="Port A Pin 3" edc:when="(field &amp; 0xFF) == 0x43"/>
                <edc:SFRFieldSemantic edc:cname="PORTA_PIN4" edc:desc="Port A Pin 4" edc:when="(field &amp; 0xFF) == 0x44"/>
                <edc:SFRFieldSemantic edc:cname="PORTA_PIN5" edc:desc="Port A Pin 5" edc:when="(field &amp; 0xFF) == 0x45"/>
                <edc:SFRFieldSemantic edc:cname="PORTA_PIN6" edc:desc="Port A Pin 6" edc:when="(field &amp; 0xFF) == 0x46"/>
                <edc:SFRFieldSemantic edc:cname="PORTA_PIN7" edc:desc="Port A Pin 7" edc:when="(field &amp; 0xFF) == 0x47"/>
                <edc:SFRFieldSemantic edc:cname="PORTB_PIN0" edc:desc="Port B Pin 0" edc:when="(field &amp; 0xFF) == 0x48"/>
                <edc:SFRFieldSemantic edc:cname="PORTB_PIN1" edc:desc="Port B Pin 1" edc:when="(field &amp; 0xFF) == 0x49"/>
                <edc:SFRFieldSemantic edc:cname="PORTB_PIN2" edc:desc="Port B Pin 2" edc:when="(field &amp; 0xFF) == 0x4A"/>
                <edc:SFRFieldSemantic edc:cname="PORTB_PIN3" edc:desc="Port B Pin 3" edc:when="(field &amp; 0xFF) == 0x4B"/>
                <edc:SFRFieldSemantic edc:cname="PORTB_PIN4" edc:desc="Port B Pin 4" edc:when="(field &amp; 0xFF) == 0x4C"/>
                <edc:SFRFieldSemantic edc:cname="PORTB_PIN5" edc:desc="Port B Pin 5" edc:when="(field &amp; 0xFF) == 0x4D"/>
                <edc:SFRFieldSemantic edc:cname="PORTB_PIN6" edc:desc="Port B Pin 6" edc:when="(field &amp; 0xFF) == 0x4E"/>
                <edc:SFRFieldSemantic edc:cname="PORTB_PIN7" edc:desc="Port B Pin 7" edc:when="(field &amp; 0xFF) == 0x4F"/>
                <edc:SFRFieldSemantic edc:cname="USART0_XCK" edc:desc="USART 0 XCK" edc:when="(field &amp; 0xFF) == 0x60"/>
                <edc:SFRFieldSemantic edc:cname="USART1_XCK" edc:desc="USART 1 XCK" edc:when="(field &amp; 0xFF) == 0x61"/>
                <edc:SFRFieldSemantic edc:cname="SPI0_SCK" edc:desc="SPI 0 Sclock" edc:when="(field &amp; 0xFF) == 0x68"/>
                <edc:SFRFieldSemantic edc:cname="TCA0_OVF_LUNF" edc:desc="Timer/Counter A0 overflow / low byte underflow" edc:when="(field &amp; 0xFF) == 0x80"/>
                <edc:SFRFieldSemantic edc:cname="TCA0_HUNF" edc:desc="Timer/Counter A0 high byte underflow" edc:when="(field &amp; 0xFF) == 0x81"/>
                <edc:SFRFieldSemantic edc:cname="TCA0_CMP0_LCMP0" edc:desc="Timer/Counter A0 compare 0 / low byte timer compare 0" edc:when="(field &amp; 0xFF) == 0x84"/>
                <edc:SFRFieldSemantic edc:cname="TCA0_CMP1_LCMP1" edc:desc="Timer/Counter A0 compare 1 / low byte timer compare 1" edc:when="(field &amp; 0xFF) == 0x85"/>
                <edc:SFRFieldSemantic edc:cname="TCA0_CMP2_LCMP2" edc:desc="Timer/Counter A0 compare 2 / low byte timer compare 2" edc:when="(field &amp; 0xFF) == 0x86"/>
                <edc:SFRFieldSemantic edc:cname="TCB0_CAPT" edc:desc="Timer/Counter B0 capture" edc:when="(field &amp; 0xFF) == 0xA0"/>
                <edc:SFRFieldSemantic edc:cname="TCB0_OVF" edc:desc="Timer/Counter B0 overflow" edc:when="(field &amp; 0xFF) == 0xA1"/>
                <edc:SFRFieldSemantic edc:cname="TCB1_CAPT" edc:desc="Timer/Counter B1 capture" edc:when="(field &amp; 0xFF) == 0xA2"/>
                <edc:SFRFieldSemantic edc:cname="TCB1_OVF" edc:desc="Timer/Counter B1 overflow" edc:when="(field &amp; 0xFF) == 0xA3"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="CHANNEL2" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x192">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
              <edc:SFRFieldDef edc:cname="CHANNEL2" edc:nzwidth="0x8" edc:desc="Channel 2 generator select">
                <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="Off" edc:when="(field &amp; 0xFF) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="UPDI" edc:desc="Unified Program and Debug Interface" edc:when="(field &amp; 0xFF) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="RTC_OVF" edc:desc="Real Time Counter overflow" edc:when="(field &amp; 0xFF) == 0x06"/>
                <edc:SFRFieldSemantic edc:cname="RTC_CMP" edc:desc="Real Time Counter compare" edc:when="(field &amp; 0xFF) == 0x07"/>
                <edc:SFRFieldSemantic edc:cname="RTC_PIT_DIV8192" edc:desc="Periodic Interrupt Timer output 0" edc:when="(field &amp; 0xFF) == 0x08"/>
                <edc:SFRFieldSemantic edc:cname="RTC_PIT_DIV4096" edc:desc="Periodic Interrupt Timer output 1" edc:when="(field &amp; 0xFF) == 0x09"/>
                <edc:SFRFieldSemantic edc:cname="RTC_PIT_DIV2048" edc:desc="Periodic Interrupt Timer output 2" edc:when="(field &amp; 0xFF) == 0x0A"/>
                <edc:SFRFieldSemantic edc:cname="RTC_PIT_DIV1024" edc:desc="Periodic Interrupt Timer output 3" edc:when="(field &amp; 0xFF) == 0x0B"/>
                <edc:SFRFieldSemantic edc:cname="CCL_LUT0" edc:desc="Configurable Custom Logic LUT0" edc:when="(field &amp; 0xFF) == 0x10"/>
                <edc:SFRFieldSemantic edc:cname="CCL_LUT1" edc:desc="Configurable Custom Logic LUT1" edc:when="(field &amp; 0xFF) == 0x11"/>
                <edc:SFRFieldSemantic edc:cname="CCL_LUT2" edc:desc="Configurable Custom Logic LUT2" edc:when="(field &amp; 0xFF) == 0x12"/>
                <edc:SFRFieldSemantic edc:cname="CCL_LUT3" edc:desc="Configurable Custom Logic LUT3" edc:when="(field &amp; 0xFF) == 0x13"/>
                <edc:SFRFieldSemantic edc:cname="AC0_OUT" edc:desc="Analog Comparator 0 out" edc:when="(field &amp; 0xFF) == 0x20"/>
                <edc:SFRFieldSemantic edc:cname="ADC0_RES" edc:desc="ADC 0 Result ready event" edc:when="(field &amp; 0xFF) == 0x24"/>
                <edc:SFRFieldSemantic edc:cname="ADC0_SAMP" edc:desc="ADC 0 Sample ready event" edc:when="(field &amp; 0xFF) == 0x25"/>
                <edc:SFRFieldSemantic edc:cname="ADC0_WCMP" edc:desc="ADC 0 Window compare match event" edc:when="(field &amp; 0xFF) == 0x26"/>
                <edc:SFRFieldSemantic edc:cname="PORTC_PIN0" edc:desc="Port C Pin 0" edc:when="(field &amp; 0xFF) == 0x40"/>
                <edc:SFRFieldSemantic edc:cname="PORTC_PIN1" edc:desc="Port C Pin 1" edc:when="(field &amp; 0xFF) == 0x41"/>
                <edc:SFRFieldSemantic edc:cname="PORTC_PIN2" edc:desc="Port C Pin 2" edc:when="(field &amp; 0xFF) == 0x42"/>
                <edc:SFRFieldSemantic edc:cname="PORTC_PIN3" edc:desc="Port C Pin 3" edc:when="(field &amp; 0xFF) == 0x43"/>
                <edc:SFRFieldSemantic edc:cname="PORTC_PIN4" edc:desc="Port C Pin 4" edc:when="(field &amp; 0xFF) == 0x44"/>
                <edc:SFRFieldSemantic edc:cname="PORTC_PIN5" edc:desc="Port C Pin 5" edc:when="(field &amp; 0xFF) == 0x45"/>
                <edc:SFRFieldSemantic edc:cname="PORTA_PIN0" edc:desc="Port A Pin 0" edc:when="(field &amp; 0xFF) == 0x48"/>
                <edc:SFRFieldSemantic edc:cname="PORTA_PIN1" edc:desc="Port A Pin 1" edc:when="(field &amp; 0xFF) == 0x49"/>
                <edc:SFRFieldSemantic edc:cname="PORTA_PIN2" edc:desc="Port A Pin 2" edc:when="(field &amp; 0xFF) == 0x4A"/>
                <edc:SFRFieldSemantic edc:cname="PORTA_PIN3" edc:desc="Port A Pin 3" edc:when="(field &amp; 0xFF) == 0x4B"/>
                <edc:SFRFieldSemantic edc:cname="PORTA_PIN4" edc:desc="Port A Pin 4" edc:when="(field &amp; 0xFF) == 0x4C"/>
                <edc:SFRFieldSemantic edc:cname="PORTA_PIN5" edc:desc="Port A Pin 5" edc:when="(field &amp; 0xFF) == 0x4D"/>
                <edc:SFRFieldSemantic edc:cname="PORTA_PIN6" edc:desc="Port A Pin 6" edc:when="(field &amp; 0xFF) == 0x4E"/>
                <edc:SFRFieldSemantic edc:cname="PORTA_PIN7" edc:desc="Port A Pin 7" edc:when="(field &amp; 0xFF) == 0x4F"/>
                <edc:SFRFieldSemantic edc:cname="USART0_XCK" edc:desc="USART 0 XCK" edc:when="(field &amp; 0xFF) == 0x60"/>
                <edc:SFRFieldSemantic edc:cname="USART1_XCK" edc:desc="USART 1 XCK" edc:when="(field &amp; 0xFF) == 0x61"/>
                <edc:SFRFieldSemantic edc:cname="SPI0_SCK" edc:desc="SPI 0 Sclock" edc:when="(field &amp; 0xFF) == 0x68"/>
                <edc:SFRFieldSemantic edc:cname="TCA0_OVF_LUNF" edc:desc="Timer/Counter A0 overflow / low byte underflow" edc:when="(field &amp; 0xFF) == 0x80"/>
                <edc:SFRFieldSemantic edc:cname="TCA0_HUNF" edc:desc="Timer/Counter A0 high byte underflow" edc:when="(field &amp; 0xFF) == 0x81"/>
                <edc:SFRFieldSemantic edc:cname="TCA0_CMP0_LCMP0" edc:desc="Timer/Counter A0 compare 0 / low byte timer compare 0" edc:when="(field &amp; 0xFF) == 0x84"/>
                <edc:SFRFieldSemantic edc:cname="TCA0_CMP1_LCMP1" edc:desc="Timer/Counter A0 compare 1 / low byte timer compare 1" edc:when="(field &amp; 0xFF) == 0x85"/>
                <edc:SFRFieldSemantic edc:cname="TCA0_CMP2_LCMP2" edc:desc="Timer/Counter A0 compare 2 / low byte timer compare 2" edc:when="(field &amp; 0xFF) == 0x86"/>
                <edc:SFRFieldSemantic edc:cname="TCB0_CAPT" edc:desc="Timer/Counter B0 capture" edc:when="(field &amp; 0xFF) == 0xA0"/>
                <edc:SFRFieldSemantic edc:cname="TCB0_OVF" edc:desc="Timer/Counter B0 overflow" edc:when="(field &amp; 0xFF) == 0xA1"/>
                <edc:SFRFieldSemantic edc:cname="TCB1_CAPT" edc:desc="Timer/Counter B1 capture" edc:when="(field &amp; 0xFF) == 0xA2"/>
                <edc:SFRFieldSemantic edc:cname="TCB1_OVF" edc:desc="Timer/Counter B1 overflow" edc:when="(field &amp; 0xFF) == 0xA3"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="CHANNEL3" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x193">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
              <edc:SFRFieldDef edc:cname="CHANNEL3" edc:nzwidth="0x8" edc:desc="Channel 3 generator select">
                <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="Off" edc:when="(field &amp; 0xFF) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="UPDI" edc:desc="Unified Program and Debug Interface" edc:when="(field &amp; 0xFF) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="RTC_OVF" edc:desc="Real Time Counter overflow" edc:when="(field &amp; 0xFF) == 0x06"/>
                <edc:SFRFieldSemantic edc:cname="RTC_CMP" edc:desc="Real Time Counter compare" edc:when="(field &amp; 0xFF) == 0x07"/>
                <edc:SFRFieldSemantic edc:cname="RTC_PIT_DIV512" edc:desc="Periodic Interrupt Timer output 0" edc:when="(field &amp; 0xFF) == 0x08"/>
                <edc:SFRFieldSemantic edc:cname="RTC_PIT_DIV256" edc:desc="Periodic Interrupt Timer output 1" edc:when="(field &amp; 0xFF) == 0x09"/>
                <edc:SFRFieldSemantic edc:cname="RTC_PIT_DIV128" edc:desc="Periodic Interrupt Timer output 2" edc:when="(field &amp; 0xFF) == 0x0A"/>
                <edc:SFRFieldSemantic edc:cname="RTC_PIT_DIV64" edc:desc="Periodic Interrupt Timer output 3" edc:when="(field &amp; 0xFF) == 0x0B"/>
                <edc:SFRFieldSemantic edc:cname="CCL_LUT0" edc:desc="Configurable Custom Logic LUT0" edc:when="(field &amp; 0xFF) == 0x10"/>
                <edc:SFRFieldSemantic edc:cname="CCL_LUT1" edc:desc="Configurable Custom Logic LUT1" edc:when="(field &amp; 0xFF) == 0x11"/>
                <edc:SFRFieldSemantic edc:cname="CCL_LUT2" edc:desc="Configurable Custom Logic LUT2" edc:when="(field &amp; 0xFF) == 0x12"/>
                <edc:SFRFieldSemantic edc:cname="CCL_LUT3" edc:desc="Configurable Custom Logic LUT3" edc:when="(field &amp; 0xFF) == 0x13"/>
                <edc:SFRFieldSemantic edc:cname="AC0_OUT" edc:desc="Analog Comparator 0 out" edc:when="(field &amp; 0xFF) == 0x20"/>
                <edc:SFRFieldSemantic edc:cname="ADC0_RES" edc:desc="ADC 0 Result ready event" edc:when="(field &amp; 0xFF) == 0x24"/>
                <edc:SFRFieldSemantic edc:cname="ADC0_SAMP" edc:desc="ADC 0 Sample ready event" edc:when="(field &amp; 0xFF) == 0x25"/>
                <edc:SFRFieldSemantic edc:cname="ADC0_WCMP" edc:desc="ADC 0 Window compare match event" edc:when="(field &amp; 0xFF) == 0x26"/>
                <edc:SFRFieldSemantic edc:cname="PORTC_PIN0" edc:desc="Port C Pin 0" edc:when="(field &amp; 0xFF) == 0x40"/>
                <edc:SFRFieldSemantic edc:cname="PORTC_PIN1" edc:desc="Port C Pin 1" edc:when="(field &amp; 0xFF) == 0x41"/>
                <edc:SFRFieldSemantic edc:cname="PORTC_PIN2" edc:desc="Port C Pin 2" edc:when="(field &amp; 0xFF) == 0x42"/>
                <edc:SFRFieldSemantic edc:cname="PORTC_PIN3" edc:desc="Port C Pin 3" edc:when="(field &amp; 0xFF) == 0x43"/>
                <edc:SFRFieldSemantic edc:cname="PORTC_PIN4" edc:desc="Port C Pin 4" edc:when="(field &amp; 0xFF) == 0x44"/>
                <edc:SFRFieldSemantic edc:cname="PORTC_PIN5" edc:desc="Port C Pin 5" edc:when="(field &amp; 0xFF) == 0x45"/>
                <edc:SFRFieldSemantic edc:cname="PORTA_PIN0" edc:desc="Port A Pin 0" edc:when="(field &amp; 0xFF) == 0x48"/>
                <edc:SFRFieldSemantic edc:cname="PORTA_PIN1" edc:desc="Port A Pin 1" edc:when="(field &amp; 0xFF) == 0x49"/>
                <edc:SFRFieldSemantic edc:cname="PORTA_PIN2" edc:desc="Port A Pin 2" edc:when="(field &amp; 0xFF) == 0x4A"/>
                <edc:SFRFieldSemantic edc:cname="PORTA_PIN3" edc:desc="Port A Pin 3" edc:when="(field &amp; 0xFF) == 0x4B"/>
                <edc:SFRFieldSemantic edc:cname="PORTA_PIN4" edc:desc="Port A Pin 4" edc:when="(field &amp; 0xFF) == 0x4C"/>
                <edc:SFRFieldSemantic edc:cname="PORTA_PIN5" edc:desc="Port A Pin 5" edc:when="(field &amp; 0xFF) == 0x4D"/>
                <edc:SFRFieldSemantic edc:cname="PORTA_PIN6" edc:desc="Port A Pin 6" edc:when="(field &amp; 0xFF) == 0x4E"/>
                <edc:SFRFieldSemantic edc:cname="PORTA_PIN7" edc:desc="Port A Pin 7" edc:when="(field &amp; 0xFF) == 0x4F"/>
                <edc:SFRFieldSemantic edc:cname="USART0_XCK" edc:desc="USART 0 XCK" edc:when="(field &amp; 0xFF) == 0x60"/>
                <edc:SFRFieldSemantic edc:cname="USART1_XCK" edc:desc="USART 1 XCK" edc:when="(field &amp; 0xFF) == 0x61"/>
                <edc:SFRFieldSemantic edc:cname="SPI0_SCK" edc:desc="SPI 0 Sclock" edc:when="(field &amp; 0xFF) == 0x68"/>
                <edc:SFRFieldSemantic edc:cname="TCA0_OVF_LUNF" edc:desc="Timer/Counter A0 overflow / low byte underflow" edc:when="(field &amp; 0xFF) == 0x80"/>
                <edc:SFRFieldSemantic edc:cname="TCA0_HUNF" edc:desc="Timer/Counter A0 high byte underflow" edc:when="(field &amp; 0xFF) == 0x81"/>
                <edc:SFRFieldSemantic edc:cname="TCA0_CMP0_LCMP0" edc:desc="Timer/Counter A0 compare 0 / low byte timer compare 0" edc:when="(field &amp; 0xFF) == 0x84"/>
                <edc:SFRFieldSemantic edc:cname="TCA0_CMP1_LCMP1" edc:desc="Timer/Counter A0 compare 1 / low byte timer compare 1" edc:when="(field &amp; 0xFF) == 0x85"/>
                <edc:SFRFieldSemantic edc:cname="TCA0_CMP2_LCMP2" edc:desc="Timer/Counter A0 compare 2 / low byte timer compare 2" edc:when="(field &amp; 0xFF) == 0x86"/>
                <edc:SFRFieldSemantic edc:cname="TCB0_CAPT" edc:desc="Timer/Counter B0 capture" edc:when="(field &amp; 0xFF) == 0xA0"/>
                <edc:SFRFieldSemantic edc:cname="TCB0_OVF" edc:desc="Timer/Counter B0 overflow" edc:when="(field &amp; 0xFF) == 0xA1"/>
                <edc:SFRFieldSemantic edc:cname="TCB1_CAPT" edc:desc="Timer/Counter B1 capture" edc:when="(field &amp; 0xFF) == 0xA2"/>
                <edc:SFRFieldSemantic edc:cname="TCB1_OVF" edc:desc="Timer/Counter B1 overflow" edc:when="(field &amp; 0xFF) == 0xA3"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="CHANNEL4" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x194">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
              <edc:SFRFieldDef edc:cname="CHANNEL4" edc:nzwidth="0x8" edc:desc="Channel 4 generator select">
                <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="Off" edc:when="(field &amp; 0xFF) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="UPDI" edc:desc="Unified Program and Debug Interface" edc:when="(field &amp; 0xFF) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="RTC_OVF" edc:desc="Real Time Counter overflow" edc:when="(field &amp; 0xFF) == 0x06"/>
                <edc:SFRFieldSemantic edc:cname="RTC_CMP" edc:desc="Real Time Counter compare" edc:when="(field &amp; 0xFF) == 0x07"/>
                <edc:SFRFieldSemantic edc:cname="RTC_PIT_DIV8192" edc:desc="Periodic Interrupt Timer output 0" edc:when="(field &amp; 0xFF) == 0x08"/>
                <edc:SFRFieldSemantic edc:cname="RTC_PIT_DIV4096" edc:desc="Periodic Interrupt Timer output 1" edc:when="(field &amp; 0xFF) == 0x09"/>
                <edc:SFRFieldSemantic edc:cname="RTC_PIT_DIV2048" edc:desc="Periodic Interrupt Timer output 2" edc:when="(field &amp; 0xFF) == 0x0A"/>
                <edc:SFRFieldSemantic edc:cname="RTC_PIT_DIV1024" edc:desc="Periodic Interrupt Timer output 3" edc:when="(field &amp; 0xFF) == 0x0B"/>
                <edc:SFRFieldSemantic edc:cname="CCL_LUT0" edc:desc="Configurable Custom Logic LUT0" edc:when="(field &amp; 0xFF) == 0x10"/>
                <edc:SFRFieldSemantic edc:cname="CCL_LUT1" edc:desc="Configurable Custom Logic LUT1" edc:when="(field &amp; 0xFF) == 0x11"/>
                <edc:SFRFieldSemantic edc:cname="CCL_LUT2" edc:desc="Configurable Custom Logic LUT2" edc:when="(field &amp; 0xFF) == 0x12"/>
                <edc:SFRFieldSemantic edc:cname="CCL_LUT3" edc:desc="Configurable Custom Logic LUT3" edc:when="(field &amp; 0xFF) == 0x13"/>
                <edc:SFRFieldSemantic edc:cname="AC0_OUT" edc:desc="Analog Comparator 0 out" edc:when="(field &amp; 0xFF) == 0x20"/>
                <edc:SFRFieldSemantic edc:cname="ADC0_RES" edc:desc="ADC 0 Result ready event" edc:when="(field &amp; 0xFF) == 0x24"/>
                <edc:SFRFieldSemantic edc:cname="ADC0_SAMP" edc:desc="ADC 0 Sample ready event" edc:when="(field &amp; 0xFF) == 0x25"/>
                <edc:SFRFieldSemantic edc:cname="ADC0_WCMP" edc:desc="ADC 0 Window compare match event" edc:when="(field &amp; 0xFF) == 0x26"/>
                <edc:SFRFieldSemantic edc:cname="PORTB_PIN0" edc:desc="Port B Pin 0" edc:when="(field &amp; 0xFF) == 0x40"/>
                <edc:SFRFieldSemantic edc:cname="PORTB_PIN1" edc:desc="Port B Pin 1" edc:when="(field &amp; 0xFF) == 0x41"/>
                <edc:SFRFieldSemantic edc:cname="PORTB_PIN2" edc:desc="Port B Pin 2" edc:when="(field &amp; 0xFF) == 0x42"/>
                <edc:SFRFieldSemantic edc:cname="PORTB_PIN3" edc:desc="Port B Pin 3" edc:when="(field &amp; 0xFF) == 0x43"/>
                <edc:SFRFieldSemantic edc:cname="PORTB_PIN4" edc:desc="Port B Pin 4" edc:when="(field &amp; 0xFF) == 0x44"/>
                <edc:SFRFieldSemantic edc:cname="PORTB_PIN5" edc:desc="Port B Pin 5" edc:when="(field &amp; 0xFF) == 0x45"/>
                <edc:SFRFieldSemantic edc:cname="PORTB_PIN6" edc:desc="Port B Pin 6" edc:when="(field &amp; 0xFF) == 0x46"/>
                <edc:SFRFieldSemantic edc:cname="PORTB_PIN7" edc:desc="Port B Pin 7" edc:when="(field &amp; 0xFF) == 0x47"/>
                <edc:SFRFieldSemantic edc:cname="PORTC_PIN0" edc:desc="Port C Pin 0" edc:when="(field &amp; 0xFF) == 0x48"/>
                <edc:SFRFieldSemantic edc:cname="PORTC_PIN1" edc:desc="Port C Pin 1" edc:when="(field &amp; 0xFF) == 0x49"/>
                <edc:SFRFieldSemantic edc:cname="PORTC_PIN2" edc:desc="Port C Pin 2" edc:when="(field &amp; 0xFF) == 0x4A"/>
                <edc:SFRFieldSemantic edc:cname="PORTC_PIN3" edc:desc="Port C Pin 3" edc:when="(field &amp; 0xFF) == 0x4B"/>
                <edc:SFRFieldSemantic edc:cname="PORTC_PIN4" edc:desc="Port C Pin 4" edc:when="(field &amp; 0xFF) == 0x4C"/>
                <edc:SFRFieldSemantic edc:cname="PORTC_PIN5" edc:desc="Port C Pin 5" edc:when="(field &amp; 0xFF) == 0x4D"/>
                <edc:SFRFieldSemantic edc:cname="USART0_XCK" edc:desc="USART 0 XCK" edc:when="(field &amp; 0xFF) == 0x60"/>
                <edc:SFRFieldSemantic edc:cname="USART1_XCK" edc:desc="USART 1 XCK" edc:when="(field &amp; 0xFF) == 0x61"/>
                <edc:SFRFieldSemantic edc:cname="SPI0_SCK" edc:desc="SPI 0 Sclock" edc:when="(field &amp; 0xFF) == 0x68"/>
                <edc:SFRFieldSemantic edc:cname="TCA0_OVF_LUNF" edc:desc="Timer/Counter A0 overflow / low byte underflow" edc:when="(field &amp; 0xFF) == 0x80"/>
                <edc:SFRFieldSemantic edc:cname="TCA0_HUNF" edc:desc="Timer/Counter A0 high byte underflow" edc:when="(field &amp; 0xFF) == 0x81"/>
                <edc:SFRFieldSemantic edc:cname="TCA0_CMP0_LCMP0" edc:desc="Timer/Counter A0 compare 0 / low byte timer compare 0" edc:when="(field &amp; 0xFF) == 0x84"/>
                <edc:SFRFieldSemantic edc:cname="TCA0_CMP1_LCMP1" edc:desc="Timer/Counter A0 compare 1 / low byte timer compare 1" edc:when="(field &amp; 0xFF) == 0x85"/>
                <edc:SFRFieldSemantic edc:cname="TCA0_CMP2_LCMP2" edc:desc="Timer/Counter A0 compare 2 / low byte timer compare 2" edc:when="(field &amp; 0xFF) == 0x86"/>
                <edc:SFRFieldSemantic edc:cname="TCB0_CAPT" edc:desc="Timer/Counter B0 capture" edc:when="(field &amp; 0xFF) == 0xA0"/>
                <edc:SFRFieldSemantic edc:cname="TCB0_OVF" edc:desc="Timer/Counter B0 overflow" edc:when="(field &amp; 0xFF) == 0xA1"/>
                <edc:SFRFieldSemantic edc:cname="TCB1_CAPT" edc:desc="Timer/Counter B1 capture" edc:when="(field &amp; 0xFF) == 0xA2"/>
                <edc:SFRFieldSemantic edc:cname="TCB1_OVF" edc:desc="Timer/Counter B1 overflow" edc:when="(field &amp; 0xFF) == 0xA3"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="CHANNEL5" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x195">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
              <edc:SFRFieldDef edc:cname="CHANNEL5" edc:nzwidth="0x8" edc:desc="Channel 5 generator select">
                <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="Off" edc:when="(field &amp; 0xFF) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="UPDI" edc:desc="Unified Program and Debug Interface" edc:when="(field &amp; 0xFF) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="RTC_OVF" edc:desc="Real Time Counter overflow" edc:when="(field &amp; 0xFF) == 0x06"/>
                <edc:SFRFieldSemantic edc:cname="RTC_CMP" edc:desc="Real Time Counter compare" edc:when="(field &amp; 0xFF) == 0x07"/>
                <edc:SFRFieldSemantic edc:cname="RTC_PIT_DIV512" edc:desc="Periodic Interrupt Timer output 0" edc:when="(field &amp; 0xFF) == 0x08"/>
                <edc:SFRFieldSemantic edc:cname="RTC_PIT_DIV256" edc:desc="Periodic Interrupt Timer output 1" edc:when="(field &amp; 0xFF) == 0x09"/>
                <edc:SFRFieldSemantic edc:cname="RTC_PIT_DIV128" edc:desc="Periodic Interrupt Timer output 2" edc:when="(field &amp; 0xFF) == 0x0A"/>
                <edc:SFRFieldSemantic edc:cname="RTC_PIT_DIV64" edc:desc="Periodic Interrupt Timer output 3" edc:when="(field &amp; 0xFF) == 0x0B"/>
                <edc:SFRFieldSemantic edc:cname="CCL_LUT0" edc:desc="Configurable Custom Logic LUT0" edc:when="(field &amp; 0xFF) == 0x10"/>
                <edc:SFRFieldSemantic edc:cname="CCL_LUT1" edc:desc="Configurable Custom Logic LUT1" edc:when="(field &amp; 0xFF) == 0x11"/>
                <edc:SFRFieldSemantic edc:cname="CCL_LUT2" edc:desc="Configurable Custom Logic LUT2" edc:when="(field &amp; 0xFF) == 0x12"/>
                <edc:SFRFieldSemantic edc:cname="CCL_LUT3" edc:desc="Configurable Custom Logic LUT3" edc:when="(field &amp; 0xFF) == 0x13"/>
                <edc:SFRFieldSemantic edc:cname="AC0_OUT" edc:desc="Analog Comparator 0 out" edc:when="(field &amp; 0xFF) == 0x20"/>
                <edc:SFRFieldSemantic edc:cname="ADC0_RES" edc:desc="ADC 0 Result ready event" edc:when="(field &amp; 0xFF) == 0x24"/>
                <edc:SFRFieldSemantic edc:cname="ADC0_SAMP" edc:desc="ADC 0 Sample ready event" edc:when="(field &amp; 0xFF) == 0x25"/>
                <edc:SFRFieldSemantic edc:cname="ADC0_WCMP" edc:desc="ADC 0 Window compare match event" edc:when="(field &amp; 0xFF) == 0x26"/>
                <edc:SFRFieldSemantic edc:cname="PORTB_PIN0" edc:desc="Port B Pin 0" edc:when="(field &amp; 0xFF) == 0x40"/>
                <edc:SFRFieldSemantic edc:cname="PORTB_PIN1" edc:desc="Port B Pin 1" edc:when="(field &amp; 0xFF) == 0x41"/>
                <edc:SFRFieldSemantic edc:cname="PORTB_PIN2" edc:desc="Port B Pin 2" edc:when="(field &amp; 0xFF) == 0x42"/>
                <edc:SFRFieldSemantic edc:cname="PORTB_PIN3" edc:desc="Port B Pin 3" edc:when="(field &amp; 0xFF) == 0x43"/>
                <edc:SFRFieldSemantic edc:cname="PORTB_PIN4" edc:desc="Port B Pin 4" edc:when="(field &amp; 0xFF) == 0x44"/>
                <edc:SFRFieldSemantic edc:cname="PORTB_PIN5" edc:desc="Port B Pin 5" edc:when="(field &amp; 0xFF) == 0x45"/>
                <edc:SFRFieldSemantic edc:cname="PORTB_PIN6" edc:desc="Port B Pin 6" edc:when="(field &amp; 0xFF) == 0x46"/>
                <edc:SFRFieldSemantic edc:cname="PORTB_PIN7" edc:desc="Port B Pin 7" edc:when="(field &amp; 0xFF) == 0x47"/>
                <edc:SFRFieldSemantic edc:cname="PORTC_PIN0" edc:desc="Port C Pin 0" edc:when="(field &amp; 0xFF) == 0x48"/>
                <edc:SFRFieldSemantic edc:cname="PORTC_PIN1" edc:desc="Port C Pin 1" edc:when="(field &amp; 0xFF) == 0x49"/>
                <edc:SFRFieldSemantic edc:cname="PORTC_PIN2" edc:desc="Port C Pin 2" edc:when="(field &amp; 0xFF) == 0x4A"/>
                <edc:SFRFieldSemantic edc:cname="PORTC_PIN3" edc:desc="Port C Pin 3" edc:when="(field &amp; 0xFF) == 0x4B"/>
                <edc:SFRFieldSemantic edc:cname="PORTC_PIN4" edc:desc="Port C Pin 4" edc:when="(field &amp; 0xFF) == 0x4C"/>
                <edc:SFRFieldSemantic edc:cname="PORTC_PIN5" edc:desc="Port C Pin 5" edc:when="(field &amp; 0xFF) == 0x4D"/>
                <edc:SFRFieldSemantic edc:cname="USART0_XCK" edc:desc="USART 0 XCK" edc:when="(field &amp; 0xFF) == 0x60"/>
                <edc:SFRFieldSemantic edc:cname="USART1_XCK" edc:desc="USART 1 XCK" edc:when="(field &amp; 0xFF) == 0x61"/>
                <edc:SFRFieldSemantic edc:cname="SPI0_SCK" edc:desc="SPI 0 Sclock" edc:when="(field &amp; 0xFF) == 0x68"/>
                <edc:SFRFieldSemantic edc:cname="TCA0_OVF_LUNF" edc:desc="Timer/Counter A0 overflow / low byte underflow" edc:when="(field &amp; 0xFF) == 0x80"/>
                <edc:SFRFieldSemantic edc:cname="TCA0_HUNF" edc:desc="Timer/Counter A0 high byte underflow" edc:when="(field &amp; 0xFF) == 0x81"/>
                <edc:SFRFieldSemantic edc:cname="TCA0_CMP0_LCMP0" edc:desc="Timer/Counter A0 compare 0 / low byte timer compare 0" edc:when="(field &amp; 0xFF) == 0x84"/>
                <edc:SFRFieldSemantic edc:cname="TCA0_CMP1_LCMP1" edc:desc="Timer/Counter A0 compare 1 / low byte timer compare 1" edc:when="(field &amp; 0xFF) == 0x85"/>
                <edc:SFRFieldSemantic edc:cname="TCA0_CMP2_LCMP2" edc:desc="Timer/Counter A0 compare 2 / low byte timer compare 2" edc:when="(field &amp; 0xFF) == 0x86"/>
                <edc:SFRFieldSemantic edc:cname="TCB0_CAPT" edc:desc="Timer/Counter B0 capture" edc:when="(field &amp; 0xFF) == 0xA0"/>
                <edc:SFRFieldSemantic edc:cname="TCB0_OVF" edc:desc="Timer/Counter B0 overflow" edc:when="(field &amp; 0xFF) == 0xA1"/>
                <edc:SFRFieldSemantic edc:cname="TCB1_CAPT" edc:desc="Timer/Counter B1 capture" edc:when="(field &amp; 0xFF) == 0xA2"/>
                <edc:SFRFieldSemantic edc:cname="TCB1_OVF" edc:desc="Timer/Counter B1 overflow" edc:when="(field &amp; 0xFF) == 0xA3"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:AdjustPoint edc:offset="0xA" edc:_addr="0x196"/>
        <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="USERCCLLUT0A" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x1A0">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
              <edc:SFRFieldDef edc:cname="USER" edc:nzwidth="0x8" edc:desc="Channel selector">
                <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="Off" edc:when="(field &amp; 0xFF) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL0" edc:desc="Connect user to event channel 0" edc:when="(field &amp; 0xFF) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL1" edc:desc="Connect user to event channel 1" edc:when="(field &amp; 0xFF) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL2" edc:desc="Connect user to event channel 2" edc:when="(field &amp; 0xFF) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL3" edc:desc="Connect user to event channel 3" edc:when="(field &amp; 0xFF) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL4" edc:desc="Connect user to event channel 4" edc:when="(field &amp; 0xFF) == 0x05"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL5" edc:desc="Connect user to event channel 5" edc:when="(field &amp; 0xFF) == 0x06"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="USERCCLLUT0B" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x1A1">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
              <edc:SFRFieldDef edc:cname="USER" edc:nzwidth="0x8" edc:desc="Channel selector">
                <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="Off" edc:when="(field &amp; 0xFF) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL0" edc:desc="Connect user to event channel 0" edc:when="(field &amp; 0xFF) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL1" edc:desc="Connect user to event channel 1" edc:when="(field &amp; 0xFF) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL2" edc:desc="Connect user to event channel 2" edc:when="(field &amp; 0xFF) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL3" edc:desc="Connect user to event channel 3" edc:when="(field &amp; 0xFF) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL4" edc:desc="Connect user to event channel 4" edc:when="(field &amp; 0xFF) == 0x05"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL5" edc:desc="Connect user to event channel 5" edc:when="(field &amp; 0xFF) == 0x06"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="USERCCLLUT1A" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x1A2">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
              <edc:SFRFieldDef edc:cname="USER" edc:nzwidth="0x8" edc:desc="Channel selector">
                <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="Off" edc:when="(field &amp; 0xFF) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL0" edc:desc="Connect user to event channel 0" edc:when="(field &amp; 0xFF) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL1" edc:desc="Connect user to event channel 1" edc:when="(field &amp; 0xFF) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL2" edc:desc="Connect user to event channel 2" edc:when="(field &amp; 0xFF) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL3" edc:desc="Connect user to event channel 3" edc:when="(field &amp; 0xFF) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL4" edc:desc="Connect user to event channel 4" edc:when="(field &amp; 0xFF) == 0x05"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL5" edc:desc="Connect user to event channel 5" edc:when="(field &amp; 0xFF) == 0x06"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="USERCCLLUT1B" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x1A3">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
              <edc:SFRFieldDef edc:cname="USER" edc:nzwidth="0x8" edc:desc="Channel selector">
                <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="Off" edc:when="(field &amp; 0xFF) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL0" edc:desc="Connect user to event channel 0" edc:when="(field &amp; 0xFF) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL1" edc:desc="Connect user to event channel 1" edc:when="(field &amp; 0xFF) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL2" edc:desc="Connect user to event channel 2" edc:when="(field &amp; 0xFF) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL3" edc:desc="Connect user to event channel 3" edc:when="(field &amp; 0xFF) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL4" edc:desc="Connect user to event channel 4" edc:when="(field &amp; 0xFF) == 0x05"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL5" edc:desc="Connect user to event channel 5" edc:when="(field &amp; 0xFF) == 0x06"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="USERCCLLUT2A" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x1A4">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
              <edc:SFRFieldDef edc:cname="USER" edc:nzwidth="0x8" edc:desc="Channel selector">
                <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="Off" edc:when="(field &amp; 0xFF) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL0" edc:desc="Connect user to event channel 0" edc:when="(field &amp; 0xFF) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL1" edc:desc="Connect user to event channel 1" edc:when="(field &amp; 0xFF) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL2" edc:desc="Connect user to event channel 2" edc:when="(field &amp; 0xFF) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL3" edc:desc="Connect user to event channel 3" edc:when="(field &amp; 0xFF) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL4" edc:desc="Connect user to event channel 4" edc:when="(field &amp; 0xFF) == 0x05"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL5" edc:desc="Connect user to event channel 5" edc:when="(field &amp; 0xFF) == 0x06"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="USERCCLLUT2B" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x1A5">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
              <edc:SFRFieldDef edc:cname="USER" edc:nzwidth="0x8" edc:desc="Channel selector">
                <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="Off" edc:when="(field &amp; 0xFF) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL0" edc:desc="Connect user to event channel 0" edc:when="(field &amp; 0xFF) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL1" edc:desc="Connect user to event channel 1" edc:when="(field &amp; 0xFF) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL2" edc:desc="Connect user to event channel 2" edc:when="(field &amp; 0xFF) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL3" edc:desc="Connect user to event channel 3" edc:when="(field &amp; 0xFF) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL4" edc:desc="Connect user to event channel 4" edc:when="(field &amp; 0xFF) == 0x05"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL5" edc:desc="Connect user to event channel 5" edc:when="(field &amp; 0xFF) == 0x06"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="USERCCLLUT3A" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x1A6">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
              <edc:SFRFieldDef edc:cname="USER" edc:nzwidth="0x8" edc:desc="Channel selector">
                <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="Off" edc:when="(field &amp; 0xFF) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL0" edc:desc="Connect user to event channel 0" edc:when="(field &amp; 0xFF) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL1" edc:desc="Connect user to event channel 1" edc:when="(field &amp; 0xFF) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL2" edc:desc="Connect user to event channel 2" edc:when="(field &amp; 0xFF) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL3" edc:desc="Connect user to event channel 3" edc:when="(field &amp; 0xFF) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL4" edc:desc="Connect user to event channel 4" edc:when="(field &amp; 0xFF) == 0x05"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL5" edc:desc="Connect user to event channel 5" edc:when="(field &amp; 0xFF) == 0x06"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="USERCCLLUT3B" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x1A7">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
              <edc:SFRFieldDef edc:cname="USER" edc:nzwidth="0x8" edc:desc="Channel selector">
                <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="Off" edc:when="(field &amp; 0xFF) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL0" edc:desc="Connect user to event channel 0" edc:when="(field &amp; 0xFF) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL1" edc:desc="Connect user to event channel 1" edc:when="(field &amp; 0xFF) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL2" edc:desc="Connect user to event channel 2" edc:when="(field &amp; 0xFF) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL3" edc:desc="Connect user to event channel 3" edc:when="(field &amp; 0xFF) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL4" edc:desc="Connect user to event channel 4" edc:when="(field &amp; 0xFF) == 0x05"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL5" edc:desc="Connect user to event channel 5" edc:when="(field &amp; 0xFF) == 0x06"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="USERADC0START" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x1A8">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
              <edc:SFRFieldDef edc:cname="USER" edc:nzwidth="0x8" edc:desc="Channel selector">
                <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="Off" edc:when="(field &amp; 0xFF) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL0" edc:desc="Connect user to event channel 0" edc:when="(field &amp; 0xFF) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL1" edc:desc="Connect user to event channel 1" edc:when="(field &amp; 0xFF) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL2" edc:desc="Connect user to event channel 2" edc:when="(field &amp; 0xFF) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL3" edc:desc="Connect user to event channel 3" edc:when="(field &amp; 0xFF) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL4" edc:desc="Connect user to event channel 4" edc:when="(field &amp; 0xFF) == 0x05"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL5" edc:desc="Connect user to event channel 5" edc:when="(field &amp; 0xFF) == 0x06"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="USEREVSYSEVOUTA" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x1A9">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
              <edc:SFRFieldDef edc:cname="USER" edc:nzwidth="0x8" edc:desc="Channel selector">
                <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="Off" edc:when="(field &amp; 0xFF) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL0" edc:desc="Connect user to event channel 0" edc:when="(field &amp; 0xFF) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL1" edc:desc="Connect user to event channel 1" edc:when="(field &amp; 0xFF) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL2" edc:desc="Connect user to event channel 2" edc:when="(field &amp; 0xFF) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL3" edc:desc="Connect user to event channel 3" edc:when="(field &amp; 0xFF) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL4" edc:desc="Connect user to event channel 4" edc:when="(field &amp; 0xFF) == 0x05"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL5" edc:desc="Connect user to event channel 5" edc:when="(field &amp; 0xFF) == 0x06"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="USEREVSYSEVOUTB" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x1AA">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
              <edc:SFRFieldDef edc:cname="USER" edc:nzwidth="0x8" edc:desc="Channel selector">
                <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="Off" edc:when="(field &amp; 0xFF) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL0" edc:desc="Connect user to event channel 0" edc:when="(field &amp; 0xFF) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL1" edc:desc="Connect user to event channel 1" edc:when="(field &amp; 0xFF) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL2" edc:desc="Connect user to event channel 2" edc:when="(field &amp; 0xFF) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL3" edc:desc="Connect user to event channel 3" edc:when="(field &amp; 0xFF) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL4" edc:desc="Connect user to event channel 4" edc:when="(field &amp; 0xFF) == 0x05"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL5" edc:desc="Connect user to event channel 5" edc:when="(field &amp; 0xFF) == 0x06"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="USEREVSYSEVOUTC" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x1AB">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
              <edc:SFRFieldDef edc:cname="USER" edc:nzwidth="0x8" edc:desc="Channel selector">
                <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="Off" edc:when="(field &amp; 0xFF) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL0" edc:desc="Connect user to event channel 0" edc:when="(field &amp; 0xFF) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL1" edc:desc="Connect user to event channel 1" edc:when="(field &amp; 0xFF) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL2" edc:desc="Connect user to event channel 2" edc:when="(field &amp; 0xFF) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL3" edc:desc="Connect user to event channel 3" edc:when="(field &amp; 0xFF) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL4" edc:desc="Connect user to event channel 4" edc:when="(field &amp; 0xFF) == 0x05"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL5" edc:desc="Connect user to event channel 5" edc:when="(field &amp; 0xFF) == 0x06"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="USERUSART0IRDA" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x1AC">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
              <edc:SFRFieldDef edc:cname="USER" edc:nzwidth="0x8" edc:desc="Channel selector">
                <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="Off" edc:when="(field &amp; 0xFF) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL0" edc:desc="Connect user to event channel 0" edc:when="(field &amp; 0xFF) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL1" edc:desc="Connect user to event channel 1" edc:when="(field &amp; 0xFF) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL2" edc:desc="Connect user to event channel 2" edc:when="(field &amp; 0xFF) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL3" edc:desc="Connect user to event channel 3" edc:when="(field &amp; 0xFF) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL4" edc:desc="Connect user to event channel 4" edc:when="(field &amp; 0xFF) == 0x05"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL5" edc:desc="Connect user to event channel 5" edc:when="(field &amp; 0xFF) == 0x06"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="USERUSART1IRDA" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x1AD">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
              <edc:SFRFieldDef edc:cname="USER" edc:nzwidth="0x8" edc:desc="Channel selector">
                <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="Off" edc:when="(field &amp; 0xFF) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL0" edc:desc="Connect user to event channel 0" edc:when="(field &amp; 0xFF) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL1" edc:desc="Connect user to event channel 1" edc:when="(field &amp; 0xFF) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL2" edc:desc="Connect user to event channel 2" edc:when="(field &amp; 0xFF) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL3" edc:desc="Connect user to event channel 3" edc:when="(field &amp; 0xFF) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL4" edc:desc="Connect user to event channel 4" edc:when="(field &amp; 0xFF) == 0x05"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL5" edc:desc="Connect user to event channel 5" edc:when="(field &amp; 0xFF) == 0x06"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="USERTCA0CNTA" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x1AE">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
              <edc:SFRFieldDef edc:cname="USER" edc:nzwidth="0x8" edc:desc="Channel selector">
                <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="Off" edc:when="(field &amp; 0xFF) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL0" edc:desc="Connect user to event channel 0" edc:when="(field &amp; 0xFF) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL1" edc:desc="Connect user to event channel 1" edc:when="(field &amp; 0xFF) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL2" edc:desc="Connect user to event channel 2" edc:when="(field &amp; 0xFF) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL3" edc:desc="Connect user to event channel 3" edc:when="(field &amp; 0xFF) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL4" edc:desc="Connect user to event channel 4" edc:when="(field &amp; 0xFF) == 0x05"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL5" edc:desc="Connect user to event channel 5" edc:when="(field &amp; 0xFF) == 0x06"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="USERTCA0CNTB" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x1AF">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
              <edc:SFRFieldDef edc:cname="USER" edc:nzwidth="0x8" edc:desc="Channel selector">
                <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="Off" edc:when="(field &amp; 0xFF) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL0" edc:desc="Connect user to event channel 0" edc:when="(field &amp; 0xFF) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL1" edc:desc="Connect user to event channel 1" edc:when="(field &amp; 0xFF) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL2" edc:desc="Connect user to event channel 2" edc:when="(field &amp; 0xFF) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL3" edc:desc="Connect user to event channel 3" edc:when="(field &amp; 0xFF) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL4" edc:desc="Connect user to event channel 4" edc:when="(field &amp; 0xFF) == 0x05"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL5" edc:desc="Connect user to event channel 5" edc:when="(field &amp; 0xFF) == 0x06"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="USERTCB0CAPT" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x1B0">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
              <edc:SFRFieldDef edc:cname="USER" edc:nzwidth="0x8" edc:desc="Channel selector">
                <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="Off" edc:when="(field &amp; 0xFF) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL0" edc:desc="Connect user to event channel 0" edc:when="(field &amp; 0xFF) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL1" edc:desc="Connect user to event channel 1" edc:when="(field &amp; 0xFF) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL2" edc:desc="Connect user to event channel 2" edc:when="(field &amp; 0xFF) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL3" edc:desc="Connect user to event channel 3" edc:when="(field &amp; 0xFF) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL4" edc:desc="Connect user to event channel 4" edc:when="(field &amp; 0xFF) == 0x05"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL5" edc:desc="Connect user to event channel 5" edc:when="(field &amp; 0xFF) == 0x06"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="USERTCB0COUNT" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x1B1">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
              <edc:SFRFieldDef edc:cname="USER" edc:nzwidth="0x8" edc:desc="Channel selector">
                <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="Off" edc:when="(field &amp; 0xFF) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL0" edc:desc="Connect user to event channel 0" edc:when="(field &amp; 0xFF) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL1" edc:desc="Connect user to event channel 1" edc:when="(field &amp; 0xFF) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL2" edc:desc="Connect user to event channel 2" edc:when="(field &amp; 0xFF) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL3" edc:desc="Connect user to event channel 3" edc:when="(field &amp; 0xFF) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL4" edc:desc="Connect user to event channel 4" edc:when="(field &amp; 0xFF) == 0x05"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL5" edc:desc="Connect user to event channel 5" edc:when="(field &amp; 0xFF) == 0x06"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="USERTCB1CAPT" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x1B2">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
              <edc:SFRFieldDef edc:cname="USER" edc:nzwidth="0x8" edc:desc="Channel selector">
                <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="Off" edc:when="(field &amp; 0xFF) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL0" edc:desc="Connect user to event channel 0" edc:when="(field &amp; 0xFF) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL1" edc:desc="Connect user to event channel 1" edc:when="(field &amp; 0xFF) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL2" edc:desc="Connect user to event channel 2" edc:when="(field &amp; 0xFF) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL3" edc:desc="Connect user to event channel 3" edc:when="(field &amp; 0xFF) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL4" edc:desc="Connect user to event channel 4" edc:when="(field &amp; 0xFF) == 0x05"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL5" edc:desc="Connect user to event channel 5" edc:when="(field &amp; 0xFF) == 0x06"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="USERTCB1COUNT" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x1B3">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
              <edc:SFRFieldDef edc:cname="USER" edc:nzwidth="0x8" edc:desc="Channel selector">
                <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="Off" edc:when="(field &amp; 0xFF) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL0" edc:desc="Connect user to event channel 0" edc:when="(field &amp; 0xFF) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL1" edc:desc="Connect user to event channel 1" edc:when="(field &amp; 0xFF) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL2" edc:desc="Connect user to event channel 2" edc:when="(field &amp; 0xFF) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL3" edc:desc="Connect user to event channel 3" edc:when="(field &amp; 0xFF) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL4" edc:desc="Connect user to event channel 4" edc:when="(field &amp; 0xFF) == 0x05"/>
                <edc:SFRFieldSemantic edc:cname="CHANNEL5" edc:desc="Connect user to event channel 5" edc:when="(field &amp; 0xFF) == 0x06"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:AdjustPoint edc:offset="0xC" edc:_addr="0x1B4"/>
        <edc:SFRDef ltx:memberofperipheral="CCL" edc:cname="CTRLA" edc:nzwidth="0x8" edc:access="-n-----n" edc:por="00000000" edc:mclr="00000000" edc:impl="0x41" edc:_addr="0x1C0">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="CCL">
              <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="Enable"/>
              <edc:AdjustPoint edc:offset="0x5"/>
              <edc:SFRFieldDef edc:cname="RUNSTDBY" edc:nzwidth="0x1" edc:desc="Run in Standby"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="CCL" edc:cname="SEQCTRL0" edc:nzwidth="0x8" edc:access="-----nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x7" edc:_addr="0x1C1">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="CCL">
              <edc:SFRFieldDef edc:cname="SEQSEL" edc:nzwidth="0x3" edc:desc="Sequential Selection">
                <edc:SFRFieldSemantic edc:cname="DISABLE" edc:desc="Sequential logic disabled" edc:when="(field &amp; 0x7) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="DFF" edc:desc="D FlipFlop" edc:when="(field &amp; 0x7) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="JK" edc:desc="JK FlipFlop" edc:when="(field &amp; 0x7) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="LATCH" edc:desc="D Latch" edc:when="(field &amp; 0x7) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="RS" edc:desc="RS Latch" edc:when="(field &amp; 0x7) == 0x04"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="CCL" edc:cname="SEQCTRL1" edc:nzwidth="0x8" edc:access="-----nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x7" edc:_addr="0x1C2">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="CCL">
              <edc:SFRFieldDef edc:cname="SEQSEL" edc:nzwidth="0x3" edc:desc="Sequential Selection">
                <edc:SFRFieldSemantic edc:cname="DISABLE" edc:desc="Sequential logic disabled" edc:when="(field &amp; 0x7) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="DFF" edc:desc="D FlipFlop" edc:when="(field &amp; 0x7) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="JK" edc:desc="JK FlipFlop" edc:when="(field &amp; 0x7) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="LATCH" edc:desc="D Latch" edc:when="(field &amp; 0x7) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="RS" edc:desc="RS Latch" edc:when="(field &amp; 0x7) == 0x04"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:AdjustPoint edc:offset="0x2" edc:_addr="0x1C3"/>
        <edc:SFRDef ltx:memberofperipheral="CCL" edc:cname="INTCTRL0" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x1C5">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="CCL">
              <edc:SFRFieldDef edc:cname="INTMODE0" edc:nzwidth="0x2" edc:desc="Interrupt Mode for LUT0">
                <edc:SFRFieldSemantic edc:cname="INTDISABLE" edc:desc="Interrupt disabled" edc:when="(field &amp; 0x3) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="RISING" edc:desc="Sense rising edge" edc:when="(field &amp; 0x3) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="FALLING" edc:desc="Sense falling edge" edc:when="(field &amp; 0x3) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="BOTH" edc:desc="Sense both edges" edc:when="(field &amp; 0x3) == 0x03"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="INTMODE1" edc:nzwidth="0x2" edc:desc="Interrupt Mode for LUT1">
                <edc:SFRFieldSemantic edc:cname="INTDISABLE" edc:desc="Interrupt disabled" edc:when="(field &amp; 0x3) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="RISING" edc:desc="Sense rising edge" edc:when="(field &amp; 0x3) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="FALLING" edc:desc="Sense falling edge" edc:when="(field &amp; 0x3) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="BOTH" edc:desc="Sense both edges" edc:when="(field &amp; 0x3) == 0x03"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="INTMODE2" edc:nzwidth="0x2" edc:desc="Interrupt Mode for LUT2">
                <edc:SFRFieldSemantic edc:cname="INTDISABLE" edc:desc="Interrupt disabled" edc:when="(field &amp; 0x3) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="RISING" edc:desc="Sense rising edge" edc:when="(field &amp; 0x3) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="FALLING" edc:desc="Sense falling edge" edc:when="(field &amp; 0x3) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="BOTH" edc:desc="Sense both edges" edc:when="(field &amp; 0x3) == 0x03"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="INTMODE3" edc:nzwidth="0x2" edc:desc="Interrupt Mode for LUT3">
                <edc:SFRFieldSemantic edc:cname="INTDISABLE" edc:desc="Interrupt disabled" edc:when="(field &amp; 0x3) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="RISING" edc:desc="Sense rising edge" edc:when="(field &amp; 0x3) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="FALLING" edc:desc="Sense falling edge" edc:when="(field &amp; 0x3) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="BOTH" edc:desc="Sense both edges" edc:when="(field &amp; 0x3) == 0x03"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:AdjustPoint edc:offset="0x1" edc:_addr="0x1C6"/>
        <edc:SFRDef ltx:memberofperipheral="CCL" edc:cname="INTFLAGS" edc:nzwidth="0x8" edc:access="----nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xF" edc:_addr="0x1C7">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="CCL">
              <edc:SFRFieldDef edc:cname="INT" edc:nzwidth="0x4" edc:desc="Interrupt Flag"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="CCL" edc:cname="LUT0CTRLA" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x1C8">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="CCL">
              <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="LUT Enable"/>
              <edc:SFRFieldDef edc:cname="CLKSRC" edc:nzwidth="0x3" edc:desc="Clock Source Selection">
                <edc:SFRFieldSemantic edc:cname="CLKPER" edc:desc="CLK_PER is clocking the LUT" edc:when="(field &amp; 0x7) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="IN2" edc:desc="IN[2] is clocking the LUT" edc:when="(field &amp; 0x7) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="OSC20M" edc:desc="20MHz oscillator before prescaler is clocking the LUT" edc:when="(field &amp; 0x7) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="OSCULP32K" edc:desc="32kHz oscillator is clocking the LUT" edc:when="(field &amp; 0x7) == 0x05"/>
                <edc:SFRFieldSemantic edc:cname="OSCULP1K" edc:desc="32kHz oscillator after DIV32 is clocking the LUT" edc:when="(field &amp; 0x7) == 0x06"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="FILTSEL" edc:nzwidth="0x2" edc:desc="Filter Selection">
                <edc:SFRFieldSemantic edc:cname="DISABLE" edc:desc="Filter disabled" edc:when="(field &amp; 0x3) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="SYNCH" edc:desc="Synchronizer enabled" edc:when="(field &amp; 0x3) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="FILTER" edc:desc="Filter enabled" edc:when="(field &amp; 0x3) == 0x02"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="OUTEN" edc:nzwidth="0x1" edc:desc="Output Enable"/>
              <edc:SFRFieldDef edc:cname="EDGEDET" edc:nzwidth="0x1" edc:desc="Edge Detection Enable">
                <edc:SFRFieldSemantic edc:cname="DIS" edc:desc="Edge detector is disabled" edc:when="(field &amp; 0x1) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="EN" edc:desc="Edge detector is enabled" edc:when="(field &amp; 0x1) == 0x01"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="CCL" edc:cname="LUT0CTRLB" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x1C9">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="CCL">
              <edc:SFRFieldDef edc:cname="INSEL0" edc:nzwidth="0x4" edc:desc="LUT Input 0 Source Selection">
                <edc:SFRFieldSemantic edc:cname="MASK" edc:desc="Masked input" edc:when="(field &amp; 0xF) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="FEEDBACK" edc:desc="Feedback input source" edc:when="(field &amp; 0xF) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="LINK" edc:desc="Linked LUT input source" edc:when="(field &amp; 0xF) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="EVENTA" edc:desc="Event input source A" edc:when="(field &amp; 0xF) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="EVENTB" edc:desc="Event input source B" edc:when="(field &amp; 0xF) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="IO" edc:desc="IO pin LUTn-IN0 input source" edc:when="(field &amp; 0xF) == 0x05"/>
                <edc:SFRFieldSemantic edc:cname="AC0" edc:desc="AC0 OUT input source" edc:when="(field &amp; 0xF) == 0x06"/>
                <edc:SFRFieldSemantic edc:cname="USART0" edc:desc="USART0 TXD input source" edc:when="(field &amp; 0xF) == 0x08"/>
                <edc:SFRFieldSemantic edc:cname="SPI0" edc:desc="SPI0 MOSI input source" edc:when="(field &amp; 0xF) == 0x09"/>
                <edc:SFRFieldSemantic edc:cname="TCA0" edc:desc="TCA0 WO0 input source" edc:when="(field &amp; 0xF) == 0x0A"/>
                <edc:SFRFieldSemantic edc:cname="TCB0" edc:desc="TCB0 WO input source" edc:when="(field &amp; 0xF) == 0x0C"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="INSEL1" edc:nzwidth="0x4" edc:desc="LUT Input 1 Source Selection">
                <edc:SFRFieldSemantic edc:cname="MASK" edc:desc="Masked input" edc:when="(field &amp; 0xF) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="FEEDBACK" edc:desc="Feedback input source" edc:when="(field &amp; 0xF) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="LINK" edc:desc="Linked LUT input source" edc:when="(field &amp; 0xF) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="EVENTA" edc:desc="Event input source A" edc:when="(field &amp; 0xF) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="EVENTB" edc:desc="Event input source B" edc:when="(field &amp; 0xF) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="IO" edc:desc="IO pin LUTn-IN1 input source" edc:when="(field &amp; 0xF) == 0x05"/>
                <edc:SFRFieldSemantic edc:cname="AC0" edc:desc="AC0 OUT input source" edc:when="(field &amp; 0xF) == 0x06"/>
                <edc:SFRFieldSemantic edc:cname="USART1" edc:desc="USART1 TXD input source" edc:when="(field &amp; 0xF) == 0x08"/>
                <edc:SFRFieldSemantic edc:cname="SPI0" edc:desc="SPI0 MOSI input source" edc:when="(field &amp; 0xF) == 0x09"/>
                <edc:SFRFieldSemantic edc:cname="TCA0" edc:desc="TCA0 WO1 input source" edc:when="(field &amp; 0xF) == 0x0A"/>
                <edc:SFRFieldSemantic edc:cname="TCB1" edc:desc="TCB1 WO input source" edc:when="(field &amp; 0xF) == 0x0C"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="CCL" edc:cname="LUT0CTRLC" edc:nzwidth="0x8" edc:access="----nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xF" edc:_addr="0x1CA">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="CCL">
              <edc:SFRFieldDef edc:cname="INSEL2" edc:nzwidth="0x4" edc:desc="LUT Input 2 Source Selection">
                <edc:SFRFieldSemantic edc:cname="MASK" edc:desc="Masked input" edc:when="(field &amp; 0xF) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="FEEDBACK" edc:desc="Feedback input source" edc:when="(field &amp; 0xF) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="LINK" edc:desc="Linked LUT input source" edc:when="(field &amp; 0xF) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="EVENTA" edc:desc="Event input source A" edc:when="(field &amp; 0xF) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="EVENTB" edc:desc="Event input source B" edc:when="(field &amp; 0xF) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="IO" edc:desc="IO pin LUTn-IN2 input source" edc:when="(field &amp; 0xF) == 0x05"/>
                <edc:SFRFieldSemantic edc:cname="AC0" edc:desc="AC0 OUT input source" edc:when="(field &amp; 0xF) == 0x06"/>
                <edc:SFRFieldSemantic edc:cname="SPI0" edc:desc="SPI0 SCK input source" edc:when="(field &amp; 0xF) == 0x09"/>
                <edc:SFRFieldSemantic edc:cname="TCA0" edc:desc="TCA0 WO2 input source" edc:when="(field &amp; 0xF) == 0x0A"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="CCL" edc:cname="TRUTH0" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x1CB">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="CCL">
              <edc:SFRFieldDef edc:cname="TRUTH" edc:nzwidth="0x8" edc:desc="Truth Table"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="CCL" edc:cname="LUT1CTRLA" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x1CC">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="CCL">
              <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="LUT Enable"/>
              <edc:SFRFieldDef edc:cname="CLKSRC" edc:nzwidth="0x3" edc:desc="Clock Source Selection">
                <edc:SFRFieldSemantic edc:cname="CLKPER" edc:desc="CLK_PER is clocking the LUT" edc:when="(field &amp; 0x7) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="IN2" edc:desc="IN[2] is clocking the LUT" edc:when="(field &amp; 0x7) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="OSC20M" edc:desc="20MHz oscillator before prescaler is clocking the LUT" edc:when="(field &amp; 0x7) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="OSCULP32K" edc:desc="32kHz oscillator is clocking the LUT" edc:when="(field &amp; 0x7) == 0x05"/>
                <edc:SFRFieldSemantic edc:cname="OSCULP1K" edc:desc="32kHz oscillator after DIV32 is clocking the LUT" edc:when="(field &amp; 0x7) == 0x06"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="FILTSEL" edc:nzwidth="0x2" edc:desc="Filter Selection">
                <edc:SFRFieldSemantic edc:cname="DISABLE" edc:desc="Filter disabled" edc:when="(field &amp; 0x3) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="SYNCH" edc:desc="Synchronizer enabled" edc:when="(field &amp; 0x3) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="FILTER" edc:desc="Filter enabled" edc:when="(field &amp; 0x3) == 0x02"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="OUTEN" edc:nzwidth="0x1" edc:desc="Output Enable"/>
              <edc:SFRFieldDef edc:cname="EDGEDET" edc:nzwidth="0x1" edc:desc="Edge Detection Enable">
                <edc:SFRFieldSemantic edc:cname="DIS" edc:desc="Edge detector is disabled" edc:when="(field &amp; 0x1) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="EN" edc:desc="Edge detector is enabled" edc:when="(field &amp; 0x1) == 0x01"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="CCL" edc:cname="LUT1CTRLB" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x1CD">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="CCL">
              <edc:SFRFieldDef edc:cname="INSEL0" edc:nzwidth="0x4" edc:desc="LUT Input 0 Source Selection">
                <edc:SFRFieldSemantic edc:cname="MASK" edc:desc="Masked input" edc:when="(field &amp; 0xF) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="FEEDBACK" edc:desc="Feedback input source" edc:when="(field &amp; 0xF) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="LINK" edc:desc="Linked LUT input source" edc:when="(field &amp; 0xF) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="EVENTA" edc:desc="Event input source A" edc:when="(field &amp; 0xF) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="EVENTB" edc:desc="Event input source B" edc:when="(field &amp; 0xF) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="IO" edc:desc="IO pin LUTn-IN0 input source" edc:when="(field &amp; 0xF) == 0x05"/>
                <edc:SFRFieldSemantic edc:cname="AC0" edc:desc="AC0 OUT input source" edc:when="(field &amp; 0xF) == 0x06"/>
                <edc:SFRFieldSemantic edc:cname="USART0" edc:desc="USART0 TXD input source" edc:when="(field &amp; 0xF) == 0x08"/>
                <edc:SFRFieldSemantic edc:cname="SPI0" edc:desc="SPI0 MOSI input source" edc:when="(field &amp; 0xF) == 0x09"/>
                <edc:SFRFieldSemantic edc:cname="TCA0" edc:desc="TCA0 WO0 input source" edc:when="(field &amp; 0xF) == 0x0A"/>
                <edc:SFRFieldSemantic edc:cname="TCB0" edc:desc="TCB0 WO input source" edc:when="(field &amp; 0xF) == 0x0C"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="INSEL1" edc:nzwidth="0x4" edc:desc="LUT Input 1 Source Selection">
                <edc:SFRFieldSemantic edc:cname="MASK" edc:desc="Masked input" edc:when="(field &amp; 0xF) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="FEEDBACK" edc:desc="Feedback input source" edc:when="(field &amp; 0xF) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="LINK" edc:desc="Linked LUT input source" edc:when="(field &amp; 0xF) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="EVENTA" edc:desc="Event input source A" edc:when="(field &amp; 0xF) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="EVENTB" edc:desc="Event input source B" edc:when="(field &amp; 0xF) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="IO" edc:desc="IO pin LUTn-IN1 input source" edc:when="(field &amp; 0xF) == 0x05"/>
                <edc:SFRFieldSemantic edc:cname="AC0" edc:desc="AC0 OUT input source" edc:when="(field &amp; 0xF) == 0x06"/>
                <edc:SFRFieldSemantic edc:cname="USART1" edc:desc="USART1 TXD input source" edc:when="(field &amp; 0xF) == 0x08"/>
                <edc:SFRFieldSemantic edc:cname="SPI0" edc:desc="SPI0 MOSI input source" edc:when="(field &amp; 0xF) == 0x09"/>
                <edc:SFRFieldSemantic edc:cname="TCA0" edc:desc="TCA0 WO1 input source" edc:when="(field &amp; 0xF) == 0x0A"/>
                <edc:SFRFieldSemantic edc:cname="TCB1" edc:desc="TCB1 WO input source" edc:when="(field &amp; 0xF) == 0x0C"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="CCL" edc:cname="LUT1CTRLC" edc:nzwidth="0x8" edc:access="----nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xF" edc:_addr="0x1CE">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="CCL">
              <edc:SFRFieldDef edc:cname="INSEL2" edc:nzwidth="0x4" edc:desc="LUT Input 2 Source Selection">
                <edc:SFRFieldSemantic edc:cname="MASK" edc:desc="Masked input" edc:when="(field &amp; 0xF) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="FEEDBACK" edc:desc="Feedback input source" edc:when="(field &amp; 0xF) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="LINK" edc:desc="Linked LUT input source" edc:when="(field &amp; 0xF) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="EVENTA" edc:desc="Event input source A" edc:when="(field &amp; 0xF) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="EVENTB" edc:desc="Event input source B" edc:when="(field &amp; 0xF) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="IO" edc:desc="IO pin LUTn-IN2 input source" edc:when="(field &amp; 0xF) == 0x05"/>
                <edc:SFRFieldSemantic edc:cname="AC0" edc:desc="AC0 OUT input source" edc:when="(field &amp; 0xF) == 0x06"/>
                <edc:SFRFieldSemantic edc:cname="SPI0" edc:desc="SPI0 SCK input source" edc:when="(field &amp; 0xF) == 0x09"/>
                <edc:SFRFieldSemantic edc:cname="TCA0" edc:desc="TCA0 WO2 input source" edc:when="(field &amp; 0xF) == 0x0A"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="CCL" edc:cname="TRUTH1" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x1CF">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="CCL">
              <edc:SFRFieldDef edc:cname="TRUTH" edc:nzwidth="0x8" edc:desc="Truth Table"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="CCL" edc:cname="LUT2CTRLA" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x1D0">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="CCL">
              <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="LUT Enable"/>
              <edc:SFRFieldDef edc:cname="CLKSRC" edc:nzwidth="0x3" edc:desc="Clock Source Selection">
                <edc:SFRFieldSemantic edc:cname="CLKPER" edc:desc="CLK_PER is clocking the LUT" edc:when="(field &amp; 0x7) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="IN2" edc:desc="IN[2] is clocking the LUT" edc:when="(field &amp; 0x7) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="OSC20M" edc:desc="20MHz oscillator before prescaler is clocking the LUT" edc:when="(field &amp; 0x7) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="OSCULP32K" edc:desc="32kHz oscillator is clocking the LUT" edc:when="(field &amp; 0x7) == 0x05"/>
                <edc:SFRFieldSemantic edc:cname="OSCULP1K" edc:desc="32kHz oscillator after DIV32 is clocking the LUT" edc:when="(field &amp; 0x7) == 0x06"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="FILTSEL" edc:nzwidth="0x2" edc:desc="Filter Selection">
                <edc:SFRFieldSemantic edc:cname="DISABLE" edc:desc="Filter disabled" edc:when="(field &amp; 0x3) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="SYNCH" edc:desc="Synchronizer enabled" edc:when="(field &amp; 0x3) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="FILTER" edc:desc="Filter enabled" edc:when="(field &amp; 0x3) == 0x02"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="OUTEN" edc:nzwidth="0x1" edc:desc="Output Enable"/>
              <edc:SFRFieldDef edc:cname="EDGEDET" edc:nzwidth="0x1" edc:desc="Edge Detection Enable">
                <edc:SFRFieldSemantic edc:cname="DIS" edc:desc="Edge detector is disabled" edc:when="(field &amp; 0x1) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="EN" edc:desc="Edge detector is enabled" edc:when="(field &amp; 0x1) == 0x01"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="CCL" edc:cname="LUT2CTRLB" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x1D1">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="CCL">
              <edc:SFRFieldDef edc:cname="INSEL0" edc:nzwidth="0x4" edc:desc="LUT Input 0 Source Selection">
                <edc:SFRFieldSemantic edc:cname="MASK" edc:desc="Masked input" edc:when="(field &amp; 0xF) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="FEEDBACK" edc:desc="Feedback input source" edc:when="(field &amp; 0xF) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="LINK" edc:desc="Linked LUT input source" edc:when="(field &amp; 0xF) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="EVENTA" edc:desc="Event input source A" edc:when="(field &amp; 0xF) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="EVENTB" edc:desc="Event input source B" edc:when="(field &amp; 0xF) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="IO" edc:desc="IO pin LUTn-IN0 input source" edc:when="(field &amp; 0xF) == 0x05"/>
                <edc:SFRFieldSemantic edc:cname="AC0" edc:desc="AC0 OUT input source" edc:when="(field &amp; 0xF) == 0x06"/>
                <edc:SFRFieldSemantic edc:cname="USART0" edc:desc="USART0 TXD input source" edc:when="(field &amp; 0xF) == 0x08"/>
                <edc:SFRFieldSemantic edc:cname="SPI0" edc:desc="SPI0 MOSI input source" edc:when="(field &amp; 0xF) == 0x09"/>
                <edc:SFRFieldSemantic edc:cname="TCA0" edc:desc="TCA0 WO0 input source" edc:when="(field &amp; 0xF) == 0x0A"/>
                <edc:SFRFieldSemantic edc:cname="TCB0" edc:desc="TCB0 WO input source" edc:when="(field &amp; 0xF) == 0x0C"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="INSEL1" edc:nzwidth="0x4" edc:desc="LUT Input 1 Source Selection">
                <edc:SFRFieldSemantic edc:cname="MASK" edc:desc="Masked input" edc:when="(field &amp; 0xF) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="FEEDBACK" edc:desc="Feedback input source" edc:when="(field &amp; 0xF) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="LINK" edc:desc="Linked LUT input source" edc:when="(field &amp; 0xF) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="EVENTA" edc:desc="Event input source A" edc:when="(field &amp; 0xF) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="EVENTB" edc:desc="Event input source B" edc:when="(field &amp; 0xF) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="IO" edc:desc="IO pin LUTn-IN1 input source" edc:when="(field &amp; 0xF) == 0x05"/>
                <edc:SFRFieldSemantic edc:cname="AC0" edc:desc="AC0 OUT input source" edc:when="(field &amp; 0xF) == 0x06"/>
                <edc:SFRFieldSemantic edc:cname="USART1" edc:desc="USART1 TXD input source" edc:when="(field &amp; 0xF) == 0x08"/>
                <edc:SFRFieldSemantic edc:cname="SPI0" edc:desc="SPI0 MOSI input source" edc:when="(field &amp; 0xF) == 0x09"/>
                <edc:SFRFieldSemantic edc:cname="TCA0" edc:desc="TCA0 WO1 input source" edc:when="(field &amp; 0xF) == 0x0A"/>
                <edc:SFRFieldSemantic edc:cname="TCB1" edc:desc="TCB1 WO input source" edc:when="(field &amp; 0xF) == 0x0C"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="CCL" edc:cname="LUT2CTRLC" edc:nzwidth="0x8" edc:access="----nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xF" edc:_addr="0x1D2">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="CCL">
              <edc:SFRFieldDef edc:cname="INSEL2" edc:nzwidth="0x4" edc:desc="LUT Input 2 Source Selection">
                <edc:SFRFieldSemantic edc:cname="MASK" edc:desc="Masked input" edc:when="(field &amp; 0xF) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="FEEDBACK" edc:desc="Feedback input source" edc:when="(field &amp; 0xF) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="LINK" edc:desc="Linked LUT input source" edc:when="(field &amp; 0xF) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="EVENTA" edc:desc="Event input source A" edc:when="(field &amp; 0xF) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="EVENTB" edc:desc="Event input source B" edc:when="(field &amp; 0xF) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="IO" edc:desc="IO pin LUTn-IN2 input source" edc:when="(field &amp; 0xF) == 0x05"/>
                <edc:SFRFieldSemantic edc:cname="AC0" edc:desc="AC0 OUT input source" edc:when="(field &amp; 0xF) == 0x06"/>
                <edc:SFRFieldSemantic edc:cname="SPI0" edc:desc="SPI0 SCK input source" edc:when="(field &amp; 0xF) == 0x09"/>
                <edc:SFRFieldSemantic edc:cname="TCA0" edc:desc="TCA0 WO2 input source" edc:when="(field &amp; 0xF) == 0x0A"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="CCL" edc:cname="TRUTH2" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x1D3">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="CCL">
              <edc:SFRFieldDef edc:cname="TRUTH" edc:nzwidth="0x8" edc:desc="Truth Table"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="CCL" edc:cname="LUT3CTRLA" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x1D4">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="CCL">
              <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="LUT Enable"/>
              <edc:SFRFieldDef edc:cname="CLKSRC" edc:nzwidth="0x3" edc:desc="Clock Source Selection">
                <edc:SFRFieldSemantic edc:cname="CLKPER" edc:desc="CLK_PER is clocking the LUT" edc:when="(field &amp; 0x7) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="IN2" edc:desc="IN[2] is clocking the LUT" edc:when="(field &amp; 0x7) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="OSC20M" edc:desc="20MHz oscillator before prescaler is clocking the LUT" edc:when="(field &amp; 0x7) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="OSCULP32K" edc:desc="32kHz oscillator is clocking the LUT" edc:when="(field &amp; 0x7) == 0x05"/>
                <edc:SFRFieldSemantic edc:cname="OSCULP1K" edc:desc="32kHz oscillator after DIV32 is clocking the LUT" edc:when="(field &amp; 0x7) == 0x06"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="FILTSEL" edc:nzwidth="0x2" edc:desc="Filter Selection">
                <edc:SFRFieldSemantic edc:cname="DISABLE" edc:desc="Filter disabled" edc:when="(field &amp; 0x3) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="SYNCH" edc:desc="Synchronizer enabled" edc:when="(field &amp; 0x3) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="FILTER" edc:desc="Filter enabled" edc:when="(field &amp; 0x3) == 0x02"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="OUTEN" edc:nzwidth="0x1" edc:desc="Output Enable"/>
              <edc:SFRFieldDef edc:cname="EDGEDET" edc:nzwidth="0x1" edc:desc="Edge Detection Enable">
                <edc:SFRFieldSemantic edc:cname="DIS" edc:desc="Edge detector is disabled" edc:when="(field &amp; 0x1) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="EN" edc:desc="Edge detector is enabled" edc:when="(field &amp; 0x1) == 0x01"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="CCL" edc:cname="LUT3CTRLB" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x1D5">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="CCL">
              <edc:SFRFieldDef edc:cname="INSEL0" edc:nzwidth="0x4" edc:desc="LUT Input 0 Source Selection">
                <edc:SFRFieldSemantic edc:cname="MASK" edc:desc="Masked input" edc:when="(field &amp; 0xF) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="FEEDBACK" edc:desc="Feedback input source" edc:when="(field &amp; 0xF) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="LINK" edc:desc="Linked LUT input source" edc:when="(field &amp; 0xF) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="EVENTA" edc:desc="Event input source A" edc:when="(field &amp; 0xF) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="EVENTB" edc:desc="Event input source B" edc:when="(field &amp; 0xF) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="IO" edc:desc="IO pin LUTn-IN0 input source" edc:when="(field &amp; 0xF) == 0x05"/>
                <edc:SFRFieldSemantic edc:cname="AC0" edc:desc="AC0 OUT input source" edc:when="(field &amp; 0xF) == 0x06"/>
                <edc:SFRFieldSemantic edc:cname="USART0" edc:desc="USART0 TXD input source" edc:when="(field &amp; 0xF) == 0x08"/>
                <edc:SFRFieldSemantic edc:cname="SPI0" edc:desc="SPI0 MOSI input source" edc:when="(field &amp; 0xF) == 0x09"/>
                <edc:SFRFieldSemantic edc:cname="TCA0" edc:desc="TCA0 WO0 input source" edc:when="(field &amp; 0xF) == 0x0A"/>
                <edc:SFRFieldSemantic edc:cname="TCB0" edc:desc="TCB0 WO input source" edc:when="(field &amp; 0xF) == 0x0C"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="INSEL1" edc:nzwidth="0x4" edc:desc="LUT Input 1 Source Selection">
                <edc:SFRFieldSemantic edc:cname="MASK" edc:desc="Masked input" edc:when="(field &amp; 0xF) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="FEEDBACK" edc:desc="Feedback input source" edc:when="(field &amp; 0xF) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="LINK" edc:desc="Linked LUT input source" edc:when="(field &amp; 0xF) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="EVENTA" edc:desc="Event input source A" edc:when="(field &amp; 0xF) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="EVENTB" edc:desc="Event input source B" edc:when="(field &amp; 0xF) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="IO" edc:desc="IO pin LUTn-IN1 input source" edc:when="(field &amp; 0xF) == 0x05"/>
                <edc:SFRFieldSemantic edc:cname="AC0" edc:desc="AC0 OUT input source" edc:when="(field &amp; 0xF) == 0x06"/>
                <edc:SFRFieldSemantic edc:cname="USART1" edc:desc="USART1 TXD input source" edc:when="(field &amp; 0xF) == 0x08"/>
                <edc:SFRFieldSemantic edc:cname="SPI0" edc:desc="SPI0 MOSI input source" edc:when="(field &amp; 0xF) == 0x09"/>
                <edc:SFRFieldSemantic edc:cname="TCA0" edc:desc="TCA0 WO1 input source" edc:when="(field &amp; 0xF) == 0x0A"/>
                <edc:SFRFieldSemantic edc:cname="TCB1" edc:desc="TCB1 WO input source" edc:when="(field &amp; 0xF) == 0x0C"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="CCL" edc:cname="LUT3CTRLC" edc:nzwidth="0x8" edc:access="----nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xF" edc:_addr="0x1D6">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="CCL">
              <edc:SFRFieldDef edc:cname="INSEL2" edc:nzwidth="0x4" edc:desc="LUT Input 2 Source Selection">
                <edc:SFRFieldSemantic edc:cname="MASK" edc:desc="Masked input" edc:when="(field &amp; 0xF) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="FEEDBACK" edc:desc="Feedback input source" edc:when="(field &amp; 0xF) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="LINK" edc:desc="Linked LUT input source" edc:when="(field &amp; 0xF) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="EVENTA" edc:desc="Event input source A" edc:when="(field &amp; 0xF) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="EVENTB" edc:desc="Event input source B" edc:when="(field &amp; 0xF) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="IO" edc:desc="IO pin LUTn-IN2 input source" edc:when="(field &amp; 0xF) == 0x05"/>
                <edc:SFRFieldSemantic edc:cname="AC0" edc:desc="AC0 OUT input source" edc:when="(field &amp; 0xF) == 0x06"/>
                <edc:SFRFieldSemantic edc:cname="SPI0" edc:desc="SPI0 SCK input source" edc:when="(field &amp; 0xF) == 0x09"/>
                <edc:SFRFieldSemantic edc:cname="TCA0" edc:desc="TCA0 WO2 input source" edc:when="(field &amp; 0xF) == 0x0A"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="CCL" edc:cname="TRUTH3" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x1D7">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="CCL">
              <edc:SFRFieldDef edc:cname="TRUTH" edc:nzwidth="0x8" edc:desc="Truth Table"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:AdjustPoint edc:offset="0x228" edc:_addr="0x1D8"/>
        <edc:SFRDef ltx:memberofperipheral="PORTA" edc:cname="DIR" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x400"/>
        <edc:SFRDef ltx:memberofperipheral="PORTA" edc:cname="DIRSET" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x401"/>
        <edc:SFRDef ltx:memberofperipheral="PORTA" edc:cname="DIRCLR" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x402"/>
        <edc:SFRDef ltx:memberofperipheral="PORTA" edc:cname="DIRTGL" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x403"/>
        <edc:SFRDef ltx:memberofperipheral="PORTA" edc:cname="OUT" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x404"/>
        <edc:SFRDef ltx:memberofperipheral="PORTA" edc:cname="OUTSET" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x405"/>
        <edc:SFRDef ltx:memberofperipheral="PORTA" edc:cname="OUTCLR" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x406"/>
        <edc:SFRDef ltx:memberofperipheral="PORTA" edc:cname="OUTTGL" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x407"/>
        <edc:SFRDef ltx:memberofperipheral="PORTA" edc:cname="IN" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x408"/>
        <edc:SFRDef ltx:memberofperipheral="PORTA" edc:cname="INTFLAGS" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x409">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORTA">
              <edc:SFRFieldDef edc:cname="INT" edc:nzwidth="0x8" edc:desc="Pin Interrupt"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="PORTA" edc:cname="PORTACTRL" edc:nzwidth="0x8" edc:access="-------n" edc:por="00000000" edc:mclr="00000000" edc:impl="0x1" edc:_addr="0x40A">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORTA">
              <edc:SFRFieldDef edc:cname="SRL" edc:nzwidth="0x1" edc:desc="Slew Rate Limit Enable"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:AdjustPoint edc:offset="0x5" edc:_addr="0x40B"/>
        <edc:SFRDef ltx:memberofperipheral="PORTA" edc:cname="PIN0CTRL" edc:nzwidth="0x8" edc:access="n---nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x8F" edc:_addr="0x410">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORTA">
              <edc:SFRFieldDef edc:cname="ISC" edc:nzwidth="0x3" edc:desc="Input/Sense Configuration">
                <edc:SFRFieldSemantic edc:cname="INTDISABLE" edc:desc="Interrupt disabled but input buffer enabled" edc:when="(field &amp; 0x7) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="BOTHEDGES" edc:desc="Sense Both Edges" edc:when="(field &amp; 0x7) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="RISING" edc:desc="Sense Rising Edge" edc:when="(field &amp; 0x7) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="FALLING" edc:desc="Sense Falling Edge" edc:when="(field &amp; 0x7) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="INPUT_DISABLE" edc:desc="Digital Input Buffer disabled" edc:when="(field &amp; 0x7) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="LEVEL" edc:desc="Sense low Level" edc:when="(field &amp; 0x7) == 0x05"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="PULLUPEN" edc:nzwidth="0x1" edc:desc="Pullup enable"/>
              <edc:AdjustPoint edc:offset="0x3"/>
              <edc:SFRFieldDef edc:cname="INVEN" edc:nzwidth="0x1" edc:desc="Inverted I/O Enable"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="PORTA" edc:cname="PIN1CTRL" edc:nzwidth="0x8" edc:access="n---nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x8F" edc:_addr="0x411">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORTA">
              <edc:SFRFieldDef edc:cname="ISC" edc:nzwidth="0x3" edc:desc="Input/Sense Configuration">
                <edc:SFRFieldSemantic edc:cname="INTDISABLE" edc:desc="Interrupt disabled but input buffer enabled" edc:when="(field &amp; 0x7) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="BOTHEDGES" edc:desc="Sense Both Edges" edc:when="(field &amp; 0x7) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="RISING" edc:desc="Sense Rising Edge" edc:when="(field &amp; 0x7) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="FALLING" edc:desc="Sense Falling Edge" edc:when="(field &amp; 0x7) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="INPUT_DISABLE" edc:desc="Digital Input Buffer disabled" edc:when="(field &amp; 0x7) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="LEVEL" edc:desc="Sense low Level" edc:when="(field &amp; 0x7) == 0x05"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="PULLUPEN" edc:nzwidth="0x1" edc:desc="Pullup enable"/>
              <edc:AdjustPoint edc:offset="0x3"/>
              <edc:SFRFieldDef edc:cname="INVEN" edc:nzwidth="0x1" edc:desc="Inverted I/O Enable"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="PORTA" edc:cname="PIN2CTRL" edc:nzwidth="0x8" edc:access="n---nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x8F" edc:_addr="0x412">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORTA">
              <edc:SFRFieldDef edc:cname="ISC" edc:nzwidth="0x3" edc:desc="Input/Sense Configuration">
                <edc:SFRFieldSemantic edc:cname="INTDISABLE" edc:desc="Interrupt disabled but input buffer enabled" edc:when="(field &amp; 0x7) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="BOTHEDGES" edc:desc="Sense Both Edges" edc:when="(field &amp; 0x7) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="RISING" edc:desc="Sense Rising Edge" edc:when="(field &amp; 0x7) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="FALLING" edc:desc="Sense Falling Edge" edc:when="(field &amp; 0x7) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="INPUT_DISABLE" edc:desc="Digital Input Buffer disabled" edc:when="(field &amp; 0x7) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="LEVEL" edc:desc="Sense low Level" edc:when="(field &amp; 0x7) == 0x05"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="PULLUPEN" edc:nzwidth="0x1" edc:desc="Pullup enable"/>
              <edc:AdjustPoint edc:offset="0x3"/>
              <edc:SFRFieldDef edc:cname="INVEN" edc:nzwidth="0x1" edc:desc="Inverted I/O Enable"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="PORTA" edc:cname="PIN3CTRL" edc:nzwidth="0x8" edc:access="n---nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x8F" edc:_addr="0x413">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORTA">
              <edc:SFRFieldDef edc:cname="ISC" edc:nzwidth="0x3" edc:desc="Input/Sense Configuration">
                <edc:SFRFieldSemantic edc:cname="INTDISABLE" edc:desc="Interrupt disabled but input buffer enabled" edc:when="(field &amp; 0x7) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="BOTHEDGES" edc:desc="Sense Both Edges" edc:when="(field &amp; 0x7) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="RISING" edc:desc="Sense Rising Edge" edc:when="(field &amp; 0x7) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="FALLING" edc:desc="Sense Falling Edge" edc:when="(field &amp; 0x7) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="INPUT_DISABLE" edc:desc="Digital Input Buffer disabled" edc:when="(field &amp; 0x7) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="LEVEL" edc:desc="Sense low Level" edc:when="(field &amp; 0x7) == 0x05"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="PULLUPEN" edc:nzwidth="0x1" edc:desc="Pullup enable"/>
              <edc:AdjustPoint edc:offset="0x3"/>
              <edc:SFRFieldDef edc:cname="INVEN" edc:nzwidth="0x1" edc:desc="Inverted I/O Enable"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="PORTA" edc:cname="PIN4CTRL" edc:nzwidth="0x8" edc:access="n---nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x8F" edc:_addr="0x414">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORTA">
              <edc:SFRFieldDef edc:cname="ISC" edc:nzwidth="0x3" edc:desc="Input/Sense Configuration">
                <edc:SFRFieldSemantic edc:cname="INTDISABLE" edc:desc="Interrupt disabled but input buffer enabled" edc:when="(field &amp; 0x7) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="BOTHEDGES" edc:desc="Sense Both Edges" edc:when="(field &amp; 0x7) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="RISING" edc:desc="Sense Rising Edge" edc:when="(field &amp; 0x7) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="FALLING" edc:desc="Sense Falling Edge" edc:when="(field &amp; 0x7) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="INPUT_DISABLE" edc:desc="Digital Input Buffer disabled" edc:when="(field &amp; 0x7) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="LEVEL" edc:desc="Sense low Level" edc:when="(field &amp; 0x7) == 0x05"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="PULLUPEN" edc:nzwidth="0x1" edc:desc="Pullup enable"/>
              <edc:AdjustPoint edc:offset="0x3"/>
              <edc:SFRFieldDef edc:cname="INVEN" edc:nzwidth="0x1" edc:desc="Inverted I/O Enable"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="PORTA" edc:cname="PIN5CTRL" edc:nzwidth="0x8" edc:access="n---nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x8F" edc:_addr="0x415">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORTA">
              <edc:SFRFieldDef edc:cname="ISC" edc:nzwidth="0x3" edc:desc="Input/Sense Configuration">
                <edc:SFRFieldSemantic edc:cname="INTDISABLE" edc:desc="Interrupt disabled but input buffer enabled" edc:when="(field &amp; 0x7) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="BOTHEDGES" edc:desc="Sense Both Edges" edc:when="(field &amp; 0x7) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="RISING" edc:desc="Sense Rising Edge" edc:when="(field &amp; 0x7) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="FALLING" edc:desc="Sense Falling Edge" edc:when="(field &amp; 0x7) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="INPUT_DISABLE" edc:desc="Digital Input Buffer disabled" edc:when="(field &amp; 0x7) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="LEVEL" edc:desc="Sense low Level" edc:when="(field &amp; 0x7) == 0x05"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="PULLUPEN" edc:nzwidth="0x1" edc:desc="Pullup enable"/>
              <edc:AdjustPoint edc:offset="0x3"/>
              <edc:SFRFieldDef edc:cname="INVEN" edc:nzwidth="0x1" edc:desc="Inverted I/O Enable"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="PORTA" edc:cname="PIN6CTRL" edc:nzwidth="0x8" edc:access="n---nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x8F" edc:_addr="0x416">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORTA">
              <edc:SFRFieldDef edc:cname="ISC" edc:nzwidth="0x3" edc:desc="Input/Sense Configuration">
                <edc:SFRFieldSemantic edc:cname="INTDISABLE" edc:desc="Interrupt disabled but input buffer enabled" edc:when="(field &amp; 0x7) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="BOTHEDGES" edc:desc="Sense Both Edges" edc:when="(field &amp; 0x7) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="RISING" edc:desc="Sense Rising Edge" edc:when="(field &amp; 0x7) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="FALLING" edc:desc="Sense Falling Edge" edc:when="(field &amp; 0x7) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="INPUT_DISABLE" edc:desc="Digital Input Buffer disabled" edc:when="(field &amp; 0x7) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="LEVEL" edc:desc="Sense low Level" edc:when="(field &amp; 0x7) == 0x05"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="PULLUPEN" edc:nzwidth="0x1" edc:desc="Pullup enable"/>
              <edc:AdjustPoint edc:offset="0x3"/>
              <edc:SFRFieldDef edc:cname="INVEN" edc:nzwidth="0x1" edc:desc="Inverted I/O Enable"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="PORTA" edc:cname="PIN7CTRL" edc:nzwidth="0x8" edc:access="n---nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x8F" edc:_addr="0x417">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORTA">
              <edc:SFRFieldDef edc:cname="ISC" edc:nzwidth="0x3" edc:desc="Input/Sense Configuration">
                <edc:SFRFieldSemantic edc:cname="INTDISABLE" edc:desc="Interrupt disabled but input buffer enabled" edc:when="(field &amp; 0x7) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="BOTHEDGES" edc:desc="Sense Both Edges" edc:when="(field &amp; 0x7) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="RISING" edc:desc="Sense Rising Edge" edc:when="(field &amp; 0x7) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="FALLING" edc:desc="Sense Falling Edge" edc:when="(field &amp; 0x7) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="INPUT_DISABLE" edc:desc="Digital Input Buffer disabled" edc:when="(field &amp; 0x7) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="LEVEL" edc:desc="Sense low Level" edc:when="(field &amp; 0x7) == 0x05"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="PULLUPEN" edc:nzwidth="0x1" edc:desc="Pullup enable"/>
              <edc:AdjustPoint edc:offset="0x3"/>
              <edc:SFRFieldDef edc:cname="INVEN" edc:nzwidth="0x1" edc:desc="Inverted I/O Enable"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:AdjustPoint edc:offset="0x8" edc:_addr="0x418"/>
        <edc:SFRDef ltx:memberofperipheral="PORTB" edc:cname="DIR" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x420"/>
        <edc:SFRDef ltx:memberofperipheral="PORTB" edc:cname="DIRSET" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x421"/>
        <edc:SFRDef ltx:memberofperipheral="PORTB" edc:cname="DIRCLR" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x422"/>
        <edc:SFRDef ltx:memberofperipheral="PORTB" edc:cname="DIRTGL" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x423"/>
        <edc:SFRDef ltx:memberofperipheral="PORTB" edc:cname="OUT" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x424"/>
        <edc:SFRDef ltx:memberofperipheral="PORTB" edc:cname="OUTSET" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x425"/>
        <edc:SFRDef ltx:memberofperipheral="PORTB" edc:cname="OUTCLR" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x426"/>
        <edc:SFRDef ltx:memberofperipheral="PORTB" edc:cname="OUTTGL" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x427"/>
        <edc:SFRDef ltx:memberofperipheral="PORTB" edc:cname="IN" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x428"/>
        <edc:SFRDef ltx:memberofperipheral="PORTB" edc:cname="INTFLAGS" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x429">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORTB">
              <edc:SFRFieldDef edc:cname="INT" edc:nzwidth="0x8" edc:desc="Pin Interrupt"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="PORTB" edc:cname="PORTBCTRL" edc:nzwidth="0x8" edc:access="-------n" edc:por="00000000" edc:mclr="00000000" edc:impl="0x1" edc:_addr="0x42A">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORTB">
              <edc:SFRFieldDef edc:cname="SRL" edc:nzwidth="0x1" edc:desc="Slew Rate Limit Enable"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:AdjustPoint edc:offset="0x5" edc:_addr="0x42B"/>
        <edc:SFRDef ltx:memberofperipheral="PORTB" edc:cname="PIN0CTRL" edc:nzwidth="0x8" edc:access="n---nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x8F" edc:_addr="0x430">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORTB">
              <edc:SFRFieldDef edc:cname="ISC" edc:nzwidth="0x3" edc:desc="Input/Sense Configuration">
                <edc:SFRFieldSemantic edc:cname="INTDISABLE" edc:desc="Interrupt disabled but input buffer enabled" edc:when="(field &amp; 0x7) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="BOTHEDGES" edc:desc="Sense Both Edges" edc:when="(field &amp; 0x7) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="RISING" edc:desc="Sense Rising Edge" edc:when="(field &amp; 0x7) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="FALLING" edc:desc="Sense Falling Edge" edc:when="(field &amp; 0x7) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="INPUT_DISABLE" edc:desc="Digital Input Buffer disabled" edc:when="(field &amp; 0x7) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="LEVEL" edc:desc="Sense low Level" edc:when="(field &amp; 0x7) == 0x05"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="PULLUPEN" edc:nzwidth="0x1" edc:desc="Pullup enable"/>
              <edc:AdjustPoint edc:offset="0x3"/>
              <edc:SFRFieldDef edc:cname="INVEN" edc:nzwidth="0x1" edc:desc="Inverted I/O Enable"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="PORTB" edc:cname="PIN1CTRL" edc:nzwidth="0x8" edc:access="n---nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x8F" edc:_addr="0x431">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORTB">
              <edc:SFRFieldDef edc:cname="ISC" edc:nzwidth="0x3" edc:desc="Input/Sense Configuration">
                <edc:SFRFieldSemantic edc:cname="INTDISABLE" edc:desc="Interrupt disabled but input buffer enabled" edc:when="(field &amp; 0x7) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="BOTHEDGES" edc:desc="Sense Both Edges" edc:when="(field &amp; 0x7) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="RISING" edc:desc="Sense Rising Edge" edc:when="(field &amp; 0x7) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="FALLING" edc:desc="Sense Falling Edge" edc:when="(field &amp; 0x7) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="INPUT_DISABLE" edc:desc="Digital Input Buffer disabled" edc:when="(field &amp; 0x7) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="LEVEL" edc:desc="Sense low Level" edc:when="(field &amp; 0x7) == 0x05"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="PULLUPEN" edc:nzwidth="0x1" edc:desc="Pullup enable"/>
              <edc:AdjustPoint edc:offset="0x3"/>
              <edc:SFRFieldDef edc:cname="INVEN" edc:nzwidth="0x1" edc:desc="Inverted I/O Enable"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="PORTB" edc:cname="PIN2CTRL" edc:nzwidth="0x8" edc:access="n---nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x8F" edc:_addr="0x432">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORTB">
              <edc:SFRFieldDef edc:cname="ISC" edc:nzwidth="0x3" edc:desc="Input/Sense Configuration">
                <edc:SFRFieldSemantic edc:cname="INTDISABLE" edc:desc="Interrupt disabled but input buffer enabled" edc:when="(field &amp; 0x7) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="BOTHEDGES" edc:desc="Sense Both Edges" edc:when="(field &amp; 0x7) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="RISING" edc:desc="Sense Rising Edge" edc:when="(field &amp; 0x7) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="FALLING" edc:desc="Sense Falling Edge" edc:when="(field &amp; 0x7) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="INPUT_DISABLE" edc:desc="Digital Input Buffer disabled" edc:when="(field &amp; 0x7) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="LEVEL" edc:desc="Sense low Level" edc:when="(field &amp; 0x7) == 0x05"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="PULLUPEN" edc:nzwidth="0x1" edc:desc="Pullup enable"/>
              <edc:AdjustPoint edc:offset="0x3"/>
              <edc:SFRFieldDef edc:cname="INVEN" edc:nzwidth="0x1" edc:desc="Inverted I/O Enable"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="PORTB" edc:cname="PIN3CTRL" edc:nzwidth="0x8" edc:access="n---nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x8F" edc:_addr="0x433">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORTB">
              <edc:SFRFieldDef edc:cname="ISC" edc:nzwidth="0x3" edc:desc="Input/Sense Configuration">
                <edc:SFRFieldSemantic edc:cname="INTDISABLE" edc:desc="Interrupt disabled but input buffer enabled" edc:when="(field &amp; 0x7) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="BOTHEDGES" edc:desc="Sense Both Edges" edc:when="(field &amp; 0x7) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="RISING" edc:desc="Sense Rising Edge" edc:when="(field &amp; 0x7) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="FALLING" edc:desc="Sense Falling Edge" edc:when="(field &amp; 0x7) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="INPUT_DISABLE" edc:desc="Digital Input Buffer disabled" edc:when="(field &amp; 0x7) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="LEVEL" edc:desc="Sense low Level" edc:when="(field &amp; 0x7) == 0x05"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="PULLUPEN" edc:nzwidth="0x1" edc:desc="Pullup enable"/>
              <edc:AdjustPoint edc:offset="0x3"/>
              <edc:SFRFieldDef edc:cname="INVEN" edc:nzwidth="0x1" edc:desc="Inverted I/O Enable"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="PORTB" edc:cname="PIN4CTRL" edc:nzwidth="0x8" edc:access="n---nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x8F" edc:_addr="0x434">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORTB">
              <edc:SFRFieldDef edc:cname="ISC" edc:nzwidth="0x3" edc:desc="Input/Sense Configuration">
                <edc:SFRFieldSemantic edc:cname="INTDISABLE" edc:desc="Interrupt disabled but input buffer enabled" edc:when="(field &amp; 0x7) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="BOTHEDGES" edc:desc="Sense Both Edges" edc:when="(field &amp; 0x7) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="RISING" edc:desc="Sense Rising Edge" edc:when="(field &amp; 0x7) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="FALLING" edc:desc="Sense Falling Edge" edc:when="(field &amp; 0x7) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="INPUT_DISABLE" edc:desc="Digital Input Buffer disabled" edc:when="(field &amp; 0x7) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="LEVEL" edc:desc="Sense low Level" edc:when="(field &amp; 0x7) == 0x05"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="PULLUPEN" edc:nzwidth="0x1" edc:desc="Pullup enable"/>
              <edc:AdjustPoint edc:offset="0x3"/>
              <edc:SFRFieldDef edc:cname="INVEN" edc:nzwidth="0x1" edc:desc="Inverted I/O Enable"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="PORTB" edc:cname="PIN5CTRL" edc:nzwidth="0x8" edc:access="n---nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x8F" edc:_addr="0x435">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORTB">
              <edc:SFRFieldDef edc:cname="ISC" edc:nzwidth="0x3" edc:desc="Input/Sense Configuration">
                <edc:SFRFieldSemantic edc:cname="INTDISABLE" edc:desc="Interrupt disabled but input buffer enabled" edc:when="(field &amp; 0x7) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="BOTHEDGES" edc:desc="Sense Both Edges" edc:when="(field &amp; 0x7) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="RISING" edc:desc="Sense Rising Edge" edc:when="(field &amp; 0x7) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="FALLING" edc:desc="Sense Falling Edge" edc:when="(field &amp; 0x7) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="INPUT_DISABLE" edc:desc="Digital Input Buffer disabled" edc:when="(field &amp; 0x7) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="LEVEL" edc:desc="Sense low Level" edc:when="(field &amp; 0x7) == 0x05"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="PULLUPEN" edc:nzwidth="0x1" edc:desc="Pullup enable"/>
              <edc:AdjustPoint edc:offset="0x3"/>
              <edc:SFRFieldDef edc:cname="INVEN" edc:nzwidth="0x1" edc:desc="Inverted I/O Enable"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="PORTB" edc:cname="PIN6CTRL" edc:nzwidth="0x8" edc:access="n---nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x8F" edc:_addr="0x436">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORTB">
              <edc:SFRFieldDef edc:cname="ISC" edc:nzwidth="0x3" edc:desc="Input/Sense Configuration">
                <edc:SFRFieldSemantic edc:cname="INTDISABLE" edc:desc="Interrupt disabled but input buffer enabled" edc:when="(field &amp; 0x7) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="BOTHEDGES" edc:desc="Sense Both Edges" edc:when="(field &amp; 0x7) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="RISING" edc:desc="Sense Rising Edge" edc:when="(field &amp; 0x7) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="FALLING" edc:desc="Sense Falling Edge" edc:when="(field &amp; 0x7) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="INPUT_DISABLE" edc:desc="Digital Input Buffer disabled" edc:when="(field &amp; 0x7) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="LEVEL" edc:desc="Sense low Level" edc:when="(field &amp; 0x7) == 0x05"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="PULLUPEN" edc:nzwidth="0x1" edc:desc="Pullup enable"/>
              <edc:AdjustPoint edc:offset="0x3"/>
              <edc:SFRFieldDef edc:cname="INVEN" edc:nzwidth="0x1" edc:desc="Inverted I/O Enable"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="PORTB" edc:cname="PIN7CTRL" edc:nzwidth="0x8" edc:access="n---nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x8F" edc:_addr="0x437">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORTB">
              <edc:SFRFieldDef edc:cname="ISC" edc:nzwidth="0x3" edc:desc="Input/Sense Configuration">
                <edc:SFRFieldSemantic edc:cname="INTDISABLE" edc:desc="Interrupt disabled but input buffer enabled" edc:when="(field &amp; 0x7) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="BOTHEDGES" edc:desc="Sense Both Edges" edc:when="(field &amp; 0x7) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="RISING" edc:desc="Sense Rising Edge" edc:when="(field &amp; 0x7) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="FALLING" edc:desc="Sense Falling Edge" edc:when="(field &amp; 0x7) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="INPUT_DISABLE" edc:desc="Digital Input Buffer disabled" edc:when="(field &amp; 0x7) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="LEVEL" edc:desc="Sense low Level" edc:when="(field &amp; 0x7) == 0x05"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="PULLUPEN" edc:nzwidth="0x1" edc:desc="Pullup enable"/>
              <edc:AdjustPoint edc:offset="0x3"/>
              <edc:SFRFieldDef edc:cname="INVEN" edc:nzwidth="0x1" edc:desc="Inverted I/O Enable"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:AdjustPoint edc:offset="0x8" edc:_addr="0x438"/>
        <edc:SFRDef ltx:memberofperipheral="PORTC" edc:cname="DIR" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x440"/>
        <edc:SFRDef ltx:memberofperipheral="PORTC" edc:cname="DIRSET" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x441"/>
        <edc:SFRDef ltx:memberofperipheral="PORTC" edc:cname="DIRCLR" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x442"/>
        <edc:SFRDef ltx:memberofperipheral="PORTC" edc:cname="DIRTGL" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x443"/>
        <edc:SFRDef ltx:memberofperipheral="PORTC" edc:cname="OUT" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x444"/>
        <edc:SFRDef ltx:memberofperipheral="PORTC" edc:cname="OUTSET" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x445"/>
        <edc:SFRDef ltx:memberofperipheral="PORTC" edc:cname="OUTCLR" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x446"/>
        <edc:SFRDef ltx:memberofperipheral="PORTC" edc:cname="OUTTGL" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x447"/>
        <edc:SFRDef ltx:memberofperipheral="PORTC" edc:cname="IN" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x448"/>
        <edc:SFRDef ltx:memberofperipheral="PORTC" edc:cname="INTFLAGS" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x449">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORTC">
              <edc:SFRFieldDef edc:cname="INT" edc:nzwidth="0x8" edc:desc="Pin Interrupt"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="PORTC" edc:cname="PORTCCTRL" edc:nzwidth="0x8" edc:access="-------n" edc:por="00000000" edc:mclr="00000000" edc:impl="0x1" edc:_addr="0x44A">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORTC">
              <edc:SFRFieldDef edc:cname="SRL" edc:nzwidth="0x1" edc:desc="Slew Rate Limit Enable"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:AdjustPoint edc:offset="0x5" edc:_addr="0x44B"/>
        <edc:SFRDef ltx:memberofperipheral="PORTC" edc:cname="PIN0CTRL" edc:nzwidth="0x8" edc:access="n---nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x8F" edc:_addr="0x450">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORTC">
              <edc:SFRFieldDef edc:cname="ISC" edc:nzwidth="0x3" edc:desc="Input/Sense Configuration">
                <edc:SFRFieldSemantic edc:cname="INTDISABLE" edc:desc="Interrupt disabled but input buffer enabled" edc:when="(field &amp; 0x7) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="BOTHEDGES" edc:desc="Sense Both Edges" edc:when="(field &amp; 0x7) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="RISING" edc:desc="Sense Rising Edge" edc:when="(field &amp; 0x7) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="FALLING" edc:desc="Sense Falling Edge" edc:when="(field &amp; 0x7) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="INPUT_DISABLE" edc:desc="Digital Input Buffer disabled" edc:when="(field &amp; 0x7) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="LEVEL" edc:desc="Sense low Level" edc:when="(field &amp; 0x7) == 0x05"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="PULLUPEN" edc:nzwidth="0x1" edc:desc="Pullup enable"/>
              <edc:AdjustPoint edc:offset="0x3"/>
              <edc:SFRFieldDef edc:cname="INVEN" edc:nzwidth="0x1" edc:desc="Inverted I/O Enable"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="PORTC" edc:cname="PIN1CTRL" edc:nzwidth="0x8" edc:access="n---nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x8F" edc:_addr="0x451">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORTC">
              <edc:SFRFieldDef edc:cname="ISC" edc:nzwidth="0x3" edc:desc="Input/Sense Configuration">
                <edc:SFRFieldSemantic edc:cname="INTDISABLE" edc:desc="Interrupt disabled but input buffer enabled" edc:when="(field &amp; 0x7) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="BOTHEDGES" edc:desc="Sense Both Edges" edc:when="(field &amp; 0x7) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="RISING" edc:desc="Sense Rising Edge" edc:when="(field &amp; 0x7) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="FALLING" edc:desc="Sense Falling Edge" edc:when="(field &amp; 0x7) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="INPUT_DISABLE" edc:desc="Digital Input Buffer disabled" edc:when="(field &amp; 0x7) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="LEVEL" edc:desc="Sense low Level" edc:when="(field &amp; 0x7) == 0x05"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="PULLUPEN" edc:nzwidth="0x1" edc:desc="Pullup enable"/>
              <edc:AdjustPoint edc:offset="0x3"/>
              <edc:SFRFieldDef edc:cname="INVEN" edc:nzwidth="0x1" edc:desc="Inverted I/O Enable"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="PORTC" edc:cname="PIN2CTRL" edc:nzwidth="0x8" edc:access="n---nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x8F" edc:_addr="0x452">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORTC">
              <edc:SFRFieldDef edc:cname="ISC" edc:nzwidth="0x3" edc:desc="Input/Sense Configuration">
                <edc:SFRFieldSemantic edc:cname="INTDISABLE" edc:desc="Interrupt disabled but input buffer enabled" edc:when="(field &amp; 0x7) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="BOTHEDGES" edc:desc="Sense Both Edges" edc:when="(field &amp; 0x7) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="RISING" edc:desc="Sense Rising Edge" edc:when="(field &amp; 0x7) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="FALLING" edc:desc="Sense Falling Edge" edc:when="(field &amp; 0x7) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="INPUT_DISABLE" edc:desc="Digital Input Buffer disabled" edc:when="(field &amp; 0x7) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="LEVEL" edc:desc="Sense low Level" edc:when="(field &amp; 0x7) == 0x05"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="PULLUPEN" edc:nzwidth="0x1" edc:desc="Pullup enable"/>
              <edc:AdjustPoint edc:offset="0x3"/>
              <edc:SFRFieldDef edc:cname="INVEN" edc:nzwidth="0x1" edc:desc="Inverted I/O Enable"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="PORTC" edc:cname="PIN3CTRL" edc:nzwidth="0x8" edc:access="n---nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x8F" edc:_addr="0x453">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORTC">
              <edc:SFRFieldDef edc:cname="ISC" edc:nzwidth="0x3" edc:desc="Input/Sense Configuration">
                <edc:SFRFieldSemantic edc:cname="INTDISABLE" edc:desc="Interrupt disabled but input buffer enabled" edc:when="(field &amp; 0x7) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="BOTHEDGES" edc:desc="Sense Both Edges" edc:when="(field &amp; 0x7) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="RISING" edc:desc="Sense Rising Edge" edc:when="(field &amp; 0x7) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="FALLING" edc:desc="Sense Falling Edge" edc:when="(field &amp; 0x7) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="INPUT_DISABLE" edc:desc="Digital Input Buffer disabled" edc:when="(field &amp; 0x7) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="LEVEL" edc:desc="Sense low Level" edc:when="(field &amp; 0x7) == 0x05"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="PULLUPEN" edc:nzwidth="0x1" edc:desc="Pullup enable"/>
              <edc:AdjustPoint edc:offset="0x3"/>
              <edc:SFRFieldDef edc:cname="INVEN" edc:nzwidth="0x1" edc:desc="Inverted I/O Enable"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="PORTC" edc:cname="PIN4CTRL" edc:nzwidth="0x8" edc:access="n---nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x8F" edc:_addr="0x454">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORTC">
              <edc:SFRFieldDef edc:cname="ISC" edc:nzwidth="0x3" edc:desc="Input/Sense Configuration">
                <edc:SFRFieldSemantic edc:cname="INTDISABLE" edc:desc="Interrupt disabled but input buffer enabled" edc:when="(field &amp; 0x7) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="BOTHEDGES" edc:desc="Sense Both Edges" edc:when="(field &amp; 0x7) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="RISING" edc:desc="Sense Rising Edge" edc:when="(field &amp; 0x7) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="FALLING" edc:desc="Sense Falling Edge" edc:when="(field &amp; 0x7) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="INPUT_DISABLE" edc:desc="Digital Input Buffer disabled" edc:when="(field &amp; 0x7) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="LEVEL" edc:desc="Sense low Level" edc:when="(field &amp; 0x7) == 0x05"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="PULLUPEN" edc:nzwidth="0x1" edc:desc="Pullup enable"/>
              <edc:AdjustPoint edc:offset="0x3"/>
              <edc:SFRFieldDef edc:cname="INVEN" edc:nzwidth="0x1" edc:desc="Inverted I/O Enable"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="PORTC" edc:cname="PIN5CTRL" edc:nzwidth="0x8" edc:access="n---nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x8F" edc:_addr="0x455">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORTC">
              <edc:SFRFieldDef edc:cname="ISC" edc:nzwidth="0x3" edc:desc="Input/Sense Configuration">
                <edc:SFRFieldSemantic edc:cname="INTDISABLE" edc:desc="Interrupt disabled but input buffer enabled" edc:when="(field &amp; 0x7) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="BOTHEDGES" edc:desc="Sense Both Edges" edc:when="(field &amp; 0x7) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="RISING" edc:desc="Sense Rising Edge" edc:when="(field &amp; 0x7) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="FALLING" edc:desc="Sense Falling Edge" edc:when="(field &amp; 0x7) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="INPUT_DISABLE" edc:desc="Digital Input Buffer disabled" edc:when="(field &amp; 0x7) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="LEVEL" edc:desc="Sense low Level" edc:when="(field &amp; 0x7) == 0x05"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="PULLUPEN" edc:nzwidth="0x1" edc:desc="Pullup enable"/>
              <edc:AdjustPoint edc:offset="0x3"/>
              <edc:SFRFieldDef edc:cname="INVEN" edc:nzwidth="0x1" edc:desc="Inverted I/O Enable"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="PORTC" edc:cname="PIN6CTRL" edc:nzwidth="0x8" edc:access="n---nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x8F" edc:_addr="0x456">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORTC">
              <edc:SFRFieldDef edc:cname="ISC" edc:nzwidth="0x3" edc:desc="Input/Sense Configuration">
                <edc:SFRFieldSemantic edc:cname="INTDISABLE" edc:desc="Interrupt disabled but input buffer enabled" edc:when="(field &amp; 0x7) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="BOTHEDGES" edc:desc="Sense Both Edges" edc:when="(field &amp; 0x7) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="RISING" edc:desc="Sense Rising Edge" edc:when="(field &amp; 0x7) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="FALLING" edc:desc="Sense Falling Edge" edc:when="(field &amp; 0x7) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="INPUT_DISABLE" edc:desc="Digital Input Buffer disabled" edc:when="(field &amp; 0x7) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="LEVEL" edc:desc="Sense low Level" edc:when="(field &amp; 0x7) == 0x05"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="PULLUPEN" edc:nzwidth="0x1" edc:desc="Pullup enable"/>
              <edc:AdjustPoint edc:offset="0x3"/>
              <edc:SFRFieldDef edc:cname="INVEN" edc:nzwidth="0x1" edc:desc="Inverted I/O Enable"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="PORTC" edc:cname="PIN7CTRL" edc:nzwidth="0x8" edc:access="n---nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x8F" edc:_addr="0x457">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORTC">
              <edc:SFRFieldDef edc:cname="ISC" edc:nzwidth="0x3" edc:desc="Input/Sense Configuration">
                <edc:SFRFieldSemantic edc:cname="INTDISABLE" edc:desc="Interrupt disabled but input buffer enabled" edc:when="(field &amp; 0x7) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="BOTHEDGES" edc:desc="Sense Both Edges" edc:when="(field &amp; 0x7) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="RISING" edc:desc="Sense Rising Edge" edc:when="(field &amp; 0x7) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="FALLING" edc:desc="Sense Falling Edge" edc:when="(field &amp; 0x7) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="INPUT_DISABLE" edc:desc="Digital Input Buffer disabled" edc:when="(field &amp; 0x7) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="LEVEL" edc:desc="Sense low Level" edc:when="(field &amp; 0x7) == 0x05"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="PULLUPEN" edc:nzwidth="0x1" edc:desc="Pullup enable"/>
              <edc:AdjustPoint edc:offset="0x3"/>
              <edc:SFRFieldDef edc:cname="INVEN" edc:nzwidth="0x1" edc:desc="Inverted I/O Enable"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:AdjustPoint edc:offset="0x188" edc:_addr="0x458"/>
        <edc:SFRDef ltx:memberofperipheral="PORTMUX" edc:cname="EVSYSROUTEA" edc:nzwidth="0x8" edc:access="-----nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x7" edc:_addr="0x5E0">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORTMUX">
              <edc:SFRFieldDef edc:cname="EVOUTA" edc:nzwidth="0x1" edc:desc="Event Output A">
                <edc:SFRFieldSemantic edc:cname="DEFAULT" edc:desc="EVOUT on PA2" edc:when="(field &amp; 0x1) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="ALT1" edc:desc="EVOUT on PA7" edc:when="(field &amp; 0x1) == 0x01"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="EVOUTB" edc:nzwidth="0x1" edc:desc="Event Output B">
                <edc:SFRFieldSemantic edc:cname="DEFAULT" edc:desc="EVOUT on PB2" edc:when="(field &amp; 0x1) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="ALT1" edc:desc="EVOUT on PB7" edc:when="(field &amp; 0x1) == 0x01"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="EVOUTC" edc:nzwidth="0x1" edc:desc="Event Output C">
                <edc:SFRFieldSemantic edc:cname="DEFAULT" edc:desc="EVOUT on PC2" edc:when="(field &amp; 0x1) == 0x00"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="PORTMUX" edc:cname="CCLROUTEA" edc:nzwidth="0x8" edc:access="----nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xF" edc:_addr="0x5E1">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORTMUX">
              <edc:SFRFieldDef edc:cname="LUT0" edc:nzwidth="0x1" edc:desc="CCL LUT0">
                <edc:SFRFieldSemantic edc:cname="DEFAULT" edc:desc="Out: PA4 In: PA0, PA1, PA2" edc:when="(field &amp; 0x1) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="ALT1" edc:desc="Out: PB4 In: PA0, PA1, PA2" edc:when="(field &amp; 0x1) == 0x01"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="LUT1" edc:nzwidth="0x1" edc:desc="CCL LUT1">
                <edc:SFRFieldSemantic edc:cname="DEFAULT" edc:desc="Out: PA7 In: PC3, PC4, PC5" edc:when="(field &amp; 0x1) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="ALT1" edc:desc="Out: PC1 In: PC3, PC4, PC5" edc:when="(field &amp; 0x1) == 0x01"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="LUT2" edc:nzwidth="0x1" edc:desc="CCL LUT2">
                <edc:SFRFieldSemantic edc:cname="DEFAULT" edc:desc="Out: PB3 In: PB0, PB1, PB2" edc:when="(field &amp; 0x1) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="ALT1" edc:desc="Out: PB6 In: PB0, PB1, PB2" edc:when="(field &amp; 0x1) == 0x01"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="LUT3" edc:nzwidth="0x1" edc:desc="CCL LUT3">
                <edc:SFRFieldSemantic edc:cname="DEFAULT" edc:desc="Out: PC4 In: PC0, PC1, PC2" edc:when="(field &amp; 0x1) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="ALT1" edc:desc="Out: PA5 In: PC0, PC1, PC2" edc:when="(field &amp; 0x1) == 0x01"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="PORTMUX" edc:cname="USARTROUTEA" edc:nzwidth="0x8" edc:access="----nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xF" edc:_addr="0x5E2">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORTMUX">
              <edc:SFRFieldDef edc:cname="USART0" edc:nzwidth="0x2" edc:desc="Port Multiplexer USART0">
                <edc:SFRFieldSemantic edc:cname="DEFAULT" edc:desc="USART0 on PB[3:0]" edc:when="(field &amp; 0x3) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="ALT1" edc:desc="USART0 on PA[4:1]" edc:when="(field &amp; 0x3) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="Not connected to any pins" edc:when="(field &amp; 0x3) == 0x03"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="USART1" edc:nzwidth="0x2" edc:desc="Port Multiplexer USART1">
                <edc:SFRFieldSemantic edc:cname="DEFAULT" edc:desc="USART1 on PA[4:1]" edc:when="(field &amp; 0x3) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="ALT1" edc:desc="USART1 on PC[3:0]" edc:when="(field &amp; 0x3) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="Not connected to any pins" edc:when="(field &amp; 0x3) == 0x03"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="PORTMUX" edc:cname="SPIROUTEA" edc:nzwidth="0x8" edc:access="------nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3" edc:_addr="0x5E3">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORTMUX">
              <edc:SFRFieldDef edc:cname="SPI0" edc:nzwidth="0x2" edc:desc="Port Multiplexer SPI0">
                <edc:SFRFieldSemantic edc:cname="DEFAULT" edc:desc="PA0, PA1, PA2, PA3" edc:when="(field &amp; 0x3) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="ALT1" edc:desc="PC2, PC1, PC0, PC3" edc:when="(field &amp; 0x3) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="Not connected to any pins" edc:when="(field &amp; 0x3) == 0x03"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="PORTMUX" edc:cname="TCAROUTEA" edc:nzwidth="0x8" edc:access="--nnnnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3F" edc:_addr="0x5E4">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORTMUX">
              <edc:SFRFieldDef edc:cname="TCA00" edc:nzwidth="0x1" edc:desc="Port Multiplexer TCA0 Output 0">
                <edc:SFRFieldSemantic edc:cname="DEFAULT" edc:desc="WO0 on PB0" edc:when="(field &amp; 0x1) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="ALT1" edc:desc="WO0 on PB3" edc:when="(field &amp; 0x1) == 0x01"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="TCA01" edc:nzwidth="0x1" edc:desc="Port Multiplexer TCA0 Output 1">
                <edc:SFRFieldSemantic edc:cname="DEFAULT" edc:desc="WO1 on PB1" edc:when="(field &amp; 0x1) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="ALT1" edc:desc="WO1 on PB4" edc:when="(field &amp; 0x1) == 0x01"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="TCA02" edc:nzwidth="0x1" edc:desc="Port Multiplexer TCA0 Output 2">
                <edc:SFRFieldSemantic edc:cname="DEFAULT" edc:desc="WO2 on PB2" edc:when="(field &amp; 0x1) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="ALT1" edc:desc="WO2 on PB5" edc:when="(field &amp; 0x1) == 0x01"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="TCA03" edc:nzwidth="0x1" edc:desc="Port Multiplexer TCA0 Output 3">
                <edc:SFRFieldSemantic edc:cname="DEFAULT" edc:desc="WO3 on PA3" edc:when="(field &amp; 0x1) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="ALT1" edc:desc="WO3 on PC3" edc:when="(field &amp; 0x1) == 0x01"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="TCA04" edc:nzwidth="0x1" edc:desc="Port Multiplexer TCA0 Output 4">
                <edc:SFRFieldSemantic edc:cname="DEFAULT" edc:desc="WO4 on PA4" edc:when="(field &amp; 0x1) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="ALT1" edc:desc="WO4 on PC4" edc:when="(field &amp; 0x1) == 0x01"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="TCA05" edc:nzwidth="0x1" edc:desc="Port Multiplexer TCA0 Output 5">
                <edc:SFRFieldSemantic edc:cname="DEFAULT" edc:desc="WO5 on PA5" edc:when="(field &amp; 0x1) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="ALT1" edc:desc="WO5 on PC5" edc:when="(field &amp; 0x1) == 0x01"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="PORTMUX" edc:cname="TCBROUTEA" edc:nzwidth="0x8" edc:access="------nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3" edc:_addr="0x5E5">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORTMUX">
              <edc:SFRFieldDef edc:cname="TCB0" edc:nzwidth="0x1" edc:desc="Port Multiplexer TCB0">
                <edc:SFRFieldSemantic edc:cname="DEFAULT" edc:desc="WO on PA5" edc:when="(field &amp; 0x1) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="ALT1" edc:desc="WO on PC0" edc:when="(field &amp; 0x1) == 0x01"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="TCB1" edc:nzwidth="0x1" edc:desc="Port Multiplexer TCB1">
                <edc:SFRFieldSemantic edc:cname="DEFAULT" edc:desc="WO on PA3" edc:when="(field &amp; 0x1) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="ALT1" edc:desc="WO on PC4" edc:when="(field &amp; 0x1) == 0x01"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:AdjustPoint edc:offset="0x1A" edc:_addr="0x5E6"/>
        <edc:SFRDef ltx:memberofperipheral="ADC0" edc:cname="CTRLA" edc:nzwidth="0x8" edc:access="n-n----n" edc:por="00000000" edc:mclr="00000000" edc:impl="0xA1" edc:_addr="0x600">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="ADC0">
              <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="ADC Enable"/>
              <edc:AdjustPoint edc:offset="0x4"/>
              <edc:SFRFieldDef edc:cname="LOWLAT" edc:nzwidth="0x1" edc:desc="ADC Low latency mode"/>
              <edc:AdjustPoint edc:offset="0x1"/>
              <edc:SFRFieldDef edc:cname="RUNSTDBY" edc:nzwidth="0x1" edc:desc="Run standby mode"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="ADC0" edc:cname="CTRLB" edc:nzwidth="0x8" edc:access="----nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xF" edc:_addr="0x601">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="ADC0">
              <edc:SFRFieldDef edc:cname="PRESC" edc:nzwidth="0x4" edc:desc="Prescaler Value">
                <edc:SFRFieldSemantic edc:cname="DIV2" edc:desc="System clock divided by 2" edc:when="(field &amp; 0xF) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="DIV4" edc:desc="System clock divided by 4" edc:when="(field &amp; 0xF) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="DIV6" edc:desc="System clock divided by 6" edc:when="(field &amp; 0xF) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="DIV8" edc:desc="System clock divided by 8" edc:when="(field &amp; 0xF) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="DIV10" edc:desc="System clock divided by 10" edc:when="(field &amp; 0xF) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="DIV12" edc:desc="System clock divided by 12" edc:when="(field &amp; 0xF) == 0x05"/>
                <edc:SFRFieldSemantic edc:cname="DIV14" edc:desc="System clock divided by 14" edc:when="(field &amp; 0xF) == 0x06"/>
                <edc:SFRFieldSemantic edc:cname="DIV16" edc:desc="System clock divided by 16" edc:when="(field &amp; 0xF) == 0x07"/>
                <edc:SFRFieldSemantic edc:cname="DIV20" edc:desc="System clock divided by 20" edc:when="(field &amp; 0xF) == 0x08"/>
                <edc:SFRFieldSemantic edc:cname="DIV24" edc:desc="System clock divided by 24" edc:when="(field &amp; 0xF) == 0x09"/>
                <edc:SFRFieldSemantic edc:cname="DIV28" edc:desc="System clock divided by 28" edc:when="(field &amp; 0xF) == 0x0A"/>
                <edc:SFRFieldSemantic edc:cname="DIV32" edc:desc="System clock divided by 32" edc:when="(field &amp; 0xF) == 0x0B"/>
                <edc:SFRFieldSemantic edc:cname="DIV40" edc:desc="System clock divided by 40" edc:when="(field &amp; 0xF) == 0x0C"/>
                <edc:SFRFieldSemantic edc:cname="DIV48" edc:desc="System clock divided by 48" edc:when="(field &amp; 0xF) == 0x0D"/>
                <edc:SFRFieldSemantic edc:cname="DIV56" edc:desc="System clock divided by 56" edc:when="(field &amp; 0xF) == 0x0E"/>
                <edc:SFRFieldSemantic edc:cname="DIV64" edc:desc="System clock divided by 64" edc:when="(field &amp; 0xF) == 0x0F"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="ADC0" edc:cname="CTRLC" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x602">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="ADC0">
              <edc:SFRFieldDef edc:cname="REFSEL" edc:nzwidth="0x3" edc:desc="Reference select">
                <edc:SFRFieldSemantic edc:cname="VDD" edc:desc="VDD" edc:when="(field &amp; 0x7) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="VREFA" edc:desc="External Reference" edc:when="(field &amp; 0x7) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="1024MV" edc:desc="Internal 1.024V Reference" edc:when="(field &amp; 0x7) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="2048MV" edc:desc="Internal 2.048V Reference" edc:when="(field &amp; 0x7) == 0x05"/>
                <edc:SFRFieldSemantic edc:cname="2500MV" edc:desc="Internal 2.5V Reference" edc:when="(field &amp; 0x7) == 0x06"/>
                <edc:SFRFieldSemantic edc:cname="4096MV" edc:desc="Internal 4.096V Reference" edc:when="(field &amp; 0x7) == 0x07"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="TIMEBASE" edc:nzwidth="0x5" edc:desc="Reference Selection"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="ADC0" edc:cname="CTRLD" edc:nzwidth="0x8" edc:access="----nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xF" edc:_addr="0x603">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="ADC0">
              <edc:SFRFieldDef edc:cname="WINCM" edc:nzwidth="0x3" edc:desc="Window Comparator Mode">
                <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="No Window Comparison" edc:when="(field &amp; 0x7) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="BELOW" edc:desc="Below Window" edc:when="(field &amp; 0x7) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="ABOVE" edc:desc="Above Window" edc:when="(field &amp; 0x7) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="INSIDE" edc:desc="Inside Window" edc:when="(field &amp; 0x7) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="OUTSIDE" edc:desc="Outside Window" edc:when="(field &amp; 0x7) == 0x04"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="WINSRC" edc:nzwidth="0x1" edc:desc="Window Mode Source">
                <edc:SFRFieldSemantic edc:cname="RESULT" edc:desc="Result register" edc:when="(field &amp; 0x1) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="SAMPLE" edc:desc="Sample register" edc:when="(field &amp; 0x1) == 0x01"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="ADC0" edc:cname="INTCTRL" edc:nzwidth="0x8" edc:access="--nnnnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3F" edc:_addr="0x604">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="ADC0">
              <edc:SFRFieldDef edc:cname="RESRDY" edc:nzwidth="0x1" edc:desc="Result Ready Interrupt Enable"/>
              <edc:SFRFieldDef edc:cname="SAMPRDY" edc:nzwidth="0x1" edc:desc="Sample Ready Interrupt Enable"/>
              <edc:SFRFieldDef edc:cname="WCMP" edc:nzwidth="0x1" edc:desc="Window Comparator Interrupt Enable"/>
              <edc:SFRFieldDef edc:cname="RESOVR" edc:nzwidth="0x1" edc:desc="Result Overwritten Interrupt Enable"/>
              <edc:SFRFieldDef edc:cname="SAMPOVR" edc:nzwidth="0x1" edc:desc="Sample Overwritten Interrupt Enable"/>
              <edc:SFRFieldDef edc:cname="TRIGOVR" edc:nzwidth="0x1" edc:desc="Trigger Overrun Interrupt Enable"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="ADC0" edc:cname="INTFLAGS" edc:nzwidth="0x8" edc:access="--nnnnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3F" edc:_addr="0x605">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="ADC0">
              <edc:SFRFieldDef edc:cname="RESRDY" edc:nzwidth="0x1" edc:desc="Result Ready Interrupt Flag"/>
              <edc:SFRFieldDef edc:cname="SAMPRDY" edc:nzwidth="0x1" edc:desc="Sample Ready Interrupt Flag"/>
              <edc:SFRFieldDef edc:cname="WCMP" edc:nzwidth="0x1" edc:desc="Window Comparator Interrupt Flag"/>
              <edc:SFRFieldDef edc:cname="RESOVR" edc:nzwidth="0x1" edc:desc="Result Overwritten Interrupt Flag"/>
              <edc:SFRFieldDef edc:cname="SAMPOVR" edc:nzwidth="0x1" edc:desc="Sample Overwritten Interrupt Flag"/>
              <edc:SFRFieldDef edc:cname="TRIGOVR" edc:nzwidth="0x1" edc:desc="Trigger Overrun Interrupt Flag"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="ADC0" edc:cname="STATUS" edc:nzwidth="0x8" edc:access="-------r" edc:por="00000000" edc:mclr="00000000" edc:impl="0x1" edc:_addr="0x606">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="ADC0">
              <edc:SFRFieldDef edc:cname="ADCBUSY" edc:nzwidth="0x1" edc:desc="ADC Busy"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="ADC0" edc:cname="DBGCTRL" edc:nzwidth="0x8" edc:access="-------n" edc:por="00000000" edc:mclr="00000000" edc:impl="0x1" edc:_addr="0x607">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="ADC0">
              <edc:SFRFieldDef edc:cname="DBGRUN" edc:nzwidth="0x1" edc:desc="Debug run"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="ADC0" edc:cname="CTRLE" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x608">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="ADC0">
              <edc:SFRFieldDef edc:cname="SAMPDUR" edc:nzwidth="0x8" edc:desc="Sampling time"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="ADC0" edc:cname="CTRLF" edc:nzwidth="0x8" edc:access="--nnnnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3F" edc:_addr="0x609">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="ADC0">
              <edc:SFRFieldDef edc:cname="SAMPNUM" edc:nzwidth="0x4" edc:desc="Sample numbers">
                <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="No accumulation" edc:when="(field &amp; 0xF) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="ACC2" edc:desc="2 samples accumulation" edc:when="(field &amp; 0xF) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="ACC4" edc:desc="4 samples accumulation" edc:when="(field &amp; 0xF) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="ACC8" edc:desc="8 samples accumulation" edc:when="(field &amp; 0xF) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="ACC16" edc:desc="16 samples accumulation" edc:when="(field &amp; 0xF) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="ACC32" edc:desc="32 samples accumulation" edc:when="(field &amp; 0xF) == 0x05"/>
                <edc:SFRFieldSemantic edc:cname="ACC64" edc:desc="64 samples accumulation" edc:when="(field &amp; 0xF) == 0x06"/>
                <edc:SFRFieldSemantic edc:cname="ACC128" edc:desc="128 samples accumulation" edc:when="(field &amp; 0xF) == 0x07"/>
                <edc:SFRFieldSemantic edc:cname="ACC256" edc:desc="256 samples accumulation" edc:when="(field &amp; 0xF) == 0x08"/>
                <edc:SFRFieldSemantic edc:cname="ACC512" edc:desc="512 samples accumulation" edc:when="(field &amp; 0xF) == 0x09"/>
                <edc:SFRFieldSemantic edc:cname="ACC1024" edc:desc="1024 samples accumulation" edc:when="(field &amp; 0xF) == 0x0A"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="LEFTADJ" edc:nzwidth="0x1" edc:desc="Left adjust"/>
              <edc:SFRFieldDef edc:cname="FREERUN" edc:nzwidth="0x1" edc:desc="Free running mode"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="ADC0" edc:cname="COMMAND" edc:nzwidth="0x8" edc:access="nnnn-nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xF7" edc:_addr="0x60A">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="ADC0">
              <edc:SFRFieldDef edc:cname="START" edc:nzwidth="0x3" edc:desc="Start command">
                <edc:SFRFieldSemantic edc:cname="STOP" edc:desc="Stop an ongoing conversion" edc:when="(field &amp; 0x7) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="IMMEDIATE" edc:desc="Start immediately" edc:when="(field &amp; 0x7) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="MUXPOS_WRITE" edc:desc="Start on MUXPOS write" edc:when="(field &amp; 0x7) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="MUXNEG_WRITE" edc:desc="Start on MUXNEG write" edc:when="(field &amp; 0x7) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="EVENT_TRIGGER" edc:desc="Start on event" edc:when="(field &amp; 0x7) == 0x04"/>
              </edc:SFRFieldDef>
              <edc:AdjustPoint edc:offset="0x1"/>
              <edc:SFRFieldDef edc:cname="MODE" edc:nzwidth="0x3" edc:desc="Mode">
                <edc:SFRFieldSemantic edc:cname="SINGLE_8BIT" edc:desc="Single Conversion 8-bit" edc:when="(field &amp; 0x7) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="SINGLE_12BIT" edc:desc="Single Conversion 12-bit" edc:when="(field &amp; 0x7) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="SERIES" edc:desc="Series Accumulation" edc:when="(field &amp; 0x7) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="SERIES_SCALING" edc:desc="Series Accumulation with Scaling" edc:when="(field &amp; 0x7) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="BURST" edc:desc="Burst Accumulation" edc:when="(field &amp; 0x7) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="BURST_SCALING" edc:desc="Burst Accumulation with Scaling" edc:when="(field &amp; 0x7) == 0x05"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="DIFF" edc:nzwidth="0x1" edc:desc="Differential mode"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="ADC0" edc:cname="PGACTRL" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x60B">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="ADC0">
              <edc:SFRFieldDef edc:cname="PGAEN" edc:nzwidth="0x1" edc:desc="PGA Enable"/>
              <edc:SFRFieldDef edc:cname="ADCPGASAMPDUR" edc:nzwidth="0x2" edc:desc="ADC PGA Sample Duration">
                <edc:SFRFieldSemantic edc:cname="6CLK" edc:desc="6 ADC cycles" edc:when="(field &amp; 0x3) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="15CLK" edc:desc="15 ADC cycles" edc:when="(field &amp; 0x3) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="20CLK" edc:desc="20 ADC cycles" edc:when="(field &amp; 0x3) == 0x02"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="PGABIASSEL" edc:nzwidth="0x2" edc:desc="PGA BIAS Select">
                <edc:SFRFieldSemantic edc:cname="1X" edc:desc="1x BIAS current" edc:when="(field &amp; 0x3) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="3_4X" edc:desc="3/4x BIAS current" edc:when="(field &amp; 0x3) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="1_2X" edc:desc="1/2x BIAS current" edc:when="(field &amp; 0x3) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="1_4X" edc:desc="1/4x BIAS current" edc:when="(field &amp; 0x3) == 0x03"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="GAIN" edc:nzwidth="0x3" edc:desc="Gain">
                <edc:SFRFieldSemantic edc:cname="1X" edc:desc="1X Gain" edc:when="(field &amp; 0x7) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="2X" edc:desc="2X Gain" edc:when="(field &amp; 0x7) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="4X" edc:desc="4X Gain" edc:when="(field &amp; 0x7) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="8X" edc:desc="8X Gain" edc:when="(field &amp; 0x7) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="16X" edc:desc="16X Gain" edc:when="(field &amp; 0x7) == 0x04"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="ADC0" edc:cname="MUXPOS" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x60C">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="ADC0">
              <edc:SFRFieldDef edc:cname="MUXPOS" edc:nzwidth="0x6" edc:desc="Analog Channel Selection Bits">
                <edc:SFRFieldSemantic edc:cname="AIN1" edc:desc="ADC input pin 1" edc:when="(field &amp; 0x3F) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="AIN2" edc:desc="ADC input pin 2" edc:when="(field &amp; 0x3F) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="AIN3" edc:desc="ADC input pin 3" edc:when="(field &amp; 0x3F) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="AIN4" edc:desc="ADC input pin 4" edc:when="(field &amp; 0x3F) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="AIN5" edc:desc="ADC input pin 5" edc:when="(field &amp; 0x3F) == 0x05"/>
                <edc:SFRFieldSemantic edc:cname="AIN6" edc:desc="ADC input pin 6" edc:when="(field &amp; 0x3F) == 0x06"/>
                <edc:SFRFieldSemantic edc:cname="AIN7" edc:desc="ADC input pin 7" edc:when="(field &amp; 0x3F) == 0x07"/>
                <edc:SFRFieldSemantic edc:cname="AIN8" edc:desc="ADC input pin 8" edc:when="(field &amp; 0x3F) == 0x08"/>
                <edc:SFRFieldSemantic edc:cname="AIN9" edc:desc="ADC input pin 9" edc:when="(field &amp; 0x3F) == 0x09"/>
                <edc:SFRFieldSemantic edc:cname="AIN10" edc:desc="ADC input pin 10" edc:when="(field &amp; 0x3F) == 0x0A"/>
                <edc:SFRFieldSemantic edc:cname="AIN11" edc:desc="ADC input pin 11" edc:when="(field &amp; 0x3F) == 0x0B"/>
                <edc:SFRFieldSemantic edc:cname="AIN12" edc:desc="ADC input pin 12" edc:when="(field &amp; 0x3F) == 0x0C"/>
                <edc:SFRFieldSemantic edc:cname="AIN13" edc:desc="ADC input pin 13" edc:when="(field &amp; 0x3F) == 0x0D"/>
                <edc:SFRFieldSemantic edc:cname="AIN14" edc:desc="ADC input pin 14" edc:when="(field &amp; 0x3F) == 0x0E"/>
                <edc:SFRFieldSemantic edc:cname="AIN15" edc:desc="ADC input pin 15" edc:when="(field &amp; 0x3F) == 0x0F"/>
                <edc:SFRFieldSemantic edc:cname="GND" edc:desc="Ground" edc:when="(field &amp; 0x3F) == 0x30"/>
                <edc:SFRFieldSemantic edc:cname="VDDDIV10" edc:desc="VDD/10" edc:when="(field &amp; 0x3F) == 0x31"/>
                <edc:SFRFieldSemantic edc:cname="TEMPSENSE" edc:desc="Temperature sensor" edc:when="(field &amp; 0x3F) == 0x32"/>
                <edc:SFRFieldSemantic edc:cname="DACREF0" edc:desc="DACREF from AC0" edc:when="(field &amp; 0x3F) == 0x33"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="VIA" edc:nzwidth="0x2" edc:desc="VIA">
                <edc:SFRFieldSemantic edc:cname="ADC" edc:desc="Via ADC" edc:when="(field &amp; 0x3) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="PGA" edc:desc="Via PGA" edc:when="(field &amp; 0x3) == 0x01"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="ADC0" edc:cname="MUXNEG" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x60D">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="ADC0">
              <edc:SFRFieldDef edc:cname="MUXNEG" edc:nzwidth="0x6" edc:desc="Analog Channel Selection Bits">
                <edc:SFRFieldSemantic edc:cname="AIN1" edc:desc="ADC input pin 1" edc:when="(field &amp; 0x3F) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="AIN2" edc:desc="ADC input pin 2" edc:when="(field &amp; 0x3F) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="AIN3" edc:desc="ADC input pin 3" edc:when="(field &amp; 0x3F) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="AIN4" edc:desc="ADC input pin 4" edc:when="(field &amp; 0x3F) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="AIN5" edc:desc="ADC input pin 5" edc:when="(field &amp; 0x3F) == 0x05"/>
                <edc:SFRFieldSemantic edc:cname="AIN6" edc:desc="ADC input pin 6" edc:when="(field &amp; 0x3F) == 0x06"/>
                <edc:SFRFieldSemantic edc:cname="AIN7" edc:desc="ADC input pin 7" edc:when="(field &amp; 0x3F) == 0x07"/>
                <edc:SFRFieldSemantic edc:cname="GND" edc:desc="Ground" edc:when="(field &amp; 0x3F) == 0x30"/>
                <edc:SFRFieldSemantic edc:cname="VDDDIV10" edc:desc="VDD/10" edc:when="(field &amp; 0x3F) == 0x31"/>
                <edc:SFRFieldSemantic edc:cname="DACREF0" edc:desc="DACREF from AC0" edc:when="(field &amp; 0x3F) == 0x33"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="VIA" edc:nzwidth="0x2" edc:desc="VIA">
                <edc:SFRFieldSemantic edc:cname="ADC" edc:desc="Via ADC" edc:when="(field &amp; 0x3) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="PGA" edc:desc="Via PGA" edc:when="(field &amp; 0x3) == 0x01"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:AdjustPoint edc:offset="0x2" edc:_addr="0x60E"/>
        <edc:SFRDef ltx:memberofperipheral="ADC0" edc:cname="RESULT" edc:nzwidth="0x20" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:_addr="0x610"/>
        <edc:SFRDef ltx:memberofperipheral="ADC0" edc:cname="SAMPLE" edc:nzwidth="0x10" edc:access="rrrrrrrrrrrrrrrr" edc:_addr="0x614"/>
        <edc:AdjustPoint edc:offset="0x2" edc:_addr="0x616"/>
        <edc:SFRDef ltx:memberofperipheral="ADC0" edc:cname="TEMP0" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x618">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="ADC0">
              <edc:SFRFieldDef edc:cname="TEMP" edc:nzwidth="0x8" edc:desc="Temporary"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="ADC0" edc:cname="TEMP1" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x619">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="ADC0">
              <edc:SFRFieldDef edc:cname="TEMP" edc:nzwidth="0x8" edc:desc="Temporary"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="ADC0" edc:cname="TEMP2" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x61A">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="ADC0">
              <edc:SFRFieldDef edc:cname="TEMP" edc:nzwidth="0x8" edc:desc="Temporary"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:AdjustPoint edc:offset="0x1" edc:_addr="0x61B"/>
        <edc:SFRDef ltx:memberofperipheral="ADC0" edc:cname="WINLT" edc:nzwidth="0x10" edc:access="nnnnnnnnnnnnnnnn" edc:_addr="0x61C"/>
        <edc:SFRDef ltx:memberofperipheral="ADC0" edc:cname="WINHT" edc:nzwidth="0x10" edc:access="nnnnnnnnnnnnnnnn" edc:_addr="0x61E"/>
        <edc:AdjustPoint edc:offset="0x60" edc:_addr="0x620"/>
        <edc:SFRDef ltx:memberofperipheral="AC0" edc:cname="CTRLA" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x680">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="AC0">
              <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="Enable"/>
              <edc:SFRFieldDef edc:cname="HYSMODE" edc:nzwidth="0x2" edc:desc="Hysteresis Mode">
                <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="No hysteresis" edc:when="(field &amp; 0x3) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="10mV" edc:desc="10mV hysteresis" edc:when="(field &amp; 0x3) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="25mV" edc:desc="25mV hysteresis" edc:when="(field &amp; 0x3) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="50mV" edc:desc="50mV hysteresis" edc:when="(field &amp; 0x3) == 0x03"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="LPMODE" edc:nzwidth="0x1" edc:desc="Low Power Mode">
                <edc:SFRFieldSemantic edc:cname="DIS" edc:desc="Low power mode disabled" edc:when="(field &amp; 0x1) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="EN" edc:desc="Low power mode enabled" edc:when="(field &amp; 0x1) == 0x01"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="INTMODE" edc:nzwidth="0x2" edc:desc="Interrupt Mode">
                <edc:SFRFieldSemantic edc:cname="BOTHEDGE" edc:desc="Both Edge" edc:when="(field &amp; 0x3) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="NEGEDGE" edc:desc="Negative Edge" edc:when="(field &amp; 0x3) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="POSEDGE" edc:desc="Positive Edge" edc:when="(field &amp; 0x3) == 0x03"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="OUTEN" edc:nzwidth="0x1" edc:desc="Output Buffer Enable"/>
              <edc:SFRFieldDef edc:cname="RUNSTDBY" edc:nzwidth="0x1" edc:desc="Run in Standby Mode"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:AdjustPoint edc:offset="0x1" edc:_addr="0x681"/>
        <edc:SFRDef ltx:memberofperipheral="AC0" edc:cname="MUXCTRLA" edc:nzwidth="0x8" edc:access="n--nn-nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x9B" edc:_addr="0x682">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="AC0">
              <edc:SFRFieldDef edc:cname="MUXNEG" edc:nzwidth="0x2" edc:desc="Negative Input MUX Selection">
                <edc:SFRFieldSemantic edc:cname="AINN0" edc:desc="Negative Pin 0" edc:when="(field &amp; 0x3) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="AINN1" edc:desc="Negative Pin 1" edc:when="(field &amp; 0x3) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="AINN2" edc:desc="Negative Pin 2" edc:when="(field &amp; 0x3) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="DACREF" edc:desc="DAC Voltage Reference" edc:when="(field &amp; 0x3) == 0x03"/>
              </edc:SFRFieldDef>
              <edc:AdjustPoint edc:offset="0x1"/>
              <edc:SFRFieldDef edc:cname="MUXPOS" edc:nzwidth="0x2" edc:desc="Positive Input MUX Selection">
                <edc:SFRFieldSemantic edc:cname="AINP0" edc:desc="Positive Pin 0" edc:when="(field &amp; 0x3) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="AINP1" edc:desc="Positive Pin 1" edc:when="(field &amp; 0x3) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="AINP2" edc:desc="Positive Pin 2" edc:when="(field &amp; 0x3) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="AINP3" edc:desc="Positive Pin 3" edc:when="(field &amp; 0x3) == 0x03"/>
              </edc:SFRFieldDef>
              <edc:AdjustPoint edc:offset="0x2"/>
              <edc:SFRFieldDef edc:cname="INVERT" edc:nzwidth="0x1" edc:desc="Invert AC Output"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:AdjustPoint edc:offset="0x1" edc:_addr="0x683"/>
        <edc:SFRDef ltx:memberofperipheral="AC0" edc:cname="DAC0REF" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="11111111" edc:mclr="11111111" edc:_addr="0x684">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="AC0">
              <edc:SFRFieldDef edc:cname="DACREF" edc:nzwidth="0x8" edc:desc="DACREF Data Value"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:AdjustPoint edc:offset="0x1" edc:_addr="0x685"/>
        <edc:SFRDef ltx:memberofperipheral="AC0" edc:cname="INTCTRL" edc:nzwidth="0x8" edc:access="-------n" edc:por="00000000" edc:mclr="00000000" edc:impl="0x1" edc:_addr="0x686">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="AC0">
              <edc:SFRFieldDef edc:cname="CMP" edc:nzwidth="0x1" edc:desc="Analog Comparator 0 Interrupt Enable"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="AC0" edc:cname="STATUS" edc:nzwidth="0x8" edc:access="---r---n" edc:por="00000000" edc:mclr="00000000" edc:impl="0x11" edc:_addr="0x687">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="AC0">
              <edc:SFRFieldDef edc:cname="CMP" edc:nzwidth="0x1" edc:desc="Analog Comparator Interrupt Flag"/>
              <edc:AdjustPoint edc:offset="0x3"/>
              <edc:SFRFieldDef edc:cname="STATE" edc:nzwidth="0x1" edc:desc="Analog Comparator State"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:AdjustPoint edc:offset="0x178" edc:_addr="0x688"/>
        <edc:SFRDef ltx:memberofperipheral="USART0" edc:cname="RXDATAL" edc:nzwidth="0x8" edc:access="rrrrrrrr" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x800">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="USART0">
              <edc:SFRFieldDef edc:cname="DATA" edc:nzwidth="0x8" edc:desc="RX Data"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="USART0" edc:cname="RXDATAH" edc:nzwidth="0x8" edc:access="rr---rrr" edc:por="00000000" edc:mclr="00000000" edc:impl="0xC7" edc:_addr="0x801">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="USART0">
              <edc:SFRFieldDef edc:cname="DATA8" edc:nzwidth="0x1" edc:desc="Receiver Data Register"/>
              <edc:SFRFieldDef edc:cname="PERR" edc:nzwidth="0x1" edc:desc="Parity Error"/>
              <edc:SFRFieldDef edc:cname="FERR" edc:nzwidth="0x1" edc:desc="Frame Error"/>
              <edc:AdjustPoint edc:offset="0x3"/>
              <edc:SFRFieldDef edc:cname="BUFOVF" edc:nzwidth="0x1" edc:desc="Buffer Overflow"/>
              <edc:SFRFieldDef edc:cname="RXCIF" edc:nzwidth="0x1" edc:desc="Receive Complete Interrupt Flag"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="USART0" edc:cname="TXDATAL" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x802">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="USART0">
              <edc:SFRFieldDef edc:cname="DATA" edc:nzwidth="0x8" edc:desc="Transmit Data Register"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="USART0" edc:cname="TXDATAH" edc:nzwidth="0x8" edc:access="-------n" edc:por="00000000" edc:mclr="00000000" edc:impl="0x1" edc:_addr="0x803">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="USART0">
              <edc:SFRFieldDef edc:cname="DATA8" edc:nzwidth="0x1" edc:desc="Transmit Data Register (CHSIZE=9bit)"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="USART0" edc:cname="STATUS" edc:nzwidth="0x8" edc:access="rnrnn-nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xFB" edc:_addr="0x804">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="USART0">
              <edc:SFRFieldDef edc:cname="WFB" edc:nzwidth="0x1" edc:desc="Wait For Break"/>
              <edc:SFRFieldDef edc:cname="BDF" edc:nzwidth="0x1" edc:desc="Break Detected Flag"/>
              <edc:AdjustPoint edc:offset="0x1"/>
              <edc:SFRFieldDef edc:cname="ISFIF" edc:nzwidth="0x1" edc:desc="Inconsistent Sync Field Interrupt Flag"/>
              <edc:SFRFieldDef edc:cname="RXSIF" edc:nzwidth="0x1" edc:desc="Receive Start Interrupt"/>
              <edc:SFRFieldDef edc:cname="DREIF" edc:nzwidth="0x1" edc:desc="Data Register Empty Flag"/>
              <edc:SFRFieldDef edc:cname="TXCIF" edc:nzwidth="0x1" edc:desc="Transmit Interrupt Flag"/>
              <edc:SFRFieldDef edc:cname="RXCIF" edc:nzwidth="0x1" edc:desc="Receive Complete Interrupt Flag"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="USART0" edc:cname="CTRLA" edc:nzwidth="0x8" edc:access="nnnnnn-n" edc:por="00000000" edc:mclr="00000000" edc:impl="0xFD" edc:_addr="0x805">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="USART0">
              <edc:SFRFieldDef edc:cname="RS485" edc:nzwidth="0x1" edc:desc="RS485 Mode internal transmitter">
                <edc:SFRFieldSemantic edc:cname="DISABLE" edc:desc="RS485 Mode disabled" edc:when="(field &amp; 0x1) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="ENABLE" edc:desc="RS485 Mode enabled" edc:when="(field &amp; 0x1) == 0x01"/>
              </edc:SFRFieldDef>
              <edc:AdjustPoint edc:offset="0x1"/>
              <edc:SFRFieldDef edc:cname="ABEIE" edc:nzwidth="0x1" edc:desc="Auto-baud Error Interrupt Enable"/>
              <edc:SFRFieldDef edc:cname="LBME" edc:nzwidth="0x1" edc:desc="Loop-back Mode Enable"/>
              <edc:SFRFieldDef edc:cname="RXSIE" edc:nzwidth="0x1" edc:desc="Receiver Start Frame Interrupt Enable"/>
              <edc:SFRFieldDef edc:cname="DREIE" edc:nzwidth="0x1" edc:desc="Data Register Empty Interrupt Enable"/>
              <edc:SFRFieldDef edc:cname="TXCIE" edc:nzwidth="0x1" edc:desc="Transmit Complete Interrupt Enable"/>
              <edc:SFRFieldDef edc:cname="RXCIE" edc:nzwidth="0x1" edc:desc="Receive Complete Interrupt Enable"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="USART0" edc:cname="CTRLB" edc:nzwidth="0x8" edc:access="nn-nnnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xDF" edc:_addr="0x806">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="USART0">
              <edc:SFRFieldDef edc:cname="MPCM" edc:nzwidth="0x1" edc:desc="Multi-processor Communication Mode"/>
              <edc:SFRFieldDef edc:cname="RXMODE" edc:nzwidth="0x2" edc:desc="Receiver Mode">
                <edc:SFRFieldSemantic edc:cname="NORMAL" edc:desc="Normal mode" edc:when="(field &amp; 0x3) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="CLK2X" edc:desc="CLK2x mode" edc:when="(field &amp; 0x3) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="GENAUTO" edc:desc="Generic autobaud mode" edc:when="(field &amp; 0x3) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="LINAUTO" edc:desc="LIN constrained autobaud mode" edc:when="(field &amp; 0x3) == 0x03"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="ODME" edc:nzwidth="0x1" edc:desc="Open Drain Mode Enable"/>
              <edc:SFRFieldDef edc:cname="SFDEN" edc:nzwidth="0x1" edc:desc="Start Frame Detection Enable"/>
              <edc:AdjustPoint edc:offset="0x1"/>
              <edc:SFRFieldDef edc:cname="TXEN" edc:nzwidth="0x1" edc:desc="Transmitter Enable"/>
              <edc:SFRFieldDef edc:cname="RXEN" edc:nzwidth="0x1" edc:desc="Reciever enable"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="USART0" edc:cname="CTRLC" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000011" edc:mclr="00000011" edc:_addr="0x807">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="USART0">
              <edc:SFRFieldDef edc:cname="CHSIZE" edc:nzwidth="0x3" edc:desc="Character Size">
                <edc:SFRFieldSemantic edc:cname="5BIT" edc:desc="Character size: 5 bit" edc:when="(field &amp; 0x7) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="6BIT" edc:desc="Character size: 6 bit" edc:when="(field &amp; 0x7) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="7BIT" edc:desc="Character size: 7 bit" edc:when="(field &amp; 0x7) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="8BIT" edc:desc="Character size: 8 bit" edc:when="(field &amp; 0x7) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="9BITL" edc:desc="Character size: 9 bit read low byte first" edc:when="(field &amp; 0x7) == 0x06"/>
                <edc:SFRFieldSemantic edc:cname="9BITH" edc:desc="Character size: 9 bit read high byte first" edc:when="(field &amp; 0x7) == 0x07"/>
              </edc:SFRFieldDef>
              <edc:AdjustPoint edc:offset="-2"/>
              <edc:SFRFieldDef edc:cname="UCPHA" edc:nzwidth="0x1" edc:desc="SPI Host Mode, Clock Phase"/>
              <edc:SFRFieldDef edc:cname="UDORD" edc:nzwidth="0x1" edc:desc="SPI Host Mode, Data Order"/>
              <edc:SFRFieldDef edc:cname="SBMODE" edc:nzwidth="0x1" edc:desc="Stop Bit Mode">
                <edc:SFRFieldSemantic edc:cname="1BIT" edc:desc="1 stop bit" edc:when="(field &amp; 0x1) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="2BIT" edc:desc="2 stop bits" edc:when="(field &amp; 0x1) == 0x01"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="PMODE" edc:nzwidth="0x2" edc:desc="Parity Mode">
                <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="No Parity" edc:when="(field &amp; 0x3) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="EVEN" edc:desc="Even Parity" edc:when="(field &amp; 0x3) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="ODD" edc:desc="Odd Parity" edc:when="(field &amp; 0x3) == 0x03"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="CMODE" edc:nzwidth="0x2" edc:desc="Communication Mode">
                <edc:SFRFieldSemantic edc:cname="ASYNCHRONOUS" edc:desc="Asynchronous Mode" edc:when="(field &amp; 0x3) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="SYNCHRONOUS" edc:desc="Synchronous Mode" edc:when="(field &amp; 0x3) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="IRCOM" edc:desc="Infrared Communication" edc:when="(field &amp; 0x3) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="MSPI" edc:desc="SPI Host Mode" edc:when="(field &amp; 0x3) == 0x03"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="USART0" edc:cname="BAUD" edc:nzwidth="0x10" edc:access="nnnnnnnnnnnnnnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:_addr="0x808"/>
        <edc:SFRDef ltx:memberofperipheral="USART0" edc:cname="CTRLD" edc:nzwidth="0x8" edc:access="nn------" edc:por="00000000" edc:mclr="00000000" edc:impl="0xC0" edc:_addr="0x80A">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="USART0">
              <edc:AdjustPoint edc:offset="0x6"/>
              <edc:SFRFieldDef edc:cname="ABW" edc:nzwidth="0x2" edc:desc="Auto Baud Window">
                <edc:SFRFieldSemantic edc:cname="WDW0" edc:desc="18% tolerance" edc:when="(field &amp; 0x3) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="WDW1" edc:desc="15% tolerance" edc:when="(field &amp; 0x3) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="WDW2" edc:desc="21% tolerance" edc:when="(field &amp; 0x3) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="WDW3" edc:desc="25% tolerance" edc:when="(field &amp; 0x3) == 0x03"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="USART0" edc:cname="DBGCTRL" edc:nzwidth="0x8" edc:access="-------n" edc:por="00000000" edc:mclr="00000000" edc:impl="0x1" edc:_addr="0x80B">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="USART0">
              <edc:SFRFieldDef edc:cname="DBGRUN" edc:nzwidth="0x1" edc:desc="Debug Run"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="USART0" edc:cname="EVCTRL" edc:nzwidth="0x8" edc:access="-------n" edc:por="00000000" edc:mclr="00000000" edc:impl="0x1" edc:_addr="0x80C">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="USART0">
              <edc:SFRFieldDef edc:cname="IREI" edc:nzwidth="0x1" edc:desc="IrDA Event Input Enable"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="USART0" edc:cname="TXPLCTRL" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x80D">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="USART0">
              <edc:SFRFieldDef edc:cname="TXPL" edc:nzwidth="0x8" edc:desc="Transmit pulse length"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="USART0" edc:cname="RXPLCTRL" edc:nzwidth="0x8" edc:access="-nnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x7F" edc:_addr="0x80E">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="USART0">
              <edc:SFRFieldDef edc:cname="RXPL" edc:nzwidth="0x7" edc:desc="Receiver Pulse Lenght"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:AdjustPoint edc:offset="0x11" edc:_addr="0x80F"/>
        <edc:SFRDef ltx:memberofperipheral="USART1" edc:cname="RXDATAL" edc:nzwidth="0x8" edc:access="rrrrrrrr" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x820">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="USART1">
              <edc:SFRFieldDef edc:cname="DATA" edc:nzwidth="0x8" edc:desc="RX Data"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="USART1" edc:cname="RXDATAH" edc:nzwidth="0x8" edc:access="rr---rrr" edc:por="00000000" edc:mclr="00000000" edc:impl="0xC7" edc:_addr="0x821">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="USART1">
              <edc:SFRFieldDef edc:cname="DATA8" edc:nzwidth="0x1" edc:desc="Receiver Data Register"/>
              <edc:SFRFieldDef edc:cname="PERR" edc:nzwidth="0x1" edc:desc="Parity Error"/>
              <edc:SFRFieldDef edc:cname="FERR" edc:nzwidth="0x1" edc:desc="Frame Error"/>
              <edc:AdjustPoint edc:offset="0x3"/>
              <edc:SFRFieldDef edc:cname="BUFOVF" edc:nzwidth="0x1" edc:desc="Buffer Overflow"/>
              <edc:SFRFieldDef edc:cname="RXCIF" edc:nzwidth="0x1" edc:desc="Receive Complete Interrupt Flag"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="USART1" edc:cname="TXDATAL" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x822">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="USART1">
              <edc:SFRFieldDef edc:cname="DATA" edc:nzwidth="0x8" edc:desc="Transmit Data Register"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="USART1" edc:cname="TXDATAH" edc:nzwidth="0x8" edc:access="-------n" edc:por="00000000" edc:mclr="00000000" edc:impl="0x1" edc:_addr="0x823">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="USART1">
              <edc:SFRFieldDef edc:cname="DATA8" edc:nzwidth="0x1" edc:desc="Transmit Data Register (CHSIZE=9bit)"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="USART1" edc:cname="STATUS" edc:nzwidth="0x8" edc:access="rnrnn-nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xFB" edc:_addr="0x824">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="USART1">
              <edc:SFRFieldDef edc:cname="WFB" edc:nzwidth="0x1" edc:desc="Wait For Break"/>
              <edc:SFRFieldDef edc:cname="BDF" edc:nzwidth="0x1" edc:desc="Break Detected Flag"/>
              <edc:AdjustPoint edc:offset="0x1"/>
              <edc:SFRFieldDef edc:cname="ISFIF" edc:nzwidth="0x1" edc:desc="Inconsistent Sync Field Interrupt Flag"/>
              <edc:SFRFieldDef edc:cname="RXSIF" edc:nzwidth="0x1" edc:desc="Receive Start Interrupt"/>
              <edc:SFRFieldDef edc:cname="DREIF" edc:nzwidth="0x1" edc:desc="Data Register Empty Flag"/>
              <edc:SFRFieldDef edc:cname="TXCIF" edc:nzwidth="0x1" edc:desc="Transmit Interrupt Flag"/>
              <edc:SFRFieldDef edc:cname="RXCIF" edc:nzwidth="0x1" edc:desc="Receive Complete Interrupt Flag"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="USART1" edc:cname="CTRLA" edc:nzwidth="0x8" edc:access="nnnnnn-n" edc:por="00000000" edc:mclr="00000000" edc:impl="0xFD" edc:_addr="0x825">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="USART1">
              <edc:SFRFieldDef edc:cname="RS485" edc:nzwidth="0x1" edc:desc="RS485 Mode internal transmitter">
                <edc:SFRFieldSemantic edc:cname="DISABLE" edc:desc="RS485 Mode disabled" edc:when="(field &amp; 0x1) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="ENABLE" edc:desc="RS485 Mode enabled" edc:when="(field &amp; 0x1) == 0x01"/>
              </edc:SFRFieldDef>
              <edc:AdjustPoint edc:offset="0x1"/>
              <edc:SFRFieldDef edc:cname="ABEIE" edc:nzwidth="0x1" edc:desc="Auto-baud Error Interrupt Enable"/>
              <edc:SFRFieldDef edc:cname="LBME" edc:nzwidth="0x1" edc:desc="Loop-back Mode Enable"/>
              <edc:SFRFieldDef edc:cname="RXSIE" edc:nzwidth="0x1" edc:desc="Receiver Start Frame Interrupt Enable"/>
              <edc:SFRFieldDef edc:cname="DREIE" edc:nzwidth="0x1" edc:desc="Data Register Empty Interrupt Enable"/>
              <edc:SFRFieldDef edc:cname="TXCIE" edc:nzwidth="0x1" edc:desc="Transmit Complete Interrupt Enable"/>
              <edc:SFRFieldDef edc:cname="RXCIE" edc:nzwidth="0x1" edc:desc="Receive Complete Interrupt Enable"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="USART1" edc:cname="CTRLB" edc:nzwidth="0x8" edc:access="nn-nnnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xDF" edc:_addr="0x826">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="USART1">
              <edc:SFRFieldDef edc:cname="MPCM" edc:nzwidth="0x1" edc:desc="Multi-processor Communication Mode"/>
              <edc:SFRFieldDef edc:cname="RXMODE" edc:nzwidth="0x2" edc:desc="Receiver Mode">
                <edc:SFRFieldSemantic edc:cname="NORMAL" edc:desc="Normal mode" edc:when="(field &amp; 0x3) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="CLK2X" edc:desc="CLK2x mode" edc:when="(field &amp; 0x3) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="GENAUTO" edc:desc="Generic autobaud mode" edc:when="(field &amp; 0x3) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="LINAUTO" edc:desc="LIN constrained autobaud mode" edc:when="(field &amp; 0x3) == 0x03"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="ODME" edc:nzwidth="0x1" edc:desc="Open Drain Mode Enable"/>
              <edc:SFRFieldDef edc:cname="SFDEN" edc:nzwidth="0x1" edc:desc="Start Frame Detection Enable"/>
              <edc:AdjustPoint edc:offset="0x1"/>
              <edc:SFRFieldDef edc:cname="TXEN" edc:nzwidth="0x1" edc:desc="Transmitter Enable"/>
              <edc:SFRFieldDef edc:cname="RXEN" edc:nzwidth="0x1" edc:desc="Reciever enable"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="USART1" edc:cname="CTRLC" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000011" edc:mclr="00000011" edc:_addr="0x827">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="USART1">
              <edc:SFRFieldDef edc:cname="CHSIZE" edc:nzwidth="0x3" edc:desc="Character Size">
                <edc:SFRFieldSemantic edc:cname="5BIT" edc:desc="Character size: 5 bit" edc:when="(field &amp; 0x7) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="6BIT" edc:desc="Character size: 6 bit" edc:when="(field &amp; 0x7) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="7BIT" edc:desc="Character size: 7 bit" edc:when="(field &amp; 0x7) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="8BIT" edc:desc="Character size: 8 bit" edc:when="(field &amp; 0x7) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="9BITL" edc:desc="Character size: 9 bit read low byte first" edc:when="(field &amp; 0x7) == 0x06"/>
                <edc:SFRFieldSemantic edc:cname="9BITH" edc:desc="Character size: 9 bit read high byte first" edc:when="(field &amp; 0x7) == 0x07"/>
              </edc:SFRFieldDef>
              <edc:AdjustPoint edc:offset="-2"/>
              <edc:SFRFieldDef edc:cname="UCPHA" edc:nzwidth="0x1" edc:desc="SPI Host Mode, Clock Phase"/>
              <edc:SFRFieldDef edc:cname="UDORD" edc:nzwidth="0x1" edc:desc="SPI Host Mode, Data Order"/>
              <edc:SFRFieldDef edc:cname="SBMODE" edc:nzwidth="0x1" edc:desc="Stop Bit Mode">
                <edc:SFRFieldSemantic edc:cname="1BIT" edc:desc="1 stop bit" edc:when="(field &amp; 0x1) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="2BIT" edc:desc="2 stop bits" edc:when="(field &amp; 0x1) == 0x01"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="PMODE" edc:nzwidth="0x2" edc:desc="Parity Mode">
                <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="No Parity" edc:when="(field &amp; 0x3) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="EVEN" edc:desc="Even Parity" edc:when="(field &amp; 0x3) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="ODD" edc:desc="Odd Parity" edc:when="(field &amp; 0x3) == 0x03"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="CMODE" edc:nzwidth="0x2" edc:desc="Communication Mode">
                <edc:SFRFieldSemantic edc:cname="ASYNCHRONOUS" edc:desc="Asynchronous Mode" edc:when="(field &amp; 0x3) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="SYNCHRONOUS" edc:desc="Synchronous Mode" edc:when="(field &amp; 0x3) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="IRCOM" edc:desc="Infrared Communication" edc:when="(field &amp; 0x3) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="MSPI" edc:desc="SPI Host Mode" edc:when="(field &amp; 0x3) == 0x03"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="USART1" edc:cname="BAUD" edc:nzwidth="0x10" edc:access="nnnnnnnnnnnnnnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:_addr="0x828"/>
        <edc:SFRDef ltx:memberofperipheral="USART1" edc:cname="CTRLD" edc:nzwidth="0x8" edc:access="nn------" edc:por="00000000" edc:mclr="00000000" edc:impl="0xC0" edc:_addr="0x82A">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="USART1">
              <edc:AdjustPoint edc:offset="0x6"/>
              <edc:SFRFieldDef edc:cname="ABW" edc:nzwidth="0x2" edc:desc="Auto Baud Window">
                <edc:SFRFieldSemantic edc:cname="WDW0" edc:desc="18% tolerance" edc:when="(field &amp; 0x3) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="WDW1" edc:desc="15% tolerance" edc:when="(field &amp; 0x3) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="WDW2" edc:desc="21% tolerance" edc:when="(field &amp; 0x3) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="WDW3" edc:desc="25% tolerance" edc:when="(field &amp; 0x3) == 0x03"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="USART1" edc:cname="DBGCTRL" edc:nzwidth="0x8" edc:access="-------n" edc:por="00000000" edc:mclr="00000000" edc:impl="0x1" edc:_addr="0x82B">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="USART1">
              <edc:SFRFieldDef edc:cname="DBGRUN" edc:nzwidth="0x1" edc:desc="Debug Run"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="USART1" edc:cname="EVCTRL" edc:nzwidth="0x8" edc:access="-------n" edc:por="00000000" edc:mclr="00000000" edc:impl="0x1" edc:_addr="0x82C">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="USART1">
              <edc:SFRFieldDef edc:cname="IREI" edc:nzwidth="0x1" edc:desc="IrDA Event Input Enable"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="USART1" edc:cname="TXPLCTRL" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x82D">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="USART1">
              <edc:SFRFieldDef edc:cname="TXPL" edc:nzwidth="0x8" edc:desc="Transmit pulse length"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="USART1" edc:cname="RXPLCTRL" edc:nzwidth="0x8" edc:access="-nnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x7F" edc:_addr="0x82E">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="USART1">
              <edc:SFRFieldDef edc:cname="RXPL" edc:nzwidth="0x7" edc:desc="Receiver Pulse Lenght"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:AdjustPoint edc:offset="0x71" edc:_addr="0x82F"/>
        <edc:SFRDef ltx:memberofperipheral="TWI0" edc:cname="CTRLA" edc:nzwidth="0x8" edc:access="---nnnn-" edc:por="00000000" edc:mclr="00000000" edc:impl="0x1E" edc:_addr="0x8A0">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TWI0">
              <edc:AdjustPoint edc:offset="0x1"/>
              <edc:SFRFieldDef edc:cname="FMPEN" edc:nzwidth="0x1" edc:desc="Fast-mode Plus Enable"/>
              <edc:SFRFieldDef edc:cname="SDAHOLD" edc:nzwidth="0x2" edc:desc="SDA Hold Time">
                <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="SDA hold time off" edc:when="(field &amp; 0x3) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="50NS" edc:desc="Typical 50ns hold time" edc:when="(field &amp; 0x3) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="300NS" edc:desc="Typical 300ns hold time" edc:when="(field &amp; 0x3) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="500NS" edc:desc="Typical 500ns hold time" edc:when="(field &amp; 0x3) == 0x03"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="SDASETUP" edc:nzwidth="0x1" edc:desc="SDA Setup Time">
                <edc:SFRFieldSemantic edc:cname="4CYC" edc:desc="SDA setup time is 4 clock cycles" edc:when="(field &amp; 0x1) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="8CYC" edc:desc="SDA setup time is 8 clock cycles" edc:when="(field &amp; 0x1) == 0x01"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:AdjustPoint edc:offset="0x1" edc:_addr="0x8A1"/>
        <edc:SFRDef ltx:memberofperipheral="TWI0" edc:cname="DBGCTRL" edc:nzwidth="0x8" edc:access="-------n" edc:por="00000000" edc:mclr="00000000" edc:impl="0x1" edc:_addr="0x8A2">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TWI0">
              <edc:SFRFieldDef edc:cname="DBGRUN" edc:nzwidth="0x1" edc:desc="Debug Run"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="TWI0" edc:cname="MCTRLA" edc:nzwidth="0x8" edc:access="nn-nnnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xDF" edc:_addr="0x8A3">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TWI0">
              <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="Enable TWI Host"/>
              <edc:SFRFieldDef edc:cname="SMEN" edc:nzwidth="0x1" edc:desc="Smart Mode Enable"/>
              <edc:SFRFieldDef edc:cname="TIMEOUT" edc:nzwidth="0x2" edc:desc="Inactive Bus Timeout">
                <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Bus Timeout Disabled" edc:when="(field &amp; 0x3) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="50US" edc:desc="50 Microseconds" edc:when="(field &amp; 0x3) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="100US" edc:desc="100 Microseconds" edc:when="(field &amp; 0x3) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="200US" edc:desc="200 Microseconds" edc:when="(field &amp; 0x3) == 0x03"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="QCEN" edc:nzwidth="0x1" edc:desc="Quick Command Enable"/>
              <edc:AdjustPoint edc:offset="0x1"/>
              <edc:SFRFieldDef edc:cname="WIEN" edc:nzwidth="0x1" edc:desc="Write Interrupt Enable"/>
              <edc:SFRFieldDef edc:cname="RIEN" edc:nzwidth="0x1" edc:desc="Read Interrupt Enable"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="TWI0" edc:cname="MCTRLB" edc:nzwidth="0x8" edc:access="----nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xF" edc:_addr="0x8A4">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TWI0">
              <edc:SFRFieldDef edc:cname="MCMD" edc:nzwidth="0x2" edc:desc="Command">
                <edc:SFRFieldSemantic edc:cname="NOACT" edc:desc="No Action" edc:when="(field &amp; 0x3) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="REPSTART" edc:desc="Issue Repeated Start Condition" edc:when="(field &amp; 0x3) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="RECVTRANS" edc:desc="Receive or Transmit Data, depending on DIR" edc:when="(field &amp; 0x3) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="STOP" edc:desc="Issue Stop Condition" edc:when="(field &amp; 0x3) == 0x03"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="ACKACT" edc:nzwidth="0x1" edc:desc="Acknowledge Action">
                <edc:SFRFieldSemantic edc:cname="ACK" edc:desc="Send ACK" edc:when="(field &amp; 0x1) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="NACK" edc:desc="Send NACK" edc:when="(field &amp; 0x1) == 0x01"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="FLUSH" edc:nzwidth="0x1" edc:desc="Flush"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="TWI0" edc:cname="MSTATUS" edc:nzwidth="0x8" edc:access="nnnrnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x8A5">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TWI0">
              <edc:SFRFieldDef edc:cname="BUSSTATE" edc:nzwidth="0x2" edc:desc="Bus State">
                <edc:SFRFieldSemantic edc:cname="UNKNOWN" edc:desc="Unknown Bus State" edc:when="(field &amp; 0x3) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="IDLE" edc:desc="Bus is Idle" edc:when="(field &amp; 0x3) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="OWNER" edc:desc="This Module Controls The Bus" edc:when="(field &amp; 0x3) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="BUSY" edc:desc="The Bus is Busy" edc:when="(field &amp; 0x3) == 0x03"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="BUSERR" edc:nzwidth="0x1" edc:desc="Bus Error"/>
              <edc:SFRFieldDef edc:cname="ARBLOST" edc:nzwidth="0x1" edc:desc="Arbitration Lost"/>
              <edc:SFRFieldDef edc:cname="RXACK" edc:nzwidth="0x1" edc:desc="Received Acknowledge"/>
              <edc:SFRFieldDef edc:cname="CLKHOLD" edc:nzwidth="0x1" edc:desc="Clock Hold"/>
              <edc:SFRFieldDef edc:cname="WIF" edc:nzwidth="0x1" edc:desc="Write Interrupt Flag"/>
              <edc:SFRFieldDef edc:cname="RIF" edc:nzwidth="0x1" edc:desc="Read Interrupt Flag"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="TWI0" edc:cname="MBAUD" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x8A6"/>
        <edc:SFRDef ltx:memberofperipheral="TWI0" edc:cname="MADDR" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x8A7"/>
        <edc:SFRDef ltx:memberofperipheral="TWI0" edc:cname="MDATA" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x8A8"/>
        <edc:SFRDef ltx:memberofperipheral="TWI0" edc:cname="SCTRLA" edc:nzwidth="0x8" edc:access="nnn--nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xE7" edc:_addr="0x8A9">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TWI0">
              <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="Enable TWI Client"/>
              <edc:SFRFieldDef edc:cname="SMEN" edc:nzwidth="0x1" edc:desc="Smart Mode Enable"/>
              <edc:SFRFieldDef edc:cname="PMEN" edc:nzwidth="0x1" edc:desc="Permissive Mode Enable"/>
              <edc:AdjustPoint edc:offset="0x2"/>
              <edc:SFRFieldDef edc:cname="PIEN" edc:nzwidth="0x1" edc:desc="Stop Interrupt Enable"/>
              <edc:SFRFieldDef edc:cname="APIEN" edc:nzwidth="0x1" edc:desc="Address/Stop Interrupt Enable"/>
              <edc:SFRFieldDef edc:cname="DIEN" edc:nzwidth="0x1" edc:desc="Data Interrupt Enable"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="TWI0" edc:cname="SCTRLB" edc:nzwidth="0x8" edc:access="-----nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x7" edc:_addr="0x8AA">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TWI0">
              <edc:SFRFieldDef edc:cname="SCMD" edc:nzwidth="0x2" edc:desc="Command">
                <edc:SFRFieldSemantic edc:cname="NOACT" edc:desc="No Action" edc:when="(field &amp; 0x3) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="COMPTRANS" edc:desc="Used To Complete a Transaction" edc:when="(field &amp; 0x3) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="RESPONSE" edc:desc="Used in Response to Address/Data Interrupt" edc:when="(field &amp; 0x3) == 0x03"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="ACKACT" edc:nzwidth="0x1" edc:desc="Acknowledge Action">
                <edc:SFRFieldSemantic edc:cname="ACK" edc:desc="Send ACK" edc:when="(field &amp; 0x1) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="NACK" edc:desc="Send NACK" edc:when="(field &amp; 0x1) == 0x01"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="TWI0" edc:cname="SSTATUS" edc:nzwidth="0x8" edc:access="nnrrnnrr" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x8AB">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TWI0">
              <edc:SFRFieldDef edc:cname="AP" edc:nzwidth="0x1" edc:desc="Client Address or Stop">
                <edc:SFRFieldSemantic edc:cname="STOP" edc:desc="Stop condition generated APIF" edc:when="(field &amp; 0x1) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="ADR" edc:desc="Address detection generated APIF" edc:when="(field &amp; 0x1) == 0x01"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="DIR" edc:nzwidth="0x1" edc:desc="Read/Write Direction"/>
              <edc:SFRFieldDef edc:cname="BUSERR" edc:nzwidth="0x1" edc:desc="Bus Error"/>
              <edc:SFRFieldDef edc:cname="COLL" edc:nzwidth="0x1" edc:desc="Collision"/>
              <edc:SFRFieldDef edc:cname="RXACK" edc:nzwidth="0x1" edc:desc="Received Acknowledge"/>
              <edc:SFRFieldDef edc:cname="CLKHOLD" edc:nzwidth="0x1" edc:desc="Clock Hold"/>
              <edc:SFRFieldDef edc:cname="APIF" edc:nzwidth="0x1" edc:desc="Address/Stop Interrupt Flag"/>
              <edc:SFRFieldDef edc:cname="DIF" edc:nzwidth="0x1" edc:desc="Data Interrupt Flag"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="TWI0" edc:cname="SADDR" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x8AC"/>
        <edc:SFRDef ltx:memberofperipheral="TWI0" edc:cname="SDATA" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x8AD"/>
        <edc:SFRDef ltx:memberofperipheral="TWI0" edc:cname="SADDRMASK" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x8AE">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TWI0">
              <edc:SFRFieldDef edc:cname="ADDREN" edc:nzwidth="0x1" edc:desc="Address Enable"/>
              <edc:SFRFieldDef edc:cname="ADDRMASK" edc:nzwidth="0x7" edc:desc="Address Mask"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:AdjustPoint edc:offset="0x11" edc:_addr="0x8AF"/>
        <edc:SFRDef ltx:memberofperipheral="SPI0" edc:cname="CTRLA" edc:nzwidth="0x8" edc:access="-nnn-nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x77" edc:_addr="0x8C0">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPI0">
              <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="Enable Module"/>
              <edc:SFRFieldDef edc:cname="PRESC" edc:nzwidth="0x2" edc:desc="Prescaler">
                <edc:SFRFieldSemantic edc:cname="DIV4" edc:desc="System Clock / 4" edc:when="(field &amp; 0x3) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="DIV16" edc:desc="System Clock / 16" edc:when="(field &amp; 0x3) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="DIV64" edc:desc="System Clock / 64" edc:when="(field &amp; 0x3) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="DIV128" edc:desc="System Clock / 128" edc:when="(field &amp; 0x3) == 0x03"/>
              </edc:SFRFieldDef>
              <edc:AdjustPoint edc:offset="0x1"/>
              <edc:SFRFieldDef edc:cname="CLK2X" edc:nzwidth="0x1" edc:desc="Enable Double Speed"/>
              <edc:SFRFieldDef edc:cname="MASTER" edc:nzwidth="0x1" edc:desc="Host Operation Enable"/>
              <edc:SFRFieldDef edc:cname="DORD" edc:nzwidth="0x1" edc:desc="Data Order Setting"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="SPI0" edc:cname="CTRLB" edc:nzwidth="0x8" edc:access="nn---nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xC7" edc:_addr="0x8C1">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPI0">
              <edc:SFRFieldDef edc:cname="MODE" edc:nzwidth="0x2" edc:desc="SPI Mode">
                <edc:SFRFieldSemantic edc:cname="0" edc:desc="SPI Mode 0" edc:when="(field &amp; 0x3) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="1" edc:desc="SPI Mode 1" edc:when="(field &amp; 0x3) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="2" edc:desc="SPI Mode 2" edc:when="(field &amp; 0x3) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="3" edc:desc="SPI Mode 3" edc:when="(field &amp; 0x3) == 0x03"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="SSD" edc:nzwidth="0x1" edc:desc="SPI Select Disable"/>
              <edc:AdjustPoint edc:offset="0x3"/>
              <edc:SFRFieldDef edc:cname="BUFWR" edc:nzwidth="0x1" edc:desc="Buffer Mode Wait for Receive"/>
              <edc:SFRFieldDef edc:cname="BUFEN" edc:nzwidth="0x1" edc:desc="Buffer Mode Enable"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="SPI0" edc:cname="INTCTRL" edc:nzwidth="0x8" edc:access="nnnn---n" edc:por="00000000" edc:mclr="00000000" edc:impl="0xF1" edc:_addr="0x8C2">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPI0">
              <edc:SFRFieldDef edc:cname="IE" edc:nzwidth="0x1" edc:desc="Interrupt Enable"/>
              <edc:AdjustPoint edc:offset="0x3"/>
              <edc:SFRFieldDef edc:cname="SSIE" edc:nzwidth="0x1" edc:desc="SPI Select Trigger Interrupt Enable"/>
              <edc:SFRFieldDef edc:cname="DREIE" edc:nzwidth="0x1" edc:desc="Data Register Empty Interrupt Enable"/>
              <edc:SFRFieldDef edc:cname="TXCIE" edc:nzwidth="0x1" edc:desc="Transfer Complete Interrupt Enable"/>
              <edc:SFRFieldDef edc:cname="RXCIE" edc:nzwidth="0x1" edc:desc="Receive Complete Interrupt Enable"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="SPI0" edc:cname="INTFLAGS" edc:nzwidth="0x8" edc:access="nnnn---n" edc:por="00000000" edc:mclr="00000000" edc:impl="0xF1" edc:_addr="0x8C3">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPI0">
              <edc:SFRFieldDef edc:cname="BUFOVF" edc:nzwidth="0x1" edc:desc="Buffer Overflow"/>
              <edc:AdjustPoint edc:offset="0x3"/>
              <edc:SFRFieldDef edc:cname="SSIF" edc:nzwidth="0x1" edc:desc="SPI Select Trigger Interrupt Flag"/>
              <edc:SFRFieldDef edc:cname="DREIF" edc:nzwidth="0x1" edc:desc="Data Register Empty Interrupt Flag"/>
              <edc:SFRFieldDef edc:cname="WRCOL" edc:nzwidth="0x1" edc:desc="Write Collision"/>
              <edc:SFRFieldDef edc:cname="IF" edc:nzwidth="0x1" edc:desc="Interrupt Flag"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="SPI0" edc:cname="DATA" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x8C4"/>
        <edc:AdjustPoint edc:offset="0x1BB" edc:_addr="0x8C5"/>
        <edc:SFRDef ltx:memberofperipheral="TCB0" edc:cname="CTRLA" edc:nzwidth="0x8" edc:access="-nnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x7F" edc:_addr="0xA80">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCB0">
              <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="Enable"/>
              <edc:SFRFieldDef edc:cname="CLKSEL" edc:nzwidth="0x3" edc:desc="Clock Select">
                <edc:SFRFieldSemantic edc:cname="DIV1" edc:desc="CLK_PER" edc:when="(field &amp; 0x7) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="DIV2" edc:desc="CLK_PER/2" edc:when="(field &amp; 0x7) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="TCA0" edc:desc="Use CLK_TCA from TCA0" edc:when="(field &amp; 0x7) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="EVENT" edc:desc="Count on event edge" edc:when="(field &amp; 0x7) == 0x07"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="SYNCUPD" edc:nzwidth="0x1" edc:desc="Synchronize Update"/>
              <edc:SFRFieldDef edc:cname="CASCADE" edc:nzwidth="0x1" edc:desc="Cascade two timers"/>
              <edc:SFRFieldDef edc:cname="RUNSTDBY" edc:nzwidth="0x1" edc:desc="Run Standby"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="TCB0" edc:cname="CTRLB" edc:nzwidth="0x8" edc:access="-nnn-nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x77" edc:_addr="0xA81">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCB0">
              <edc:SFRFieldDef edc:cname="CNTMODE" edc:nzwidth="0x3" edc:desc="Timer Mode">
                <edc:SFRFieldSemantic edc:cname="INT" edc:desc="Periodic Interrupt" edc:when="(field &amp; 0x7) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="TIMEOUT" edc:desc="Periodic Timeout" edc:when="(field &amp; 0x7) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="CAPT" edc:desc="Input Capture Event" edc:when="(field &amp; 0x7) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="FRQ" edc:desc="Input Capture Frequency measurement" edc:when="(field &amp; 0x7) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="PW" edc:desc="Input Capture Pulse-Width measurement" edc:when="(field &amp; 0x7) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="FRQPW" edc:desc="Input Capture Frequency and Pulse-Width measurement" edc:when="(field &amp; 0x7) == 0x05"/>
                <edc:SFRFieldSemantic edc:cname="SINGLE" edc:desc="Single Shot" edc:when="(field &amp; 0x7) == 0x06"/>
                <edc:SFRFieldSemantic edc:cname="PWM8" edc:desc="8-bit PWM" edc:when="(field &amp; 0x7) == 0x07"/>
              </edc:SFRFieldDef>
              <edc:AdjustPoint edc:offset="0x1"/>
              <edc:SFRFieldDef edc:cname="CCMPEN" edc:nzwidth="0x1" edc:desc="Pin Output Enable"/>
              <edc:SFRFieldDef edc:cname="CCMPINIT" edc:nzwidth="0x1" edc:desc="Pin Initial State"/>
              <edc:SFRFieldDef edc:cname="ASYNC" edc:nzwidth="0x1" edc:desc="Asynchronous Enable"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:AdjustPoint edc:offset="0x2" edc:_addr="0xA82"/>
        <edc:SFRDef ltx:memberofperipheral="TCB0" edc:cname="EVCTRL" edc:nzwidth="0x8" edc:access="-n-n---n" edc:por="00000000" edc:mclr="00000000" edc:impl="0x51" edc:_addr="0xA84">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCB0">
              <edc:SFRFieldDef edc:cname="CAPTEI" edc:nzwidth="0x1" edc:desc="Event Input Enable"/>
              <edc:AdjustPoint edc:offset="0x3"/>
              <edc:SFRFieldDef edc:cname="EDGE" edc:nzwidth="0x1" edc:desc="Event Edge"/>
              <edc:AdjustPoint edc:offset="0x1"/>
              <edc:SFRFieldDef edc:cname="FILTER" edc:nzwidth="0x1" edc:desc="Input Capture Noise Cancellation Filter"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="TCB0" edc:cname="INTCTRL" edc:nzwidth="0x8" edc:access="------nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3" edc:_addr="0xA85">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCB0">
              <edc:SFRFieldDef edc:cname="CAPT" edc:nzwidth="0x1" edc:desc="Capture or Timeout"/>
              <edc:SFRFieldDef edc:cname="OVF" edc:nzwidth="0x1" edc:desc="Overflow"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="TCB0" edc:cname="INTFLAGS" edc:nzwidth="0x8" edc:access="------nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3" edc:_addr="0xA86">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCB0">
              <edc:SFRFieldDef edc:cname="CAPT" edc:nzwidth="0x1" edc:desc="Capture or Timeout"/>
              <edc:SFRFieldDef edc:cname="OVF" edc:nzwidth="0x1" edc:desc="Overflow"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="TCB0" edc:cname="STATUS" edc:nzwidth="0x8" edc:access="-------r" edc:por="00000000" edc:mclr="00000000" edc:impl="0x1" edc:_addr="0xA87">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCB0">
              <edc:SFRFieldDef edc:cname="RUN" edc:nzwidth="0x1" edc:desc="Run"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="TCB0" edc:cname="DBGCTRL" edc:nzwidth="0x8" edc:access="-------n" edc:por="00000000" edc:mclr="00000000" edc:impl="0x1" edc:_addr="0xA88">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCB0">
              <edc:SFRFieldDef edc:cname="DBGRUN" edc:nzwidth="0x1" edc:desc="Debug Run"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="TCB0" edc:cname="TEMP" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0xA89"/>
        <edc:SFRDef ltx:memberofperipheral="TCB0" edc:cname="CNT" edc:nzwidth="0x10" edc:access="nnnnnnnnnnnnnnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:_addr="0xA8A"/>
        <edc:SFRDef ltx:memberofperipheral="TCB0" edc:cname="CCMP" edc:nzwidth="0x10" edc:access="nnnnnnnnnnnnnnnn" edc:_addr="0xA8C"/>
        <edc:AdjustPoint edc:offset="0x2" edc:_addr="0xA8E"/>
        <edc:SFRDef ltx:memberofperipheral="TCB1" edc:cname="CTRLA" edc:nzwidth="0x8" edc:access="-nnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x7F" edc:_addr="0xA90">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCB1">
              <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="Enable"/>
              <edc:SFRFieldDef edc:cname="CLKSEL" edc:nzwidth="0x3" edc:desc="Clock Select">
                <edc:SFRFieldSemantic edc:cname="DIV1" edc:desc="CLK_PER" edc:when="(field &amp; 0x7) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="DIV2" edc:desc="CLK_PER/2" edc:when="(field &amp; 0x7) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="TCA0" edc:desc="Use CLK_TCA from TCA0" edc:when="(field &amp; 0x7) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="EVENT" edc:desc="Count on event edge" edc:when="(field &amp; 0x7) == 0x07"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="SYNCUPD" edc:nzwidth="0x1" edc:desc="Synchronize Update"/>
              <edc:SFRFieldDef edc:cname="CASCADE" edc:nzwidth="0x1" edc:desc="Cascade two timers"/>
              <edc:SFRFieldDef edc:cname="RUNSTDBY" edc:nzwidth="0x1" edc:desc="Run Standby"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="TCB1" edc:cname="CTRLB" edc:nzwidth="0x8" edc:access="-nnn-nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x77" edc:_addr="0xA91">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCB1">
              <edc:SFRFieldDef edc:cname="CNTMODE" edc:nzwidth="0x3" edc:desc="Timer Mode">
                <edc:SFRFieldSemantic edc:cname="INT" edc:desc="Periodic Interrupt" edc:when="(field &amp; 0x7) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="TIMEOUT" edc:desc="Periodic Timeout" edc:when="(field &amp; 0x7) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="CAPT" edc:desc="Input Capture Event" edc:when="(field &amp; 0x7) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="FRQ" edc:desc="Input Capture Frequency measurement" edc:when="(field &amp; 0x7) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="PW" edc:desc="Input Capture Pulse-Width measurement" edc:when="(field &amp; 0x7) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="FRQPW" edc:desc="Input Capture Frequency and Pulse-Width measurement" edc:when="(field &amp; 0x7) == 0x05"/>
                <edc:SFRFieldSemantic edc:cname="SINGLE" edc:desc="Single Shot" edc:when="(field &amp; 0x7) == 0x06"/>
                <edc:SFRFieldSemantic edc:cname="PWM8" edc:desc="8-bit PWM" edc:when="(field &amp; 0x7) == 0x07"/>
              </edc:SFRFieldDef>
              <edc:AdjustPoint edc:offset="0x1"/>
              <edc:SFRFieldDef edc:cname="CCMPEN" edc:nzwidth="0x1" edc:desc="Pin Output Enable"/>
              <edc:SFRFieldDef edc:cname="CCMPINIT" edc:nzwidth="0x1" edc:desc="Pin Initial State"/>
              <edc:SFRFieldDef edc:cname="ASYNC" edc:nzwidth="0x1" edc:desc="Asynchronous Enable"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:AdjustPoint edc:offset="0x2" edc:_addr="0xA92"/>
        <edc:SFRDef ltx:memberofperipheral="TCB1" edc:cname="EVCTRL" edc:nzwidth="0x8" edc:access="-n-n---n" edc:por="00000000" edc:mclr="00000000" edc:impl="0x51" edc:_addr="0xA94">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCB1">
              <edc:SFRFieldDef edc:cname="CAPTEI" edc:nzwidth="0x1" edc:desc="Event Input Enable"/>
              <edc:AdjustPoint edc:offset="0x3"/>
              <edc:SFRFieldDef edc:cname="EDGE" edc:nzwidth="0x1" edc:desc="Event Edge"/>
              <edc:AdjustPoint edc:offset="0x1"/>
              <edc:SFRFieldDef edc:cname="FILTER" edc:nzwidth="0x1" edc:desc="Input Capture Noise Cancellation Filter"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="TCB1" edc:cname="INTCTRL" edc:nzwidth="0x8" edc:access="------nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3" edc:_addr="0xA95">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCB1">
              <edc:SFRFieldDef edc:cname="CAPT" edc:nzwidth="0x1" edc:desc="Capture or Timeout"/>
              <edc:SFRFieldDef edc:cname="OVF" edc:nzwidth="0x1" edc:desc="Overflow"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="TCB1" edc:cname="INTFLAGS" edc:nzwidth="0x8" edc:access="------nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3" edc:_addr="0xA96">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCB1">
              <edc:SFRFieldDef edc:cname="CAPT" edc:nzwidth="0x1" edc:desc="Capture or Timeout"/>
              <edc:SFRFieldDef edc:cname="OVF" edc:nzwidth="0x1" edc:desc="Overflow"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="TCB1" edc:cname="STATUS" edc:nzwidth="0x8" edc:access="-------r" edc:por="00000000" edc:mclr="00000000" edc:impl="0x1" edc:_addr="0xA97">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCB1">
              <edc:SFRFieldDef edc:cname="RUN" edc:nzwidth="0x1" edc:desc="Run"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="TCB1" edc:cname="DBGCTRL" edc:nzwidth="0x8" edc:access="-------n" edc:por="00000000" edc:mclr="00000000" edc:impl="0x1" edc:_addr="0xA98">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCB1">
              <edc:SFRFieldDef edc:cname="DBGRUN" edc:nzwidth="0x1" edc:desc="Debug Run"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="TCB1" edc:cname="TEMP" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0xA99"/>
        <edc:SFRDef ltx:memberofperipheral="TCB1" edc:cname="CNT" edc:nzwidth="0x10" edc:access="nnnnnnnnnnnnnnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:_addr="0xA9A"/>
        <edc:SFRDef ltx:memberofperipheral="TCB1" edc:cname="CCMP" edc:nzwidth="0x10" edc:access="nnnnnnnnnnnnnnnn" edc:_addr="0xA9C"/>
        <edc:AdjustPoint edc:offset="0x463" edc:_addr="0xA9E"/>
        <edc:SFRDef ltx:memberofperipheral="SYSCFG" edc:cname="REVID" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0xF01"/>
        <edc:AdjustPoint edc:offset="0xFE" edc:_addr="0xF02"/>
        <edc:SFRDef ltx:memberofperipheral="NVMCTRL" edc:cname="CTRLA" edc:nzwidth="0x8" edc:access="-----nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x7" edc:_addr="0x1000">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVMCTRL">
              <edc:SFRFieldDef edc:cname="CMD" edc:nzwidth="0x3" edc:desc="Command">
                <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="No Command" edc:when="(field &amp; 0x7) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="PAGEWRITE" edc:desc="Write page" edc:when="(field &amp; 0x7) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="PAGEERASE" edc:desc="Erase page" edc:when="(field &amp; 0x7) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="PAGEERASEWRITE" edc:desc="Erase and write page" edc:when="(field &amp; 0x7) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="PAGEBUFCLR" edc:desc="Page buffer clear" edc:when="(field &amp; 0x7) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="CHIPERASE" edc:desc="Chip erase" edc:when="(field &amp; 0x7) == 0x05"/>
                <edc:SFRFieldSemantic edc:cname="EEERASE" edc:desc="EEPROM erase" edc:when="(field &amp; 0x7) == 0x06"/>
                <edc:SFRFieldSemantic edc:cname="FUSEWRITE" edc:desc="Write fuse (PDI only)" edc:when="(field &amp; 0x7) == 0x07"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="NVMCTRL" edc:cname="CTRLB" edc:nzwidth="0x8" edc:access="------nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3" edc:_addr="0x1001">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVMCTRL">
              <edc:SFRFieldDef edc:cname="APCWP" edc:nzwidth="0x1" edc:desc="Application code write protect"/>
              <edc:SFRFieldDef edc:cname="BOOTLOCK" edc:nzwidth="0x1" edc:desc="Boot Lock"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="NVMCTRL" edc:cname="STATUS" edc:nzwidth="0x8" edc:access="-----rrr" edc:por="00000000" edc:mclr="00000000" edc:impl="0x7" edc:_addr="0x1002">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVMCTRL">
              <edc:SFRFieldDef edc:cname="FBUSY" edc:nzwidth="0x1" edc:desc="Flash busy"/>
              <edc:SFRFieldDef edc:cname="EEBUSY" edc:nzwidth="0x1" edc:desc="EEPROM busy"/>
              <edc:SFRFieldDef edc:cname="WRERROR" edc:nzwidth="0x1" edc:desc="Write error"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="NVMCTRL" edc:cname="INTCTRL" edc:nzwidth="0x8" edc:access="-------n" edc:por="00000000" edc:mclr="00000000" edc:impl="0x1" edc:_addr="0x1003">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVMCTRL">
              <edc:SFRFieldDef edc:cname="EEREADY" edc:nzwidth="0x1" edc:desc="EEPROM Ready"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="NVMCTRL" edc:cname="INTFLAGS" edc:nzwidth="0x8" edc:access="-------n" edc:por="00000000" edc:mclr="00000000" edc:impl="0x1" edc:_addr="0x1004">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVMCTRL">
              <edc:SFRFieldDef edc:cname="EEREADY" edc:nzwidth="0x1" edc:desc="EEPROM Ready"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:AdjustPoint edc:offset="0x1" edc:_addr="0x1005"/>
        <edc:SFRDef ltx:memberofperipheral="NVMCTRL" edc:cname="DATA" edc:nzwidth="0x10" edc:access="nnnnnnnnnnnnnnnn" edc:_addr="0x1006"/>
        <edc:SFRDef ltx:memberofperipheral="NVMCTRL" edc:cname="ADDR" edc:nzwidth="0x10" edc:access="nnnnnnnnnnnnnnnn" edc:_addr="0x1008"/>
      </edc:SFRDataSector>
      <edc:DeviceIDSector edc:regionid="SIGNATURES" edc:beginaddr="0x1100" edc:endaddr="0x1103" atdf:pagesize="0x80" edc:value="0x1E9526" edc:mask="0xffffff" edc:rw="r">
        <edc:DCRDef ltx:memberofperipheral="SIGROW" edc:cname="DEVICEID0" edc:nzwidth="0x8" edc:impl="0x0" edc:unused="0x0" edc:useinchecksum="0xFF" edc:factorydefault="0x0" edc:access="rrrrrrrr" edc:_addr="0x1100"/>
        <edc:DCRDef ltx:memberofperipheral="SIGROW" edc:cname="DEVICEID1" edc:nzwidth="0x8" edc:impl="0x0" edc:unused="0x0" edc:useinchecksum="0xFF" edc:factorydefault="0x0" edc:access="rrrrrrrr" edc:_addr="0x1101"/>
        <edc:DCRDef ltx:memberofperipheral="SIGROW" edc:cname="DEVICEID2" edc:nzwidth="0x8" edc:impl="0x0" edc:unused="0x0" edc:useinchecksum="0xFF" edc:factorydefault="0x0" edc:access="rrrrrrrr" edc:_addr="0x1102"/>
      </edc:DeviceIDSector>
      <edc:DeviceIDSector edc:regionid="PROD_SIGNATURES" edc:beginaddr="0x1103" edc:endaddr="0x1140" atdf:pagesize="0x80" edc:value="0x1E9526" edc:mask="0xffffff" edc:rw="r">
        <edc:DCRDef ltx:memberofperipheral="SIGROW" edc:cname="SERNUM0" edc:nzwidth="0x8" edc:impl="0x0" edc:unused="0x0" edc:useinchecksum="0xFF" edc:factorydefault="0x0" edc:access="rrrrrrrr" edc:_addr="0x1103"/>
        <edc:DCRDef ltx:memberofperipheral="SIGROW" edc:cname="SERNUM1" edc:nzwidth="0x8" edc:impl="0x0" edc:unused="0x0" edc:useinchecksum="0xFF" edc:factorydefault="0x0" edc:access="rrrrrrrr" edc:_addr="0x1104"/>
        <edc:DCRDef ltx:memberofperipheral="SIGROW" edc:cname="SERNUM2" edc:nzwidth="0x8" edc:impl="0x0" edc:unused="0x0" edc:useinchecksum="0xFF" edc:factorydefault="0x0" edc:access="rrrrrrrr" edc:_addr="0x1105"/>
        <edc:DCRDef ltx:memberofperipheral="SIGROW" edc:cname="SERNUM3" edc:nzwidth="0x8" edc:impl="0x0" edc:unused="0x0" edc:useinchecksum="0xFF" edc:factorydefault="0x0" edc:access="rrrrrrrr" edc:_addr="0x1106"/>
        <edc:DCRDef ltx:memberofperipheral="SIGROW" edc:cname="SERNUM4" edc:nzwidth="0x8" edc:impl="0x0" edc:unused="0x0" edc:useinchecksum="0xFF" edc:factorydefault="0x0" edc:access="rrrrrrrr" edc:_addr="0x1107"/>
        <edc:DCRDef ltx:memberofperipheral="SIGROW" edc:cname="SERNUM5" edc:nzwidth="0x8" edc:impl="0x0" edc:unused="0x0" edc:useinchecksum="0xFF" edc:factorydefault="0x0" edc:access="rrrrrrrr" edc:_addr="0x1108"/>
        <edc:DCRDef ltx:memberofperipheral="SIGROW" edc:cname="SERNUM6" edc:nzwidth="0x8" edc:impl="0x0" edc:unused="0x0" edc:useinchecksum="0xFF" edc:factorydefault="0x0" edc:access="rrrrrrrr" edc:_addr="0x1109"/>
        <edc:DCRDef ltx:memberofperipheral="SIGROW" edc:cname="SERNUM7" edc:nzwidth="0x8" edc:impl="0x0" edc:unused="0x0" edc:useinchecksum="0xFF" edc:factorydefault="0x0" edc:access="rrrrrrrr" edc:_addr="0x110A"/>
        <edc:DCRDef ltx:memberofperipheral="SIGROW" edc:cname="SERNUM8" edc:nzwidth="0x8" edc:impl="0x0" edc:unused="0x0" edc:useinchecksum="0xFF" edc:factorydefault="0x0" edc:access="rrrrrrrr" edc:_addr="0x110B"/>
        <edc:DCRDef ltx:memberofperipheral="SIGROW" edc:cname="SERNUM9" edc:nzwidth="0x8" edc:impl="0x0" edc:unused="0x0" edc:useinchecksum="0xFF" edc:factorydefault="0x0" edc:access="rrrrrrrr" edc:_addr="0x110C"/>
        <edc:AdjustPoint edc:offset="0xB" edc:_addr="0x110D"/>
        <edc:DCRDef ltx:memberofperipheral="SIGROW" edc:cname="OSCCAL16M0" edc:nzwidth="0x8" edc:impl="0x0" edc:unused="0x0" edc:useinchecksum="0xFF" edc:factorydefault="0x0" edc:access="rrrrrrrr" edc:_addr="0x1118"/>
        <edc:DCRDef ltx:memberofperipheral="SIGROW" edc:cname="OSCCAL16M1" edc:nzwidth="0x8" edc:impl="0x0" edc:unused="0x0" edc:useinchecksum="0xFF" edc:factorydefault="0x0" edc:access="rrrrrrrr" edc:_addr="0x1119"/>
        <edc:DCRDef ltx:memberofperipheral="SIGROW" edc:cname="OSCCAL20M0" edc:nzwidth="0x8" edc:impl="0x0" edc:unused="0x0" edc:useinchecksum="0xFF" edc:factorydefault="0x0" edc:access="rrrrrrrr" edc:_addr="0x111A"/>
        <edc:DCRDef ltx:memberofperipheral="SIGROW" edc:cname="OSCCAL20M1" edc:nzwidth="0x8" edc:impl="0x0" edc:unused="0x0" edc:useinchecksum="0xFF" edc:factorydefault="0x0" edc:access="rrrrrrrr" edc:_addr="0x111B"/>
        <edc:AdjustPoint edc:offset="0x4" edc:_addr="0x111C"/>
        <edc:DCRDef ltx:memberofperipheral="SIGROW" edc:cname="TEMPSENSE0" edc:nzwidth="0x8" edc:impl="0x0" edc:unused="0x0" edc:useinchecksum="0xFF" edc:factorydefault="0x0" edc:access="rrrrrrrr" edc:_addr="0x1120"/>
        <edc:DCRDef ltx:memberofperipheral="SIGROW" edc:cname="TEMPSENSE1" edc:nzwidth="0x8" edc:impl="0x0" edc:unused="0x0" edc:useinchecksum="0xFF" edc:factorydefault="0x0" edc:access="rrrrrrrr" edc:_addr="0x1121"/>
      </edc:DeviceIDSector>
      <edc:ConfigFuseSector edc:regionid="FUSES" edc:beginaddr="0x1280" edc:endaddr="0x1289" edc:magicoffset="0x820000" atdf:pagesize="0x20" edc:rw="rw">
        <edc:DCRDef ltx:memberofperipheral="FUSE" edc:cname="WDTCFG" edc:nzwidth="0x8" edc:impl="0xFF" edc:unused="0x0" edc:useinchecksum="0xFF" edc:factorydefault="0x00" edc:access="nnnnnnnn" edc:_addr="0x1280">
          <edc:DCRModeList>
            <edc:DCRMode edc:id="DS.0" ltx:memberofperipheral="FUSE">
              <edc:DCRFieldDef edc:cname="PERIOD" edc:nzwidth="0x4" edc:desc="Watchdog Timeout Period">
                <edc:DCRFieldSemantic edc:cname="OFF" edc:desc="Off" edc:when="(field &amp; 0xF) == 0x00"/>
                <edc:DCRFieldSemantic edc:cname="8CLK" edc:desc="8 cycles (8ms)" edc:when="(field &amp; 0xF) == 0x01"/>
                <edc:DCRFieldSemantic edc:cname="16CLK" edc:desc="16 cycles (16ms)" edc:when="(field &amp; 0xF) == 0x02"/>
                <edc:DCRFieldSemantic edc:cname="32CLK" edc:desc="32 cycles (32ms)" edc:when="(field &amp; 0xF) == 0x03"/>
                <edc:DCRFieldSemantic edc:cname="64CLK" edc:desc="64 cycles (64ms)" edc:when="(field &amp; 0xF) == 0x04"/>
                <edc:DCRFieldSemantic edc:cname="128CLK" edc:desc="128 cycles (0.128s)" edc:when="(field &amp; 0xF) == 0x05"/>
                <edc:DCRFieldSemantic edc:cname="256CLK" edc:desc="256 cycles (0.256s)" edc:when="(field &amp; 0xF) == 0x06"/>
                <edc:DCRFieldSemantic edc:cname="512CLK" edc:desc="512 cycles (0.512s)" edc:when="(field &amp; 0xF) == 0x07"/>
                <edc:DCRFieldSemantic edc:cname="1KCLK" edc:desc="1K cycles (1.0s)" edc:when="(field &amp; 0xF) == 0x08"/>
                <edc:DCRFieldSemantic edc:cname="2KCLK" edc:desc="2K cycles (2.0s)" edc:when="(field &amp; 0xF) == 0x09"/>
                <edc:DCRFieldSemantic edc:cname="4KCLK" edc:desc="4K cycles (4.1s)" edc:when="(field &amp; 0xF) == 0x0A"/>
                <edc:DCRFieldSemantic edc:cname="8KCLK" edc:desc="8K cycles (8.2s)" edc:when="(field &amp; 0xF) == 0x0B"/>
              </edc:DCRFieldDef>
              <edc:DCRFieldDef edc:cname="WINDOW" edc:nzwidth="0x4" edc:desc="Watchdog Window Timeout Period">
                <edc:DCRFieldSemantic edc:cname="OFF" edc:desc="Off" edc:when="(field &amp; 0xF) == 0x00"/>
                <edc:DCRFieldSemantic edc:cname="8CLK" edc:desc="8 cycles (8ms)" edc:when="(field &amp; 0xF) == 0x01"/>
                <edc:DCRFieldSemantic edc:cname="16CLK" edc:desc="16 cycles (16ms)" edc:when="(field &amp; 0xF) == 0x02"/>
                <edc:DCRFieldSemantic edc:cname="32CLK" edc:desc="32 cycles (32ms)" edc:when="(field &amp; 0xF) == 0x03"/>
                <edc:DCRFieldSemantic edc:cname="64CLK" edc:desc="64 cycles (64ms)" edc:when="(field &amp; 0xF) == 0x04"/>
                <edc:DCRFieldSemantic edc:cname="128CLK" edc:desc="128 cycles (0.128s)" edc:when="(field &amp; 0xF) == 0x05"/>
                <edc:DCRFieldSemantic edc:cname="256CLK" edc:desc="256 cycles (0.256s)" edc:when="(field &amp; 0xF) == 0x06"/>
                <edc:DCRFieldSemantic edc:cname="512CLK" edc:desc="512 cycles (0.512s)" edc:when="(field &amp; 0xF) == 0x07"/>
                <edc:DCRFieldSemantic edc:cname="1KCLK" edc:desc="1K cycles (1.0s)" edc:when="(field &amp; 0xF) == 0x08"/>
                <edc:DCRFieldSemantic edc:cname="2KCLK" edc:desc="2K cycles (2.0s)" edc:when="(field &amp; 0xF) == 0x09"/>
                <edc:DCRFieldSemantic edc:cname="4KCLK" edc:desc="4K cycles (4.1s)" edc:when="(field &amp; 0xF) == 0x0A"/>
                <edc:DCRFieldSemantic edc:cname="8KCLK" edc:desc="8K cycles (8.2s)" edc:when="(field &amp; 0xF) == 0x0B"/>
              </edc:DCRFieldDef>
            </edc:DCRMode>
          </edc:DCRModeList>
        </edc:DCRDef>
        <edc:DCRDef ltx:memberofperipheral="FUSE" edc:cname="BODCFG" edc:nzwidth="0x8" edc:impl="0xFF" edc:unused="0x0" edc:useinchecksum="0xFF" edc:factorydefault="0x00" edc:access="nnnnnnnn" edc:_addr="0x1281">
          <edc:DCRModeList>
            <edc:DCRMode edc:id="DS.0" ltx:memberofperipheral="FUSE">
              <edc:DCRFieldDef edc:cname="SLEEP" edc:nzwidth="0x2" edc:desc="BOD Operation in Sleep Mode">
                <edc:DCRFieldSemantic edc:cname="DIS" edc:desc="Disabled" edc:when="(field &amp; 0x3) == 0x00"/>
                <edc:DCRFieldSemantic edc:cname="ENABLED" edc:desc="Enabled" edc:when="(field &amp; 0x3) == 0x01"/>
                <edc:DCRFieldSemantic edc:cname="SAMPLED" edc:desc="Sampled" edc:when="(field &amp; 0x3) == 0x02"/>
              </edc:DCRFieldDef>
              <edc:DCRFieldDef edc:cname="ACTIVE" edc:nzwidth="0x2" edc:desc="BOD Operation in Active Mode">
                <edc:DCRFieldSemantic edc:cname="DIS" edc:desc="Disabled" edc:when="(field &amp; 0x3) == 0x00"/>
                <edc:DCRFieldSemantic edc:cname="ENABLED" edc:desc="Enabled" edc:when="(field &amp; 0x3) == 0x01"/>
                <edc:DCRFieldSemantic edc:cname="SAMPLED" edc:desc="Sampled" edc:when="(field &amp; 0x3) == 0x02"/>
                <edc:DCRFieldSemantic edc:cname="ENWAKE" edc:desc="Enabled with wake-up halted until BOD is ready" edc:when="(field &amp; 0x3) == 0x03"/>
              </edc:DCRFieldDef>
              <edc:DCRFieldDef edc:cname="SAMPFREQ" edc:nzwidth="0x1" edc:desc="BOD Sample Frequency">
                <edc:DCRFieldSemantic edc:cname="1KHZ" edc:desc="1kHz sampling frequency" edc:when="(field &amp; 0x1) == 0x00"/>
                <edc:DCRFieldSemantic edc:cname="125HZ" edc:desc="125Hz sampling frequency" edc:when="(field &amp; 0x1) == 0x01"/>
              </edc:DCRFieldDef>
              <edc:DCRFieldDef edc:cname="LVL" edc:nzwidth="0x3" edc:desc="BOD Level">
                <edc:DCRFieldSemantic edc:cname="BODLEVEL0" edc:desc="1.8 V" edc:when="(field &amp; 0x7) == 0x00"/>
                <edc:DCRFieldSemantic edc:cname="BODLEVEL2" edc:desc="2.6 V" edc:when="(field &amp; 0x7) == 0x02"/>
                <edc:DCRFieldSemantic edc:cname="BODLEVEL7" edc:desc="4.2 V" edc:when="(field &amp; 0x7) == 0x07"/>
              </edc:DCRFieldDef>
            </edc:DCRMode>
          </edc:DCRModeList>
        </edc:DCRDef>
        <edc:DCRDef ltx:memberofperipheral="FUSE" edc:cname="OSCCFG" edc:nzwidth="0x8" edc:impl="0x83" edc:unused="0x0" edc:useinchecksum="0xFF" edc:factorydefault="0x7E" edc:access="n-----nn" edc:_addr="0x1282">
          <edc:DCRModeList>
            <edc:DCRMode edc:id="DS.0" ltx:memberofperipheral="FUSE">
              <edc:DCRFieldDef edc:cname="FREQSEL" edc:nzwidth="0x2" edc:desc="Frequency Select">
                <edc:DCRFieldSemantic edc:cname="16MHZ" edc:desc="16 MHz" edc:when="(field &amp; 0x3) == 0x01"/>
                <edc:DCRFieldSemantic edc:cname="20MHZ" edc:desc="20 MHz" edc:when="(field &amp; 0x3) == 0x02"/>
              </edc:DCRFieldDef>
              <edc:AdjustPoint edc:offset="0x5"/>
              <edc:DCRFieldDef edc:cname="OSCLOCK" edc:nzwidth="0x1" edc:desc="Oscillator Lock">
                <edc:DCRFieldSemantic edc:cname="SET" edc:when="(field &amp; 0x1) == 0x1"/>
                <edc:DCRFieldSemantic edc:cname="CLEAR" edc:when="(field &amp; 0x1) == 0x0"/>
              </edc:DCRFieldDef>
            </edc:DCRMode>
          </edc:DCRModeList>
        </edc:DCRDef>
        <edc:AdjustPoint edc:offset="0x2" edc:_addr="0x1283"/>
        <edc:DCRDef ltx:memberofperipheral="FUSE" edc:cname="SYSCFG0" edc:nzwidth="0x8" edc:impl="0xDD" edc:unused="0x0" edc:useinchecksum="0xFF" edc:factorydefault="0xF6" edc:access="nn-nnn-n" edc:_addr="0x1285">
          <edc:DCRModeList>
            <edc:DCRMode edc:id="DS.0" ltx:memberofperipheral="FUSE">
              <edc:DCRFieldDef edc:cname="EESAVE" edc:nzwidth="0x1" edc:desc="EEPROM Save">
                <edc:DCRFieldSemantic edc:cname="SET" edc:when="(field &amp; 0x1) == 0x1"/>
                <edc:DCRFieldSemantic edc:cname="CLEAR" edc:when="(field &amp; 0x1) == 0x0"/>
              </edc:DCRFieldDef>
              <edc:AdjustPoint edc:offset="0x1"/>
              <edc:DCRFieldDef edc:cname="RSTPINCFG" edc:nzwidth="0x2" edc:desc="Reset Pin Configuration">
                <edc:DCRFieldSemantic edc:cname="GPIO" edc:desc="GPIO mode" edc:when="(field &amp; 0x3) == 0x00"/>
                <edc:DCRFieldSemantic edc:cname="UPDI" edc:desc="UPDI mode" edc:when="(field &amp; 0x3) == 0x01"/>
                <edc:DCRFieldSemantic edc:cname="RST" edc:desc="Reset mode" edc:when="(field &amp; 0x3) == 0x02"/>
                <edc:DCRFieldSemantic edc:cname="PDIRST" edc:desc="PDI on PDI pad, reset on alternative reset pad" edc:when="(field &amp; 0x3) == 0x03"/>
              </edc:DCRFieldDef>
              <edc:DCRFieldDef edc:cname="TOUTDIS" edc:nzwidth="0x1" edc:desc="Time-Out Disable">
                <edc:DCRFieldSemantic edc:cname="SET" edc:when="(field &amp; 0x1) == 0x1"/>
                <edc:DCRFieldSemantic edc:cname="CLEAR" edc:when="(field &amp; 0x1) == 0x0"/>
              </edc:DCRFieldDef>
              <edc:AdjustPoint edc:offset="0x1"/>
              <edc:DCRFieldDef edc:cname="CRCSRC" edc:nzwidth="0x2" edc:desc="CRC Source">
                <edc:DCRFieldSemantic edc:cname="FLASH" edc:desc="The CRC is performed on the entire Flash (boot, application code and application data section)." edc:when="(field &amp; 0x3) == 0x00"/>
                <edc:DCRFieldSemantic edc:cname="BOOT" edc:desc="The CRC is performed on the boot section of Flash" edc:when="(field &amp; 0x3) == 0x01"/>
                <edc:DCRFieldSemantic edc:cname="BOOTAPP" edc:desc="The CRC is performed on the boot and application code section of Flash" edc:when="(field &amp; 0x3) == 0x02"/>
                <edc:DCRFieldSemantic edc:cname="NOCRC" edc:desc="Disable CRC." edc:when="(field &amp; 0x3) == 0x03"/>
              </edc:DCRFieldDef>
            </edc:DCRMode>
          </edc:DCRModeList>
        </edc:DCRDef>
        <edc:DCRDef ltx:memberofperipheral="FUSE" edc:cname="SYSCFG1" edc:nzwidth="0x8" edc:impl="0x7" edc:unused="0x0" edc:useinchecksum="0xFF" edc:factorydefault="0xFF" edc:access="-----nnn" edc:_addr="0x1286">
          <edc:DCRModeList>
            <edc:DCRMode edc:id="DS.0" ltx:memberofperipheral="FUSE">
              <edc:DCRFieldDef edc:cname="SUT" edc:nzwidth="0x3" edc:desc="Startup Time">
                <edc:DCRFieldSemantic edc:cname="0MS" edc:desc="0 ms" edc:when="(field &amp; 0x7) == 0x00"/>
                <edc:DCRFieldSemantic edc:cname="1MS" edc:desc="1 ms" edc:when="(field &amp; 0x7) == 0x01"/>
                <edc:DCRFieldSemantic edc:cname="2MS" edc:desc="2 ms" edc:when="(field &amp; 0x7) == 0x02"/>
                <edc:DCRFieldSemantic edc:cname="4MS" edc:desc="4 ms" edc:when="(field &amp; 0x7) == 0x03"/>
                <edc:DCRFieldSemantic edc:cname="8MS" edc:desc="8 ms" edc:when="(field &amp; 0x7) == 0x04"/>
                <edc:DCRFieldSemantic edc:cname="16MS" edc:desc="16 ms" edc:when="(field &amp; 0x7) == 0x05"/>
                <edc:DCRFieldSemantic edc:cname="32MS" edc:desc="32 ms" edc:when="(field &amp; 0x7) == 0x06"/>
                <edc:DCRFieldSemantic edc:cname="64MS" edc:desc="64 ms" edc:when="(field &amp; 0x7) == 0x07"/>
              </edc:DCRFieldDef>
            </edc:DCRMode>
          </edc:DCRModeList>
        </edc:DCRDef>
        <edc:DCRDef ltx:memberofperipheral="FUSE" edc:cname="APPEND" edc:nzwidth="0x8" edc:impl="0xFF" edc:unused="0x0" edc:useinchecksum="0xFF" edc:factorydefault="0x00" edc:access="nnnnnnnn" edc:_addr="0x1287">
          <edc:DCRModeList>
            <edc:DCRMode edc:id="DS.0" ltx:memberofperipheral="FUSE">
              <edc:DCRFieldDef edc:cname="APPEND" edc:nzwidth="0x8" edc:desc="Application Code Section End"/>
            </edc:DCRMode>
          </edc:DCRModeList>
        </edc:DCRDef>
        <edc:DCRDef ltx:memberofperipheral="FUSE" edc:cname="BOOTEND" edc:nzwidth="0x8" edc:impl="0xFF" edc:unused="0x0" edc:useinchecksum="0xFF" edc:factorydefault="0x00" edc:access="nnnnnnnn" edc:_addr="0x1288">
          <edc:DCRModeList>
            <edc:DCRMode edc:id="DS.0" ltx:memberofperipheral="FUSE">
              <edc:DCRFieldDef edc:cname="BOOTEND" edc:nzwidth="0x8" edc:desc="Boot Section End"/>
            </edc:DCRMode>
          </edc:DCRModeList>
        </edc:DCRDef>
      </edc:ConfigFuseSector>
      <edc:ConfigFuseSector edc:regionid="LOCKBITS" edc:beginaddr="0x128A" edc:endaddr="0x128B" edc:magicoffset="0x830000" atdf:pagesize="0x20" edc:rw="rw">
        <edc:DCRDef ltx:memberofperipheral="LOCKBIT" edc:cname="LOCKBIT" edc:nzwidth="0x8" edc:impl="0xFF" edc:unused="0x0" edc:useinchecksum="0xFF" edc:factorydefault="0xC5" edc:access="nnnnnnnn" edc:_addr="0x128A">
          <edc:DCRModeList>
            <edc:DCRMode edc:id="DS.0" ltx:memberofperipheral="LOCKBIT">
              <edc:DCRFieldDef edc:cname="LB" edc:nzwidth="0x8" edc:desc="Lock Bits">
                <edc:DCRFieldSemantic edc:cname="RWLOCK" edc:desc="Read and write lock" edc:when="(field &amp; 0xFF) == 0x3A"/>
                <edc:DCRFieldSemantic edc:cname="NOLOCK" edc:desc="No locks" edc:when="(field &amp; 0xFF) == 0xC5"/>
              </edc:DCRFieldDef>
            </edc:DCRMode>
          </edc:DCRModeList>
        </edc:DCRDef>
      </edc:ConfigFuseSector>
      <edc:UserIDSector edc:regionid="USER_SIGNATURES" edc:beginaddr="0x1300" edc:endaddr="0x1320" edc:magicoffset="0x850000" atdf:pagesize="0x20" edc:rw="rw">
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW0" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1300"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW1" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1301"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW2" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1302"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW3" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1303"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW4" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1304"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW5" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1305"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW6" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1306"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW7" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1307"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW8" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1308"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW9" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1309"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW10" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x130A"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW11" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x130B"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW12" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x130C"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW13" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x130D"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW14" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x130E"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW15" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x130F"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW16" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1310"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW17" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1311"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW18" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1312"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW19" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1313"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW20" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1314"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW21" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1315"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW22" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1316"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW23" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1317"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW24" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1318"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW25" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x1319"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW26" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x131A"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW27" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x131B"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW28" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x131C"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW29" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x131D"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW30" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x131E"/>
        <edc:SFRDef ltx:memberofperipheral="USERROW" edc:cname="USERROW31" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x131F"/>
      </edc:UserIDSector>
      <edc:EEDataSector edc:regionid="EEPROM" edc:beginaddr="0x811400" edc:endaddr="0x811500" edc:magicoffset="0x810000" atdf:pagesize="0x40" edc:rw="rw"/>
      <edc:GPRDataSector edc:regionid="INTERNAL_SRAM" edc:beginaddr="0x3400" edc:endaddr="0x4000" edc:isexecutable="false" edc:rw="rw"/>
      <edc:GPRDataSector edc:regionid="MAPPED_PROGMEM" edc:beginaddr="0x8000" edc:endaddr="0x10000" atdf:pagesize="0x80" edc:isexecutable="false" edc:rw="rw"/>
    </edc:RegardlessOfMode>
    <edc:RegisterMap edc:id="TCA0/SINGLE">
      <edc:SFRDef ltx:memberofperipheral="TCA0" edc:cname="CTRLA" edc:nzwidth="0x8" edc:access="n---nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x8F" edc:addr="0xA00">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCA0">
            <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="Module Enable"/>
            <edc:SFRFieldDef edc:cname="CLKSEL" edc:nzwidth="0x3" edc:desc="Clock Selection">
              <edc:SFRFieldSemantic edc:cname="DIV1" edc:desc="System Clock" edc:when="(field &amp; 0x7) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="DIV2" edc:desc="System Clock / 2" edc:when="(field &amp; 0x7) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="DIV4" edc:desc="System Clock / 4" edc:when="(field &amp; 0x7) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="DIV8" edc:desc="System Clock / 8" edc:when="(field &amp; 0x7) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="DIV16" edc:desc="System Clock / 16" edc:when="(field &amp; 0x7) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="DIV64" edc:desc="System Clock / 64" edc:when="(field &amp; 0x7) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="DIV256" edc:desc="System Clock / 256" edc:when="(field &amp; 0x7) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="DIV1024" edc:desc="System Clock / 1024" edc:when="(field &amp; 0x7) == 0x07"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="RUNSTDBY" edc:nzwidth="0x1" edc:desc="Run in Standby"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TCA0" edc:cname="CTRLB" edc:nzwidth="0x8" edc:access="-nnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x7F" edc:addr="0xA01">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCA0">
            <edc:SFRFieldDef edc:cname="WGMODE" edc:nzwidth="0x3" edc:desc="Waveform generation mode">
              <edc:SFRFieldSemantic edc:cname="NORMAL" edc:desc="Normal Mode" edc:when="(field &amp; 0x7) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="FRQ" edc:desc="Frequency Generation Mode" edc:when="(field &amp; 0x7) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="SINGLESLOPE" edc:desc="Single Slope PWM" edc:when="(field &amp; 0x7) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="DSTOP" edc:desc="Dual Slope PWM, overflow on TOP" edc:when="(field &amp; 0x7) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="DSBOTH" edc:desc="Dual Slope PWM, overflow on TOP and BOTTOM" edc:when="(field &amp; 0x7) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="DSBOTTOM" edc:desc="Dual Slope PWM, overflow on BOTTOM" edc:when="(field &amp; 0x7) == 0x07"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="ALUPD" edc:nzwidth="0x1" edc:desc="Auto Lock Update"/>
            <edc:SFRFieldDef edc:cname="CMP0EN" edc:nzwidth="0x1" edc:desc="Compare 0 Enable"/>
            <edc:SFRFieldDef edc:cname="CMP1EN" edc:nzwidth="0x1" edc:desc="Compare 1 Enable"/>
            <edc:SFRFieldDef edc:cname="CMP2EN" edc:nzwidth="0x1" edc:desc="Compare 2 Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TCA0" edc:cname="CTRLC" edc:nzwidth="0x8" edc:access="-----nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x7" edc:addr="0xA02">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCA0">
            <edc:SFRFieldDef edc:cname="CMP0OV" edc:nzwidth="0x1" edc:desc="Compare 0 Waveform Output Value"/>
            <edc:SFRFieldDef edc:cname="CMP1OV" edc:nzwidth="0x1" edc:desc="Compare 1 Waveform Output Value"/>
            <edc:SFRFieldDef edc:cname="CMP2OV" edc:nzwidth="0x1" edc:desc="Compare 2 Waveform Output Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TCA0" edc:cname="CTRLD" edc:nzwidth="0x8" edc:access="-------n" edc:por="00000000" edc:mclr="00000000" edc:impl="0x1" edc:addr="0xA03">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCA0">
            <edc:SFRFieldDef edc:cname="SPLITM" edc:nzwidth="0x1" edc:desc="Split Mode Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TCA0" edc:cname="CTRLECLR" edc:nzwidth="0x8" edc:access="----nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xF" edc:addr="0xA04">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCA0">
            <edc:SFRFieldDef edc:cname="DIR" edc:nzwidth="0x1" edc:desc="Direction"/>
            <edc:SFRFieldDef edc:cname="LUPD" edc:nzwidth="0x1" edc:desc="Lock Update"/>
            <edc:SFRFieldDef edc:cname="CMD" edc:nzwidth="0x2" edc:desc="Command">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="No Command" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="UPDATE" edc:desc="Force Update" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="RESTART" edc:desc="Force Restart" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="RESET" edc:desc="Force Hard Reset" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TCA0" edc:cname="CTRLESET" edc:nzwidth="0x8" edc:access="----nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xF" edc:addr="0xA05">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCA0">
            <edc:SFRFieldDef edc:cname="DIR" edc:nzwidth="0x1" edc:desc="Direction">
              <edc:SFRFieldSemantic edc:cname="UP" edc:desc="Count up" edc:when="(field &amp; 0x1) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="DOWN" edc:desc="Count down" edc:when="(field &amp; 0x1) == 0x01"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="LUPD" edc:nzwidth="0x1" edc:desc="Lock Update"/>
            <edc:SFRFieldDef edc:cname="CMD" edc:nzwidth="0x2" edc:desc="Command">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="No Command" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="UPDATE" edc:desc="Force Update" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="RESTART" edc:desc="Force Restart" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="RESET" edc:desc="Force Hard Reset" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TCA0" edc:cname="CTRLFCLR" edc:nzwidth="0x8" edc:access="----nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xF" edc:addr="0xA06">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCA0">
            <edc:SFRFieldDef edc:cname="PERBV" edc:nzwidth="0x1" edc:desc="Period Buffer Valid"/>
            <edc:SFRFieldDef edc:cname="CMP0BV" edc:nzwidth="0x1" edc:desc="Compare 0 Buffer Valid"/>
            <edc:SFRFieldDef edc:cname="CMP1BV" edc:nzwidth="0x1" edc:desc="Compare 1 Buffer Valid"/>
            <edc:SFRFieldDef edc:cname="CMP2BV" edc:nzwidth="0x1" edc:desc="Compare 2 Buffer Valid"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TCA0" edc:cname="CTRLFSET" edc:nzwidth="0x8" edc:access="----nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xF" edc:addr="0xA07">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCA0">
            <edc:SFRFieldDef edc:cname="PERBV" edc:nzwidth="0x1" edc:desc="Period Buffer Valid"/>
            <edc:SFRFieldDef edc:cname="CMP0BV" edc:nzwidth="0x1" edc:desc="Compare 0 Buffer Valid"/>
            <edc:SFRFieldDef edc:cname="CMP1BV" edc:nzwidth="0x1" edc:desc="Compare 1 Buffer Valid"/>
            <edc:SFRFieldDef edc:cname="CMP2BV" edc:nzwidth="0x1" edc:desc="Compare 2 Buffer Valid"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TCA0" edc:cname="EVCTRL" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:addr="0xA09">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCA0">
            <edc:SFRFieldDef edc:cname="CNTAEI" edc:nzwidth="0x1" edc:desc="Count on Event Input A"/>
            <edc:SFRFieldDef edc:cname="EVACTA" edc:nzwidth="0x3" edc:desc="Event Action A">
              <edc:SFRFieldSemantic edc:cname="CNT_POSEDGE" edc:desc="Count on positive edge event" edc:when="(field &amp; 0x7) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="CNT_ANYEDGE" edc:desc="Count on any edge event" edc:when="(field &amp; 0x7) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="CNT_HIGHLVL" edc:desc="Count on prescaled clock while event line is 1." edc:when="(field &amp; 0x7) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="UPDOWN" edc:desc="Count on prescaled clock. Event controls count direction. Up-count when event line is 0, down-count when event line is 1." edc:when="(field &amp; 0x7) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CNTBEI" edc:nzwidth="0x1" edc:desc="Count on Event Input B"/>
            <edc:SFRFieldDef edc:cname="EVACTB" edc:nzwidth="0x3" edc:desc="Event Action B">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="No Action" edc:when="(field &amp; 0x7) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="UPDOWN" edc:desc="Count on prescaled clock. Event controls count direction. Up-count when event line is 0, down-count when event line is 1." edc:when="(field &amp; 0x7) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="RESTART_POSEDGE" edc:desc="Restart counter at positive edge event" edc:when="(field &amp; 0x7) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="RESTART_ANYEDGE" edc:desc="Restart counter on any edge event" edc:when="(field &amp; 0x7) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="RESTART_HIGHLVL" edc:desc="Restart counter while event line is 1." edc:when="(field &amp; 0x7) == 0x06"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TCA0" edc:cname="INTCTRL" edc:nzwidth="0x8" edc:access="-nnn---n" edc:por="00000000" edc:mclr="00000000" edc:impl="0x71" edc:addr="0xA0A">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCA0">
            <edc:SFRFieldDef edc:cname="OVF" edc:nzwidth="0x1" edc:desc="Overflow Interrupt"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="CMP0" edc:nzwidth="0x1" edc:desc="Compare 0 Interrupt"/>
            <edc:SFRFieldDef edc:cname="CMP1" edc:nzwidth="0x1" edc:desc="Compare 1 Interrupt"/>
            <edc:SFRFieldDef edc:cname="CMP2" edc:nzwidth="0x1" edc:desc="Compare 2 Interrupt"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TCA0" edc:cname="INTFLAGS" edc:nzwidth="0x8" edc:access="-nnn---n" edc:por="00000000" edc:mclr="00000000" edc:impl="0x71" edc:addr="0xA0B">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCA0">
            <edc:SFRFieldDef edc:cname="OVF" edc:nzwidth="0x1" edc:desc="Overflow Interrupt"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="CMP0" edc:nzwidth="0x1" edc:desc="Compare 0 Interrupt"/>
            <edc:SFRFieldDef edc:cname="CMP1" edc:nzwidth="0x1" edc:desc="Compare 1 Interrupt"/>
            <edc:SFRFieldDef edc:cname="CMP2" edc:nzwidth="0x1" edc:desc="Compare 2 Interrupt"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TCA0" edc:cname="DBGCTRL" edc:nzwidth="0x8" edc:access="-------n" edc:por="00000000" edc:mclr="00000000" edc:impl="0x1" edc:addr="0xA0E">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCA0">
            <edc:SFRFieldDef edc:cname="DBGRUN" edc:nzwidth="0x1" edc:desc="Debug Run"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TCA0" edc:cname="TEMP" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:addr="0xA0F"/>
      <edc:SFRDef ltx:memberofperipheral="TCA0" edc:cname="CNT" edc:nzwidth="0x10" edc:access="nnnnnnnnnnnnnnnn" edc:addr="0xA20"/>
      <edc:SFRDef ltx:memberofperipheral="TCA0" edc:cname="PER" edc:nzwidth="0x10" edc:access="nnnnnnnnnnnnnnnn" edc:addr="0xA26"/>
      <edc:SFRDef ltx:memberofperipheral="TCA0" edc:cname="CMP0" edc:nzwidth="0x10" edc:access="nnnnnnnnnnnnnnnn" edc:addr="0xA28"/>
      <edc:SFRDef ltx:memberofperipheral="TCA0" edc:cname="CMP1" edc:nzwidth="0x10" edc:access="nnnnnnnnnnnnnnnn" edc:addr="0xA2A"/>
      <edc:SFRDef ltx:memberofperipheral="TCA0" edc:cname="CMP2" edc:nzwidth="0x10" edc:access="nnnnnnnnnnnnnnnn" edc:addr="0xA2C"/>
      <edc:SFRDef ltx:memberofperipheral="TCA0" edc:cname="PERBUF" edc:nzwidth="0x10" edc:access="nnnnnnnnnnnnnnnn" edc:addr="0xA36"/>
      <edc:SFRDef ltx:memberofperipheral="TCA0" edc:cname="CMP0BUF" edc:nzwidth="0x10" edc:access="nnnnnnnnnnnnnnnn" edc:addr="0xA38"/>
      <edc:SFRDef ltx:memberofperipheral="TCA0" edc:cname="CMP1BUF" edc:nzwidth="0x10" edc:access="nnnnnnnnnnnnnnnn" edc:addr="0xA3A"/>
      <edc:SFRDef ltx:memberofperipheral="TCA0" edc:cname="CMP2BUF" edc:nzwidth="0x10" edc:access="nnnnnnnnnnnnnnnn" edc:addr="0xA3C"/>
    </edc:RegisterMap>
    <edc:RegisterMap edc:id="TCA0/SPLIT">
      <edc:SFRDef ltx:memberofperipheral="TCA0" edc:cname="CTRLA" edc:nzwidth="0x8" edc:access="n---nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x8F" edc:addr="0xA00">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCA0">
            <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="Module Enable"/>
            <edc:SFRFieldDef edc:cname="CLKSEL" edc:nzwidth="0x3" edc:desc="Clock Selection">
              <edc:SFRFieldSemantic edc:cname="DIV1" edc:desc="System Clock" edc:when="(field &amp; 0x7) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="DIV2" edc:desc="System Clock / 2" edc:when="(field &amp; 0x7) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="DIV4" edc:desc="System Clock / 4" edc:when="(field &amp; 0x7) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="DIV8" edc:desc="System Clock / 8" edc:when="(field &amp; 0x7) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="DIV16" edc:desc="System Clock / 16" edc:when="(field &amp; 0x7) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="DIV64" edc:desc="System Clock / 64" edc:when="(field &amp; 0x7) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="DIV256" edc:desc="System Clock / 256" edc:when="(field &amp; 0x7) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="DIV1024" edc:desc="System Clock / 1024" edc:when="(field &amp; 0x7) == 0x07"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="RUNSTDBY" edc:nzwidth="0x1" edc:desc="Run in Standby"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TCA0" edc:cname="CTRLB" edc:nzwidth="0x8" edc:access="-nnn-nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x77" edc:addr="0xA01">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCA0">
            <edc:SFRFieldDef edc:cname="LCMP0EN" edc:nzwidth="0x1" edc:desc="Low Compare 0 Enable"/>
            <edc:SFRFieldDef edc:cname="LCMP1EN" edc:nzwidth="0x1" edc:desc="Low Compare 1 Enable"/>
            <edc:SFRFieldDef edc:cname="LCMP2EN" edc:nzwidth="0x1" edc:desc="Low Compare 2 Enable"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="HCMP0EN" edc:nzwidth="0x1" edc:desc="High Compare 0 Enable"/>
            <edc:SFRFieldDef edc:cname="HCMP1EN" edc:nzwidth="0x1" edc:desc="High Compare 1 Enable"/>
            <edc:SFRFieldDef edc:cname="HCMP2EN" edc:nzwidth="0x1" edc:desc="High Compare 2 Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TCA0" edc:cname="CTRLC" edc:nzwidth="0x8" edc:access="-nnn-nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x77" edc:addr="0xA02">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCA0">
            <edc:SFRFieldDef edc:cname="LCMP0OV" edc:nzwidth="0x1" edc:desc="Low Compare 0 Output Value"/>
            <edc:SFRFieldDef edc:cname="LCMP1OV" edc:nzwidth="0x1" edc:desc="Low Compare 1 Output Value"/>
            <edc:SFRFieldDef edc:cname="LCMP2OV" edc:nzwidth="0x1" edc:desc="Low Compare 2 Output Value"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="HCMP0OV" edc:nzwidth="0x1" edc:desc="High Compare 0 Output Value"/>
            <edc:SFRFieldDef edc:cname="HCMP1OV" edc:nzwidth="0x1" edc:desc="High Compare 1 Output Value"/>
            <edc:SFRFieldDef edc:cname="HCMP2OV" edc:nzwidth="0x1" edc:desc="High Compare 2 Output Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TCA0" edc:cname="CTRLD" edc:nzwidth="0x8" edc:access="-------n" edc:por="00000000" edc:mclr="00000000" edc:impl="0x1" edc:addr="0xA03">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCA0">
            <edc:SFRFieldDef edc:cname="SPLITM" edc:nzwidth="0x1" edc:desc="Split Mode Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TCA0" edc:cname="CTRLECLR" edc:nzwidth="0x8" edc:access="----nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xF" edc:addr="0xA04">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCA0">
            <edc:SFRFieldDef edc:cname="CMDEN" edc:nzwidth="0x2" edc:desc="Command Enable">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="None" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="BOTH" edc:desc="Both low byte and high byte counter" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CMD" edc:nzwidth="0x2" edc:desc="Command">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="No Command" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="UPDATE" edc:desc="Force Update" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="RESTART" edc:desc="Force Restart" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="RESET" edc:desc="Force Hard Reset" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TCA0" edc:cname="CTRLESET" edc:nzwidth="0x8" edc:access="----nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xF" edc:addr="0xA05">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCA0">
            <edc:SFRFieldDef edc:cname="CMDEN" edc:nzwidth="0x2" edc:desc="Command Enable">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="None" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="BOTH" edc:desc="Both low byte and high byte counter" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CMD" edc:nzwidth="0x2" edc:desc="Command">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="No Command" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="UPDATE" edc:desc="Force Update" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="RESTART" edc:desc="Force Restart" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="RESET" edc:desc="Force Hard Reset" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TCA0" edc:cname="INTCTRL" edc:nzwidth="0x8" edc:access="-nnn--nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x73" edc:addr="0xA0A">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCA0">
            <edc:SFRFieldDef edc:cname="LUNF" edc:nzwidth="0x1" edc:desc="Low Underflow Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="HUNF" edc:nzwidth="0x1" edc:desc="High Underflow Interrupt Enable"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="LCMP0" edc:nzwidth="0x1" edc:desc="Low Compare 0 Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="LCMP1" edc:nzwidth="0x1" edc:desc="Low Compare 1 Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="LCMP2" edc:nzwidth="0x1" edc:desc="Low Compare 2 Interrupt Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TCA0" edc:cname="INTFLAGS" edc:nzwidth="0x8" edc:access="-nnn--nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x73" edc:addr="0xA0B">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCA0">
            <edc:SFRFieldDef edc:cname="LUNF" edc:nzwidth="0x1" edc:desc="Low Underflow Interrupt Flag"/>
            <edc:SFRFieldDef edc:cname="HUNF" edc:nzwidth="0x1" edc:desc="High Underflow Interrupt Flag"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="LCMP0" edc:nzwidth="0x1" edc:desc="Low Compare 2 Interrupt Flag"/>
            <edc:SFRFieldDef edc:cname="LCMP1" edc:nzwidth="0x1" edc:desc="Low Compare 1 Interrupt Flag"/>
            <edc:SFRFieldDef edc:cname="LCMP2" edc:nzwidth="0x1" edc:desc="Low Compare 0 Interrupt Flag"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TCA0" edc:cname="DBGCTRL" edc:nzwidth="0x8" edc:access="-------n" edc:por="00000000" edc:mclr="00000000" edc:impl="0x1" edc:addr="0xA0E">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCA0">
            <edc:SFRFieldDef edc:cname="DBGRUN" edc:nzwidth="0x1" edc:desc="Debug Run"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TCA0" edc:cname="LCNT" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:addr="0xA20"/>
      <edc:SFRDef ltx:memberofperipheral="TCA0" edc:cname="HCNT" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:addr="0xA21"/>
      <edc:SFRDef ltx:memberofperipheral="TCA0" edc:cname="LPER" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:addr="0xA26"/>
      <edc:SFRDef ltx:memberofperipheral="TCA0" edc:cname="HPER" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:addr="0xA27"/>
      <edc:SFRDef ltx:memberofperipheral="TCA0" edc:cname="LCMP0" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:addr="0xA28"/>
      <edc:SFRDef ltx:memberofperipheral="TCA0" edc:cname="HCMP0" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:addr="0xA29"/>
      <edc:SFRDef ltx:memberofperipheral="TCA0" edc:cname="LCMP1" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:addr="0xA2A"/>
      <edc:SFRDef ltx:memberofperipheral="TCA0" edc:cname="HCMP1" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:addr="0xA2B"/>
      <edc:SFRDef ltx:memberofperipheral="TCA0" edc:cname="LCMP2" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:addr="0xA2C"/>
      <edc:SFRDef ltx:memberofperipheral="TCA0" edc:cname="HCMP2" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:addr="0xA2D"/>
    </edc:RegisterMap>
  </edc:DataSpace>
  <edc:PinList edc:ppsflavor="atmel">
    <edc:Pin>
      <edc:VirtualPin edc:name="PA2"/>
      <edc:VirtualPin edc:name="AIN2" edc:ppsfunction="AIN0" ltx:memberofperipheral="ADC0"/>
      <edc:VirtualPin edc:name="EVOUT0" edc:ppsfunction="EVSYS" ltx:memberofperipheral="EVSYS"/>
      <edc:VirtualPin edc:name="LUT0_IN2" edc:ppsfunction="CCL_IN" ltx:memberofperipheral="CCL"/>
      <edc:VirtualPin edc:name="MISO" edc:ppsfunction="SPI" ltx:memberofperipheral="SPI0"/>
      <edc:VirtualPin edc:name="PIN2" edc:ppsfunction="IOPORT" ltx:memberofperipheral="PORTA"/>
      <edc:VirtualPin edc:name="RXD" edc:ppsfunction="USART0_ALT" ltx:memberofperipheral="USART0"/>
      <edc:VirtualPin edc:name="RXD" edc:ppsfunction="USART1" ltx:memberofperipheral="USART1"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PA3"/>
      <edc:VirtualPin edc:name="AIN3" edc:ppsfunction="AIN0" ltx:memberofperipheral="ADC0"/>
      <edc:VirtualPin edc:name="CLKI" edc:ppsfunction="CLKCTRL" ltx:memberofperipheral="CLKCTRL"/>
      <edc:VirtualPin edc:name="PIN3" edc:ppsfunction="IOPORT" ltx:memberofperipheral="PORTA"/>
      <edc:VirtualPin edc:name="SCK" edc:ppsfunction="SPI" ltx:memberofperipheral="SPI0"/>
      <edc:VirtualPin edc:name="WO0B1" edc:ppsfunction="TCB1" ltx:memberofperipheral="TCB1"/>
      <edc:VirtualPin edc:name="WO3A0" edc:ppsfunction="TCA" ltx:memberofperipheral="TCA0"/>
      <edc:VirtualPin edc:name="XCK" edc:ppsfunction="USART0_ALT" ltx:memberofperipheral="USART0"/>
      <edc:VirtualPin edc:name="XCK" edc:ppsfunction="USART1" ltx:memberofperipheral="USART1"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="GND1"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="VCC"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PA4"/>
      <edc:VirtualPin edc:name="AIN4" edc:ppsfunction="AIN0" ltx:memberofperipheral="ADC0"/>
      <edc:VirtualPin edc:name="LUT0_OUT0" edc:ppsfunction="CCL" ltx:memberofperipheral="CCL"/>
      <edc:VirtualPin edc:name="PIN4" edc:ppsfunction="IOPORT" ltx:memberofperipheral="PORTA"/>
      <edc:VirtualPin edc:name="SS" edc:ppsfunction="SPI" ltx:memberofperipheral="SPI0"/>
      <edc:VirtualPin edc:name="WO4A0" edc:ppsfunction="TCA" ltx:memberofperipheral="TCA0"/>
      <edc:VirtualPin edc:name="XDIR" edc:ppsfunction="USART0_ALT" ltx:memberofperipheral="USART0"/>
      <edc:VirtualPin edc:name="XDIR" edc:ppsfunction="USART1" ltx:memberofperipheral="USART1"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PA5"/>
      <edc:VirtualPin edc:name="AIN5" edc:ppsfunction="AIN0" ltx:memberofperipheral="ADC0"/>
      <edc:VirtualPin edc:name="LUT3_OUT0" edc:ppsfunction="CCL_ALT" ltx:memberofperipheral="CCL"/>
      <edc:VirtualPin edc:name="OUT0" edc:ppsfunction="AC0" ltx:memberofperipheral="AC0"/>
      <edc:VirtualPin edc:name="PIN5" edc:ppsfunction="IOPORT" ltx:memberofperipheral="PORTA"/>
      <edc:VirtualPin edc:name="WO0B0" edc:ppsfunction="TCB0" ltx:memberofperipheral="TCB0"/>
      <edc:VirtualPin edc:name="WO5A0" edc:ppsfunction="TCA" ltx:memberofperipheral="TCA0"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PA6"/>
      <edc:VirtualPin edc:name="AIN6" edc:ppsfunction="AIN0" ltx:memberofperipheral="ADC0"/>
      <edc:VirtualPin edc:name="N0" edc:ppsfunction="AC0" ltx:memberofperipheral="AC0"/>
      <edc:VirtualPin edc:name="PIN6" edc:ppsfunction="IOPORT" ltx:memberofperipheral="PORTA"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PA7"/>
      <edc:VirtualPin edc:name="AIN7" edc:ppsfunction="AIN0" ltx:memberofperipheral="ADC0"/>
      <edc:VirtualPin edc:name="EVOUT0" edc:ppsfunction="EVSYS_ALT" ltx:memberofperipheral="EVSYS"/>
      <edc:VirtualPin edc:name="LUT1_OUT0" edc:ppsfunction="CCL" ltx:memberofperipheral="CCL"/>
      <edc:VirtualPin edc:name="P0" edc:ppsfunction="AC0" ltx:memberofperipheral="AC0"/>
      <edc:VirtualPin edc:name="PIN7" edc:ppsfunction="IOPORT" ltx:memberofperipheral="PORTA"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PB7"/>
      <edc:VirtualPin edc:name="EVOUT1" edc:ppsfunction="EVSYS_ALT" ltx:memberofperipheral="EVSYS"/>
      <edc:VirtualPin edc:name="PIN7" edc:ppsfunction="IOPORT" ltx:memberofperipheral="PORTB"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PB6"/>
      <edc:VirtualPin edc:name="LUT2_OUT0" edc:ppsfunction="CCL_ALT" ltx:memberofperipheral="CCL"/>
      <edc:VirtualPin edc:name="P3" edc:ppsfunction="AC0" ltx:memberofperipheral="AC0"/>
      <edc:VirtualPin edc:name="PIN6" edc:ppsfunction="IOPORT" ltx:memberofperipheral="PORTB"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PB5"/>
      <edc:VirtualPin edc:name="AIN8" edc:ppsfunction="AIN0" ltx:memberofperipheral="ADC0"/>
      <edc:VirtualPin edc:name="CLKO" edc:ppsfunction="CLKCTRL" ltx:memberofperipheral="CLKCTRL"/>
      <edc:VirtualPin edc:name="P1" edc:ppsfunction="AC0" ltx:memberofperipheral="AC0"/>
      <edc:VirtualPin edc:name="PIN5" edc:ppsfunction="IOPORT" ltx:memberofperipheral="PORTB"/>
      <edc:VirtualPin edc:name="WO2A0" edc:ppsfunction="TCA_ALT" ltx:memberofperipheral="TCA0"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PB4"/>
      <edc:VirtualPin edc:name="AIN9" edc:ppsfunction="AIN0" ltx:memberofperipheral="ADC0"/>
      <edc:VirtualPin edc:name="LUT0_OUT0" edc:ppsfunction="CCL_ALT" ltx:memberofperipheral="CCL"/>
      <edc:VirtualPin edc:name="N1" edc:ppsfunction="AC0" ltx:memberofperipheral="AC0"/>
      <edc:VirtualPin edc:name="PIN4" edc:ppsfunction="IOPORT" ltx:memberofperipheral="PORTB"/>
      <edc:VirtualPin edc:name="RESET_ALT" edc:ppsfunction="OTHER" ltx:memberofperipheral="RSTCTRL"/>
      <edc:VirtualPin edc:name="WO1A0" edc:ppsfunction="TCA_ALT" ltx:memberofperipheral="TCA0"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PB3"/>
      <edc:VirtualPin edc:name="LUT2_OUT0" edc:ppsfunction="CCL" ltx:memberofperipheral="CCL"/>
      <edc:VirtualPin edc:name="PIN3" edc:ppsfunction="IOPORT" ltx:memberofperipheral="PORTB"/>
      <edc:VirtualPin edc:name="RXD" edc:ppsfunction="USART0" ltx:memberofperipheral="USART0"/>
      <edc:VirtualPin edc:name="TOSC1" edc:ppsfunction="CLKCTRL" ltx:memberofperipheral="CLKCTRL"/>
      <edc:VirtualPin edc:name="WO0A0" edc:ppsfunction="TCA_ALT" ltx:memberofperipheral="TCA0"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PB2"/>
      <edc:VirtualPin edc:name="EVOUT1" edc:ppsfunction="EVSYS" ltx:memberofperipheral="EVSYS"/>
      <edc:VirtualPin edc:name="LUT2_IN2" edc:ppsfunction="CCL_IN" ltx:memberofperipheral="CCL"/>
      <edc:VirtualPin edc:name="PIN2" edc:ppsfunction="IOPORT" ltx:memberofperipheral="PORTB"/>
      <edc:VirtualPin edc:name="TOSC2" edc:ppsfunction="CLKCTRL" ltx:memberofperipheral="CLKCTRL"/>
      <edc:VirtualPin edc:name="TXD" edc:ppsfunction="USART0" ltx:memberofperipheral="USART0"/>
      <edc:VirtualPin edc:name="WO2A0" edc:ppsfunction="TCA" ltx:memberofperipheral="TCA0"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PB1"/>
      <edc:VirtualPin edc:name="AIN10" edc:ppsfunction="AIN0" ltx:memberofperipheral="ADC0"/>
      <edc:VirtualPin edc:name="LUT2_IN1" edc:ppsfunction="CCL_IN" ltx:memberofperipheral="CCL"/>
      <edc:VirtualPin edc:name="P2" edc:ppsfunction="AC0" ltx:memberofperipheral="AC0"/>
      <edc:VirtualPin edc:name="PIN1" edc:ppsfunction="IOPORT" ltx:memberofperipheral="PORTB"/>
      <edc:VirtualPin edc:name="SDA" edc:ppsfunction="I2C" ltx:memberofperipheral="TWI0"/>
      <edc:VirtualPin edc:name="WO1A0" edc:ppsfunction="TCA" ltx:memberofperipheral="TCA0"/>
      <edc:VirtualPin edc:name="XCK" edc:ppsfunction="USART0" ltx:memberofperipheral="USART0"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PB0"/>
      <edc:VirtualPin edc:name="AIN11" edc:ppsfunction="AIN0" ltx:memberofperipheral="ADC0"/>
      <edc:VirtualPin edc:name="LUT2_IN0" edc:ppsfunction="CCL_IN" ltx:memberofperipheral="CCL"/>
      <edc:VirtualPin edc:name="N2" edc:ppsfunction="AC0" ltx:memberofperipheral="AC0"/>
      <edc:VirtualPin edc:name="PIN0" edc:ppsfunction="IOPORT" ltx:memberofperipheral="PORTB"/>
      <edc:VirtualPin edc:name="SCL" edc:ppsfunction="I2C" ltx:memberofperipheral="TWI0"/>
      <edc:VirtualPin edc:name="WO0A0" edc:ppsfunction="TCA" ltx:memberofperipheral="TCA0"/>
      <edc:VirtualPin edc:name="XDIR" edc:ppsfunction="USART0" ltx:memberofperipheral="USART0"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PC0"/>
      <edc:VirtualPin edc:name="AIN12" edc:ppsfunction="AIN0" ltx:memberofperipheral="ADC0"/>
      <edc:VirtualPin edc:name="LUT3_IN0" edc:ppsfunction="CCL_IN" ltx:memberofperipheral="CCL"/>
      <edc:VirtualPin edc:name="PIN0" edc:ppsfunction="IOPORT" ltx:memberofperipheral="PORTC"/>
      <edc:VirtualPin edc:name="SCK" edc:ppsfunction="SPI_ALT" ltx:memberofperipheral="SPI0"/>
      <edc:VirtualPin edc:name="WO0B0" edc:ppsfunction="TCB0_ALT" ltx:memberofperipheral="TCB0"/>
      <edc:VirtualPin edc:name="XCK" edc:ppsfunction="USART1_ALT" ltx:memberofperipheral="USART1"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PC1"/>
      <edc:VirtualPin edc:name="AIN13" edc:ppsfunction="AIN0" ltx:memberofperipheral="ADC0"/>
      <edc:VirtualPin edc:name="LUT1_OUT0" edc:ppsfunction="CCL_ALT" ltx:memberofperipheral="CCL"/>
      <edc:VirtualPin edc:name="LUT3_IN1" edc:ppsfunction="CCL_IN" ltx:memberofperipheral="CCL"/>
      <edc:VirtualPin edc:name="MISO" edc:ppsfunction="SPI_ALT" ltx:memberofperipheral="SPI0"/>
      <edc:VirtualPin edc:name="PIN1" edc:ppsfunction="IOPORT" ltx:memberofperipheral="PORTC"/>
      <edc:VirtualPin edc:name="RXD" edc:ppsfunction="USART1_ALT" ltx:memberofperipheral="USART1"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PC2"/>
      <edc:VirtualPin edc:name="AIN14" edc:ppsfunction="AIN0" ltx:memberofperipheral="ADC0"/>
      <edc:VirtualPin edc:name="EVOUT2" edc:ppsfunction="EVSYS" ltx:memberofperipheral="EVSYS"/>
      <edc:VirtualPin edc:name="LUT3_IN2" edc:ppsfunction="CCL_IN" ltx:memberofperipheral="CCL"/>
      <edc:VirtualPin edc:name="MOSI" edc:ppsfunction="SPI_ALT" ltx:memberofperipheral="SPI0"/>
      <edc:VirtualPin edc:name="PIN2" edc:ppsfunction="IOPORT" ltx:memberofperipheral="PORTC"/>
      <edc:VirtualPin edc:name="TXD" edc:ppsfunction="USART1_ALT" ltx:memberofperipheral="USART1"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PC3"/>
      <edc:VirtualPin edc:name="AIN15" edc:ppsfunction="AIN0" ltx:memberofperipheral="ADC0"/>
      <edc:VirtualPin edc:name="LUT1_IN0" edc:ppsfunction="CCL_IN" ltx:memberofperipheral="CCL"/>
      <edc:VirtualPin edc:name="PIN3" edc:ppsfunction="IOPORT" ltx:memberofperipheral="PORTC"/>
      <edc:VirtualPin edc:name="SS" edc:ppsfunction="SPI_ALT" ltx:memberofperipheral="SPI0"/>
      <edc:VirtualPin edc:name="WO3A0" edc:ppsfunction="TCA_ALT" ltx:memberofperipheral="TCA0"/>
      <edc:VirtualPin edc:name="XDIR" edc:ppsfunction="USART1_ALT" ltx:memberofperipheral="USART1"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PC4"/>
      <edc:VirtualPin edc:name="BREAK_ALT" edc:ppsfunction="OTHER" ltx:memberofperipheral="CPU"/>
      <edc:VirtualPin edc:name="LUT1_IN1" edc:ppsfunction="CCL_IN" ltx:memberofperipheral="CCL"/>
      <edc:VirtualPin edc:name="LUT3_OUT0" edc:ppsfunction="CCL" ltx:memberofperipheral="CCL"/>
      <edc:VirtualPin edc:name="PIN4" edc:ppsfunction="IOPORT" ltx:memberofperipheral="PORTC"/>
      <edc:VirtualPin edc:name="WO0B1" edc:ppsfunction="TCB1_ALT" ltx:memberofperipheral="TCB1"/>
      <edc:VirtualPin edc:name="WO4A0" edc:ppsfunction="TCA_ALT" ltx:memberofperipheral="TCA0"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PC5"/>
      <edc:VirtualPin edc:name="LUT1_IN2" edc:ppsfunction="CCL_IN" ltx:memberofperipheral="CCL"/>
      <edc:VirtualPin edc:name="PIN5" edc:ppsfunction="IOPORT" ltx:memberofperipheral="PORTC"/>
      <edc:VirtualPin edc:name="WO5A0" edc:ppsfunction="TCA_ALT" ltx:memberofperipheral="TCA0"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PA0"/>
      <edc:VirtualPin edc:name="LUT0_IN0" edc:ppsfunction="CCL_IN" ltx:memberofperipheral="CCL"/>
      <edc:VirtualPin edc:name="PIN0" edc:ppsfunction="IOPORT" ltx:memberofperipheral="PORTA"/>
      <edc:VirtualPin edc:name="RESET" edc:ppsfunction="OTHER" ltx:memberofperipheral="RSTCTRL"/>
      <edc:VirtualPin edc:name="UPDI" edc:ppsfunction="PDI" ltx:memberofperipheral="SYSCFG"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PA1"/>
      <edc:VirtualPin edc:name="AIN1" edc:ppsfunction="AIN0" ltx:memberofperipheral="ADC0"/>
      <edc:VirtualPin edc:name="BREAK" edc:ppsfunction="OTHER" ltx:memberofperipheral="CPU"/>
      <edc:VirtualPin edc:name="LUT0_IN1" edc:ppsfunction="CCL_IN" ltx:memberofperipheral="CCL"/>
      <edc:VirtualPin edc:name="MOSI" edc:ppsfunction="SPI" ltx:memberofperipheral="SPI0"/>
      <edc:VirtualPin edc:name="PIN1" edc:ppsfunction="IOPORT" ltx:memberofperipheral="PORTA"/>
      <edc:VirtualPin edc:name="TXD" edc:ppsfunction="USART0_ALT" ltx:memberofperipheral="USART0"/>
      <edc:VirtualPin edc:name="TXD" edc:ppsfunction="USART1" ltx:memberofperipheral="USART1"/>
    </edc:Pin>
  </edc:PinList>
</edc:PIC>
